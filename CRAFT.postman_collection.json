{
	"info": {
		"_postman_id": "87a58f5f-8f41-4a21-81d8-36cd615583eb",
		"name": "CRAFT",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Login - Users",
			"item": [
				{
					"name": "Login Exitoso Persona Natural",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0fce8fc1-55d4-48ee-91a3-133020d385c8",
								"exec": [
									"//Pasar token a variable Global",
									"let jsondata = pm.response.json();",
									"pm.globals.set(\"TokenCraft\",jsondata.data.access_token_jwt);",
									"",
									"let estado = pm.response.code;",
									"console.log(estado);",
									"",
									"//Validar que codigo sea el requerido",
									"pm.test(\"Generar Exitoso Persona Natural | Se requiere: Status 200 | valor obtenido: \"+estado, function () {",
									"    pm.expect(estado).to.eql(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"luis.ramirez@kibernum.com\",\n    \"password\": \"Lf-78754076\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/users/login?",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"users",
								"login"
							],
							"query": [
								{
									"key": "",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Login clave inválida Persona Natural",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6c175ebf-0ebd-4279-bb3a-6e67d12b54a8",
								"exec": [
									"//Pasar token a variable Global",
									"",
									"let estado = pm.response.code;",
									"console.log(estado);",
									"",
									"//Validar que codigo sea el requerido",
									"pm.test(\"Login clave inválida Persona Natural | Se requiere: Status 401 | valor obtenido: \"+estado, function () {",
									"    pm.expect(estado).to.eql(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"luis.ramirez@kibernum.com\",\n    \"password\": \"Lf-7875476\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/users/login?",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"users",
								"login"
							],
							"query": [
								{
									"key": "",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Login body inválido Persona Natural",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "81219749-a849-43f5-9561-7edc9a5df4aa",
								"exec": [
									"//Pasar token a variable Global",
									"",
									"let estado = pm.response.code;",
									"console.log(estado);",
									"",
									"//Validar que codigo sea el requerido",
									"pm.test(\"Login body inválido Persona Natural | Se requiere: Status 422 | valor obtenido: \"+estado, function () {",
									"    pm.expect(estado).to.eql(422);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"luis.ramirez@kibernum.com\",\n    \"passord\": \"Lf-7875476\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/users/login?",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"users",
								"login"
							],
							"query": [
								{
									"key": "",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Exitoso Persona Juridica",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5a14a869-8569-4e12-a0ae-bba557ea20fa",
								"exec": [
									"//Pasar token a variable Global",
									"let jsondata = pm.response.json();",
									"pm.globals.set(\"TokenCraft\",jsondata.data.access_token_jwt);",
									"",
									"let estado = pm.response.code;",
									"console.log(estado);",
									"",
									"//Validar que codigo sea el requerido",
									"pm.test(\"Login Exitoso Persona Juridica | Se requiere: Status 200 | valor obtenido: \"+estado, function () {",
									"    pm.expect(estado).to.eql(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"alexander.cabrera@kibernum.com\",\n    \"password\": \"Ignacio2020*\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/users/login?",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"users",
								"login"
							],
							"query": [
								{
									"key": "",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Login clave inválida Persona Juridica",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2e8b7c0b-6bb2-4579-b7b7-bf06399621d5",
								"exec": [
									"let estado = pm.response.code;",
									"console.log(estado);",
									"",
									"//Validar que codigo sea el requerido",
									"pm.test(\"Login clave inválida Persona Juridica | Se requiere: Status 401 | valor obtenido: \"+estado, function () {",
									"    pm.expect(estado).to.eql(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"alexander.cabrera@kibernum.com\",\n    \"password\": \"Ignacio220*\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/users/login?",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"users",
								"login"
							],
							"query": [
								{
									"key": "",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Login body inválido Persona Juridica",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "64858f08-7c7c-48bb-883b-fc257ac32abb",
								"exec": [
									"let estado = pm.response.code;",
									"console.log(estado);",
									"",
									"//Validar que codigo sea el requerido",
									"pm.test(\"Login clave inválida Persona Juridica | Se requiere: Status 422 | valor obtenido: \"+estado, function () {",
									"    pm.expect(estado).to.eql(422);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"alexander.cabrera@kibernum.com\",\n    \"passwrd\": \"Ignacio220*\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/users/login?",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"users",
								"login"
							],
							"query": [
								{
									"key": "",
									"value": null
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Utilidad",
			"item": [
				{
					"name": "GenerarTokenPersona",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "770f597b-77be-4269-9716-66c0ed889f5f",
								"exec": [
									"//Pasar token a variable Global",
									"let jsondata = pm.response.json();",
									"pm.globals.set(\"TokenCraft\",jsondata.data.access_token_jwt);",
									"",
									"let estado = pm.response.code;",
									"console.log(estado);",
									"",
									"//Validar que codigo sea el requerido",
									"pm.test(\"CP_001_Generar Token | Se requiere: Status 200 | valor obtenido: \"+estado, function () {",
									"    pm.expect(estado).to.eql(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"luis.ramirez@kibernum.com\",\n    \"password\": \"Lf-78754076\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/users/login?",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"users",
								"login"
							],
							"query": [
								{
									"key": "",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GenerarToken_mm_prueba",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ed7cf20a-789a-4615-9ef1-8c04ee8aa0fa",
								"exec": [
									"//Pasar token a variable Global",
									"let jsondata = pm.response.json();",
									"pm.globals.set(\"Token_MM_PRUEBA\",jsondata.data.access_token_jwt);",
									"",
									"let estado = pm.response.code;",
									"console.log(estado);",
									"",
									"//Validar que codigo sea el requerido",
									"pm.test(\"CP_001_Generar Token | Se requiere: Status 200 | valor obtenido: \"+estado, function () {",
									"    pm.expect(estado).to.eql(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"pruebaqamail@dteqa.contaline.cl\",\n    \"password\": \"PruebasBL1*\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/users/login?",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"users",
								"login"
							],
							"query": [
								{
									"key": "",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Consultar TRX - USUARIO",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{TokenAlexUser}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://x.pagofacil.online/orders/?searchBy=idUser&idUser=6373",
							"protocol": "https",
							"host": [
								"x",
								"pagofacil",
								"online"
							],
							"path": [
								"orders",
								""
							],
							"query": [
								{
									"key": "searchBy",
									"value": "idUser"
								},
								{
									"key": "idUser",
									"value": "6373"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Consultar TRX",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{TokenAlexUser}}"
							}
						],
						"url": {
							"raw": "https://x.pagofacil.online/trxs/51275147",
							"protocol": "https",
							"host": [
								"x",
								"pagofacil",
								"online"
							],
							"path": [
								"trxs",
								"51275147"
							]
						}
					},
					"response": []
				},
				{
					"name": "BuscarOrden",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{TokenAlexUser}}"
							}
						],
						"url": {
							"raw": "https://x.pagofacil.online/trxs/51275147",
							"protocol": "https",
							"host": [
								"x",
								"pagofacil",
								"online"
							],
							"path": [
								"trxs",
								"51275147"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Registro de comercios",
			"item": [
				{
					"name": "Registro de correo con mayúscula sostenida",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ace90d78-64e7-4c75-8405-9e585e5e7b43",
								"exec": [
									"let jsondata = pm.response.json();\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"\r",
									"pm.test(\"Registro de correo con mayúscula sostenida | Se requiere: Status 200 | valor obtenido: \" + estado, function () {\r",
									"    pm.expect(estado).to.eql(200);\r",
									"});\r",
									"\r",
									"let MensajeError = jsondata.message;\r",
									"console.log(MensajeError);\r",
									"\r",
									"pm.test(\"Se está realizando el registro del usuario\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Se está realizando el registro del usuario\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"PAGOFQQQACAIL051121010@yopmail.com\",\n  \"username\": \"QA_KIBEAQ1R1NUM333440\",\n  \"persona\": 1,\n  \"name\": \"Alexander\",\n  \"lastname\": \"Cabrera\",\n  \"phone\": 952491234,\n  \"password\": \"Pruebas123*\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT_Registro}}/users",
							"host": [
								"{{URL_CRAFT_Registro}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Registro de correo repetido con variaciones en la estructura",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a6358ef2-7357-496d-9e43-676118905014",
								"exec": [
									"let jsondata = pm.response.json();\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"\r",
									"pm.test(\"Registro de correo repetido con variaciones en la estructura | Se requiere: Status 500 | valor obtenido: \" + estado, function () {\r",
									"    pm.expect(estado).to.eql(500);\r",
									"});\r",
									"\r",
									"let MensajeError = jsondata.message;\r",
									"console.log(MensajeError);\r",
									"\r",
									"pm.test(\"Usuario o correo ya existe\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Usuario o correo ya existe\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"PaGoQQQACAil051121010@yopmail.com\",\n  \"username\": \"QA1_KIBER11NUM333440\",\n  \"persona\": 1,\n  \"name\": \"Alexander\",\n  \"lastname\": \"Cabrera\",\n  \"phone\": 952491234,\n  \"password\": \"Pagofacil123*\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT_Registro}}/users",
							"host": [
								"{{URL_CRAFT_Registro}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Registro con username repetido",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2a79db2c-87ad-46ab-a353-e454c5fc4344",
								"exec": [
									"let jsondata = pm.response.json();\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"\r",
									"pm.test(\"Registro con username repetido | Se requiere: Status 500 | valor obtenido: \" + estado, function () {\r",
									"    pm.expect(estado).to.eql(500);\r",
									"});\r",
									"\r",
									"let MensajeError = jsondata.message;\r",
									"console.log(MensajeError);\r",
									"\r",
									"pm.test(\"Usuario o correo ya existe\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Usuario o correo ya existe\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"PAGOFACIL_2_053420@yopmail.com\",\n  \"username\": \"QA_KIBERNUM2\",\n  \"persona\": 1,\n  \"name\": \"Alexander\",\n  \"lastname\": \"Cabrera\",\n  \"phone\": 952491234,\n  \"password\": \"Pagofacil123*\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT_Registro}}/users",
							"host": [
								"{{URL_CRAFT_Registro}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Registro con username y email repetido",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0c859e2b-f724-4543-9583-e89acfad93de",
								"exec": [
									"let jsondata = pm.response.json();\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"\r",
									"pm.test(\"Registro con username y email repetido | Se requiere: Status 500 | valor obtenido: \" + estado, function () {\r",
									"    pm.expect(estado).to.eql(500);\r",
									"});\r",
									"\r",
									"let MensajeError = jsondata.message;\r",
									"console.log(MensajeError);\r",
									"\r",
									"pm.test(\"Usuario o correo ya existe\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Usuario o correo ya existe\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"PAGOFACIL_2_2020@yopmail.com\",\n  \"username\": \"QA_KIBERNUM2\",\n  \"persona\": 1,\n  \"name\": \"Alexander\",\n  \"lastname\": \"Cabrera\",\n  \"phone\": 952491234,\n  \"password\": \"Pagofacil123*\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT_Registro}}/users",
							"host": [
								"{{URL_CRAFT_Registro}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Validación de contraseña incorrecta",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f9d08386-7d10-4230-97fa-9663d9b884bf",
								"exec": [
									"let jsondata = pm.response.json();\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"\r",
									"pm.test(\"Validación de contraseña incorrecta | Se requiere: Status 500 | valor obtenido: \" + estado, function () {\r",
									"    pm.expect(estado).to.eql(500);\r",
									"});\r",
									"\r",
									"let MensajeError = jsondata.message;\r",
									"console.log(MensajeError);\r",
									"\r",
									"pm.test(\"La contraseña no cumple con las políticas\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"La contraseña no cumple con las políticas\");\r",
									"}); "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"PAG2OFACIL_4_2020@yopmail.com\",\n  \"username\": \"QA_KI2BERNUM6\",\n  \"persona\": 1,\n  \"name\": \"Alexander\",\n  \"lastname\": \"Cabrera\",\n  \"phone\": 952491234,\n  \"password\": \"pagofacil\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT_Registro}}/users",
							"host": [
								"{{URL_CRAFT_Registro}}"
							],
							"path": [
								"users"
							]
						},
						"description": "Campo contraseña en CRAFT no valida caracteres especiales, caso contrario a DEV que si valida que a contraseña contenga la sigueinte estructura:\r\n\r\nMínimo de 8 caracteres, máximo 99\r\nAl menos 1 caracter en Mayúscula (A-Z)\r\nAl menos 1 caracter en Minúscula (a-z)\r\nAl menos un Número (0-9)\r\nAl menos un caracter especial (:!@#$%^&*.{[()?,><~)"
					},
					"response": []
				},
				{
					"name": "Validación longitud de contraseña",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dffdcef0-a0f6-4a9f-a358-ea62d2abcff3",
								"exec": [
									"let jsondata = pm.response.json();\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"\r",
									"pm.test(\"Validación de contraseña incorrecta | Se requiere: Status 200 | valor obtenido: \" + estado, function () {\r",
									"    pm.expect(estado).to.eql(200);\r",
									"});\r",
									"\r",
									"let MensajeError = jsondata.message;\r",
									"console.log(MensajeError);\r",
									"\r",
									"pm.test(\"La contraseña no cumple con las políticas\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"La contraseña no cumple con las políticas\");\r",
									"}); "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"PAG21S12OAFACIL_4_2020@yopmail.com\",\n  \"username\": \"QA_KSIBES122RNUM6\",\n  \"persona\": 1,\n  \"name\": \"Alexander\",\n  \"lastname\": \"Cabrera\",\n  \"phone\": 952491234,\n  \"password\": \"Pagoa221_22222AAAAAAAAAAAAAAAAAA\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT_Registro}}/users",
							"host": [
								"{{URL_CRAFT_Registro}}"
							],
							"path": [
								"users"
							]
						},
						"description": "Campo contraseña en CRAFT no valida caracteres especiales, caso contrario a DEV que si valida que a contraseña contenga la sigueinte estructura:\r\n\r\nMínimo de 8 caracteres, máximo 99\r\nAl menos 1 caracter en Mayúscula (A-Z)\r\nAl menos 1 caracter en Minúscula (a-z)\r\nAl menos un Número (0-9)\r\nAl menos un caracter especial (:!@#$%^&*.{[()?,><~)"
					},
					"response": []
				},
				{
					"name": "Registro con datos incompletos",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3570a510-715f-4675-bcd2-e3844e17d7c4",
								"exec": [
									"let jsondata = pm.response.json();\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"\r",
									"pm.test(\"Registro con datos incompletos | Se requiere: Status 200 | valor obtenido: \" + estado, function () {\r",
									"    pm.expect(estado).to.eql(422);\r",
									"});\r",
									"\r",
									"let MensajeError = jsondata.message;\r",
									"console.log(MensajeError);\r",
									"\r",
									"pm.test(\"Response indica datos faltantes\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"username requerida\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"PAGOFACIL_3_2020@yopmail.com\",\n  \"username\": \"\",\n  \"persona\": 1,\n  \"name\": \"Alexander\",\n  \"lastname\": \"\",\n  \"phone\": 952491234,\n  \"password\": \"Pagofacil123*\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT_Registro}}/users",
							"host": [
								"{{URL_CRAFT_Registro}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Registro con parametros faltantes",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d84b8b0d-6072-4e89-a9e5-974284cf5a35",
								"exec": [
									"let jsondata = pm.response.json();\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"\r",
									"pm.test(\"Registro con datos incompletos | Se requiere: Status 200 | valor obtenido: \" + estado, function () {\r",
									"    pm.expect(estado).to.eql(422);\r",
									"});\r",
									"\r",
									"let MensajeError = jsondata.message;\r",
									"console.log(MensajeError);\r",
									"\r",
									"pm.test(\"Response indica datos faltantes\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"email requerida\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"prueba12234\",\n  \"persona\": 1,\n  \"name\": \"Alexander\",\n  \"lastname\": \"Cabrera\",\n  \"phone\": 952491234,\n  \"password\": \"Pagofacil123*\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT_Registro}}/users",
							"host": [
								"{{URL_CRAFT_Registro}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Consulta usuarios",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "81408f99-c170-45e5-bc99-70fa2c9caf4b",
								"exec": [
									"let jsondata = pm.response.json();\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"\r",
									"pm.test(\"Registro con datos incompletos | Se requiere: Status 200 | valor obtenido: \" + estado, function () {\r",
									"    pm.expect(estado).to.eql(422);\r",
									"});\r",
									"\r",
									"let MensajeError = jsondata.message;\r",
									"console.log(MensajeError);\r",
									"\r",
									"pm.test(\"Response indica datos faltantes\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"username requerida\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{TokenAlexUser_DEV}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_DEV}}/v2/users/16010",
							"host": [
								"{{URL_DEV}}"
							],
							"path": [
								"v2",
								"users",
								"16010"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Bank Accounts Stage",
			"item": [
				{
					"name": "Utilitarios",
					"item": [
						{
							"name": "LOGIN CRAFT",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b927a47f-e983-43db-a565-0609047c6c41",
										"exec": [
											"//Pasar token a variable Global\r",
											"let jsondata = pm.response.json();\r",
											"pm.globals.set(\"Token_IvanoUser\",jsondata.data.access_token_jwt);\r",
											"\r",
											"let estado = pm.response.code;\r",
											"console.log(estado);\r",
											"\r",
											"//Validar que codigo sea el requerido\r",
											"pm.test(\"LOGIN CRAFT | Se requiere: Status 200 | valor obtenido: \"+estado, function () {\r",
											"    pm.expect(estado).to.eql(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"ivano.garcia@kibernum.com\",\n  \"password\": \"R3ks_Pagofacil\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_CRAFT}}/users/login",
									"host": [
										"{{URL_CRAFT}}"
									],
									"path": [
										"users",
										"login"
									]
								},
								"description": "Retorna un token con el que se deben realizar las llamadas al resto de los endpoints del API. Sin este token no se pueden acceder a los endpoints.\nSe deben ingresar \"user\" y \"password\" válidos, creados a través del dashborad de Pago Fácil\nNo requiere configuración de autorización\nEndpoints\n- Producción https://apis.pgf.cl\n- Desarrollo https://apis-dev.pgf.cl\n- Craft: https://x.pagofacil.online/users/login"
							},
							"response": []
						},
						{
							"name": "LOGIN CRAFT User Alex",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a2e30b31-486d-4009-bf6d-a8a511aea44a",
										"exec": [
											"//Pasar token a variable Global\r",
											"let jsondata = pm.response.json();\r",
											"pm.globals.set(\"Token_Juridico\",jsondata.data.access_token_jwt);\r",
											"\r",
											"let estado = pm.response.code;\r",
											"console.log(estado);\r",
											"\r",
											"//Validar que codigo sea el requerido\r",
											"pm.test(\"LOGIN CRAFT | Se requiere: Status 200 | valor obtenido: \"+estado, function () {\r",
											"    pm.expect(estado).to.eql(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"alexander.cabrera@kibernum.com\",\n  \"password\": \"Ignacio2020*\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_CRAFT}}/users/login",
									"host": [
										"{{URL_CRAFT}}"
									],
									"path": [
										"users",
										"login"
									]
								},
								"description": "Retorna un token con el que se deben realizar las llamadas al resto de los endpoints del API. Sin este token no se pueden acceder a los endpoints.\nSe deben ingresar \"user\" y \"password\" válidos, creados a través del dashborad de Pago Fácil\nNo requiere configuración de autorización\nEndpoints\n- Producción https://apis.pgf.cl\n- Desarrollo https://apis-dev.pgf.cl\n- Craft: https://x.pagofacil.online/users/login"
							},
							"response": []
						},
						{
							"name": "Login Token con apiToken",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"email\":\"ivano.garcia@kibernum.com\",\"apiToken\":\"6dd4e3c6-c4ee-4379-ba7b-198fc0a9916d\"}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{URL_CRAFT}}/dev/loginToken",
									"host": [
										"{{URL_CRAFT}}"
									],
									"path": [
										"dev",
										"loginToken"
									]
								},
								"description": "Genera un Token JWT usando el correo y un API Token"
							},
							"response": []
						},
						{
							"name": "Login Token con apiToken User Alex",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"email\":\"alexander.cabrera@kibernum.com\",\"apiToken\":\"c8a9190f-6a8d-4e01-9f16-865611e16d57\"}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{URL_ApiToken}}/dev/loginToken",
									"host": [
										"{{URL_ApiToken}}"
									],
									"path": [
										"dev",
										"loginToken"
									]
								},
								"description": "Genera un Token JWT usando el correo y un API Token"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "POST",
					"item": [
						{
							"name": "CP_001_CREAR CUENTA BANCARIA",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb30dd5c-65c7-4643-b71c-0f610ee0b93c",
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"let estado = pm.response.code;",
											"console.log(estado);",
											"pm.test(\"CP_001_CREAR CUENTA BANCARIA: Request Status 201 | Valor obtenido: \"+estado, function () {",
											"    pm.expect(estado).to.eql(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{Token_IvanoUser}}",
										"description": "(Required) Token de acceso para la restiricción de las peticiones, dicho token será en formato JWT y contendrá la información del usuario"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "apiToken",
										"value": "a84ee003-df7f-4ecd-a0ef-57c43e8365f4",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"institutionID\": 9,\r\n  \"rutDestinatario\": \"25546982-7\",\r\n  \"isDefault\": false,\r\n  \"nombreDestinatario\": \"José García V\",\r\n  \"numeroCuenta\": \"021241412\",\r\n  \"emailDestinatario\": \"correo@casilla.com.us\"\r\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://ywp1btqmn1.execute-api.us-west-2.amazonaws.com/craft/ms-bank-account-craft/banksAccounts",
									"protocol": "https",
									"host": [
										"ywp1btqmn1",
										"execute-api",
										"us-west-2",
										"amazonaws",
										"com"
									],
									"path": [
										"craft",
										"ms-bank-account-craft",
										"banksAccounts"
									]
								},
								"description": "Servicio que se encarga de la creación de una cuenta bancaria."
							},
							"response": [
								{
									"name": "Ya existe un registro con esos valores",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-access-token",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
												"description": "(Required) Token de acceso para la restiricción de las peticiones, dicho token será en formato JWT y contendrá la información del usuario"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"institutionID\": 1,\n    \"rutDestinatario\": \"20111111-5\",\n    \"isDefault\": false,\n    \"nombreDestinatario\": \"Juan García\",\n    \"numeroCuenta\": \"11234465\",\n    \"emailDestinatario\": \"correo@casilla.com\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/banksAccount/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"banksAccount",
												""
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": true,\n \"data\": {\n  \"code\": 409,\n  \"message\": \"Ya existe un registro con esos valores\"\n }\n}"
								},
								{
									"name": "No se encontró el parámetro o body para la petición",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-access-token",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
												"description": "(Required) Token de acceso para la restiricción de las peticiones, dicho token será en formato JWT y contendrá la información del usuario"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"institutionID\": 1,\n    \"rutDestinatario\": \"20111111-5\",\n    \"isDefault\": false,\n    \"nombreDestinatario\": \"Juan García\",\n    \"numeroCuenta\": \"11234465\",\n    \"emailDestinatario\": \"correo@casilla.com\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/banksAccount/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"banksAccount",
												""
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": true,\n \"data\": {\n  \"code\": 400,\n  \"message\": \"No se encontró el parámetro o cuerpo de búsqueda\"\n }\n}"
								},
								{
									"name": "La petición no posee la token de seguridad",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-access-token",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
												"description": "(Required) Token de acceso para la restiricción de las peticiones, dicho token será en formato JWT y contendrá la información del usuario"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"institutionID\": 1,\n    \"rutDestinatario\": \"20111111-5\",\n    \"isDefault\": false,\n    \"nombreDestinatario\": \"Juan García\",\n    \"numeroCuenta\": \"11234465\",\n    \"emailDestinatario\": \"correo@casilla.com\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/banksAccount/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"banksAccount",
												""
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"code\": 401,\n  \"message\": \"No posee permisos.\"\n }\n}"
								},
								{
									"name": "Cuenta creada con éxito",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-access-token",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
												"description": "(Required) Token de acceso para la restiricción de las peticiones, dicho token será en formato JWT y contendrá la información del usuario"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"institutionID\": 1,\n    \"rutDestinatario\": \"20111111-5\",\n    \"isDefault\": false,\n    \"nombreDestinatario\": \"Juan García\",\n    \"numeroCuenta\": \"11234465\",\n    \"emailDestinatario\": \"correo@casilla.com\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/banksAccount/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"banksAccount",
												""
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": false,\n \"data\": {\n  \"institutionID\": 1,\n  \"rutDestinatario\": \"20111111-5\",\n  \"isDefault\": false,\n  \"nombreDestinatario\": \"Juan García\",\n  \"numeroCuenta\": \"11234465\",\n  \"emailDestinatario\": \"correo@casilla.com\"\n }\n}"
								}
							]
						},
						{
							"name": "CP_001_CREAR CUENTA BANCARIA Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "57512543-d3a0-4170-ae15-cfc5d61179b6",
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"let estado = pm.response.code;",
											"console.log(estado);",
											"pm.test(\"CP_001_CREAR CUENTA BANCARIA: Request Status 201 | Valor obtenido: \"+estado, function () {",
											"    pm.expect(estado).to.eql(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) Token de acceso para la restiricción de las peticiones, dicho token será en formato JWT y contendrá la información del usuario",
										"key": "Authorization",
										"value": "{{Token_Juridico}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "apiToken",
										"type": "text",
										"value": "c8a9190f-6a8d-4e01-9f16-865611e16d57"
									},
									{
										"key": "",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"institutionID\": 9,\r\n  \"rutDestinatario\": \"25546982-7\",\r\n  \"isDefault\": false,\r\n  \"nombreDestinatario\": \"José García V\",\r\n  \"numeroCuenta\": \"021241412\",\r\n  \"emailDestinatario\": \"correo@casilla.com.us\"\r\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://ywp1btqmn1.execute-api.us-west-2.amazonaws.com/craft/ms-bank-account-craft/banksAccounts",
									"protocol": "https",
									"host": [
										"ywp1btqmn1",
										"execute-api",
										"us-west-2",
										"amazonaws",
										"com"
									],
									"path": [
										"craft",
										"ms-bank-account-craft",
										"banksAccounts"
									]
								},
								"description": "Servicio que se encarga de la creación de una cuenta bancaria."
							},
							"response": [
								{
									"name": "Ya existe un registro con esos valores",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-access-token",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
												"description": "(Required) Token de acceso para la restiricción de las peticiones, dicho token será en formato JWT y contendrá la información del usuario"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"institutionID\": 1,\n    \"rutDestinatario\": \"20111111-5\",\n    \"isDefault\": false,\n    \"nombreDestinatario\": \"Juan García\",\n    \"numeroCuenta\": \"11234465\",\n    \"emailDestinatario\": \"correo@casilla.com\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/banksAccount/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"banksAccount",
												""
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": true,\n \"data\": {\n  \"code\": 409,\n  \"message\": \"Ya existe un registro con esos valores\"\n }\n}"
								},
								{
									"name": "No se encontró el parámetro o body para la petición",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-access-token",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
												"description": "(Required) Token de acceso para la restiricción de las peticiones, dicho token será en formato JWT y contendrá la información del usuario"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"institutionID\": 1,\n    \"rutDestinatario\": \"20111111-5\",\n    \"isDefault\": false,\n    \"nombreDestinatario\": \"Juan García\",\n    \"numeroCuenta\": \"11234465\",\n    \"emailDestinatario\": \"correo@casilla.com\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/banksAccount/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"banksAccount",
												""
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": true,\n \"data\": {\n  \"code\": 400,\n  \"message\": \"No se encontró el parámetro o cuerpo de búsqueda\"\n }\n}"
								},
								{
									"name": "Cuenta creada con éxito",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-access-token",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
												"description": "(Required) Token de acceso para la restiricción de las peticiones, dicho token será en formato JWT y contendrá la información del usuario"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"institutionID\": 1,\n    \"rutDestinatario\": \"20111111-5\",\n    \"isDefault\": false,\n    \"nombreDestinatario\": \"Juan García\",\n    \"numeroCuenta\": \"11234465\",\n    \"emailDestinatario\": \"correo@casilla.com\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/banksAccount/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"banksAccount",
												""
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": false,\n \"data\": {\n  \"institutionID\": 1,\n  \"rutDestinatario\": \"20111111-5\",\n  \"isDefault\": false,\n  \"nombreDestinatario\": \"Juan García\",\n  \"numeroCuenta\": \"11234465\",\n  \"emailDestinatario\": \"correo@casilla.com\"\n }\n}"
								},
								{
									"name": "La petición no posee la token de seguridad",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-access-token",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
												"description": "(Required) Token de acceso para la restiricción de las peticiones, dicho token será en formato JWT y contendrá la información del usuario"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"institutionID\": 1,\n    \"rutDestinatario\": \"20111111-5\",\n    \"isDefault\": false,\n    \"nombreDestinatario\": \"Juan García\",\n    \"numeroCuenta\": \"11234465\",\n    \"emailDestinatario\": \"correo@casilla.com\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/banksAccount/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"banksAccount",
												""
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"code\": 401,\n  \"message\": \"No posee permisos.\"\n }\n}"
								}
							]
						},
						{
							"name": "CP_002_VALIDAR CREACIÓN DE CUENTA INVALIDA",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "617bff1d-de93-456f-96b4-415e634d0e77",
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"let estado = pm.response.code;",
											"console.log(estado);",
											"pm.test(\"CP_002_VALIDAR CREACIÓN DE CUENTA INVALIDA: Request Status 200 | Valor obtenido: \"+estado, function () {",
											"    pm.expect(estado).to.eql(201);",
											"});",
											"",
											"let error = jsonData.message;",
											"console.log(error);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) Token de acceso para la restiricción de las peticiones, dicho token será en formato JWT y contendrá la información del usuario",
										"key": "Authorization",
										"value": "{{Token_IvanoUser}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "apiToken",
										"type": "text",
										"value": "a84ee003-df7f-4ecd-a0ef-57c43e8365f4"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"institutionID\": 5,\r\n  \"rutDestinatario\": \"25546982-7\",\r\n  \"isDefault\": false,\r\n  \"nombreDestinatario\": \"José García V\",\r\n  \"numeroCuenta\": \"021241412\",\r\n  \"emailDestinatario\": \"correo@casilla.com.us\"\r\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://ywp1btqmn1.execute-api.us-west-2.amazonaws.com/craft/ms-bank-account-craft/banksAccounts",
									"protocol": "https",
									"host": [
										"ywp1btqmn1",
										"execute-api",
										"us-west-2",
										"amazonaws",
										"com"
									],
									"path": [
										"craft",
										"ms-bank-account-craft",
										"banksAccounts"
									]
								},
								"description": "Servicio que se encarga de la creación de una cuenta bancaria."
							},
							"response": [
								{
									"name": "La petición no posee la token de seguridad",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-access-token",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
												"description": "(Required) Token de acceso para la restiricción de las peticiones, dicho token será en formato JWT y contendrá la información del usuario"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"institutionID\": 1,\n    \"rutDestinatario\": \"20111111-5\",\n    \"isDefault\": false,\n    \"nombreDestinatario\": \"Juan García\",\n    \"numeroCuenta\": \"11234465\",\n    \"emailDestinatario\": \"correo@casilla.com\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/banksAccount/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"banksAccount",
												""
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"code\": 401,\n  \"message\": \"No posee permisos.\"\n }\n}"
								},
								{
									"name": "Cuenta creada con éxito",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-access-token",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
												"description": "(Required) Token de acceso para la restiricción de las peticiones, dicho token será en formato JWT y contendrá la información del usuario"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"institutionID\": 1,\n    \"rutDestinatario\": \"20111111-5\",\n    \"isDefault\": false,\n    \"nombreDestinatario\": \"Juan García\",\n    \"numeroCuenta\": \"11234465\",\n    \"emailDestinatario\": \"correo@casilla.com\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/banksAccount/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"banksAccount",
												""
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": false,\n \"data\": {\n  \"institutionID\": 1,\n  \"rutDestinatario\": \"20111111-5\",\n  \"isDefault\": false,\n  \"nombreDestinatario\": \"Juan García\",\n  \"numeroCuenta\": \"11234465\",\n  \"emailDestinatario\": \"correo@casilla.com\"\n }\n}"
								},
								{
									"name": "No se encontró el parámetro o body para la petición",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-access-token",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
												"description": "(Required) Token de acceso para la restiricción de las peticiones, dicho token será en formato JWT y contendrá la información del usuario"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"institutionID\": 1,\n    \"rutDestinatario\": \"20111111-5\",\n    \"isDefault\": false,\n    \"nombreDestinatario\": \"Juan García\",\n    \"numeroCuenta\": \"11234465\",\n    \"emailDestinatario\": \"correo@casilla.com\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/banksAccount/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"banksAccount",
												""
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": true,\n \"data\": {\n  \"code\": 400,\n  \"message\": \"No se encontró el parámetro o cuerpo de búsqueda\"\n }\n}"
								},
								{
									"name": "Ya existe un registro con esos valores",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-access-token",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
												"description": "(Required) Token de acceso para la restiricción de las peticiones, dicho token será en formato JWT y contendrá la información del usuario"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"institutionID\": 1,\n    \"rutDestinatario\": \"20111111-5\",\n    \"isDefault\": false,\n    \"nombreDestinatario\": \"Juan García\",\n    \"numeroCuenta\": \"11234465\",\n    \"emailDestinatario\": \"correo@casilla.com\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/banksAccount/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"banksAccount",
												""
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": true,\n \"data\": {\n  \"code\": 409,\n  \"message\": \"Ya existe un registro con esos valores\"\n }\n}"
								}
							]
						},
						{
							"name": "CP_003_VALIDAR RUT INVALIDO",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e779d62a-92bf-4375-918e-a99f4851a435",
										"exec": [
											"",
											"let jsonData = pm.response.json();",
											"",
											"let estado = pm.response.code;",
											"console.log(estado);",
											"pm.test(\"CP_003_VALIDAR RUT INVALIDO | Se requiere: Status 201 | Valor obtenido: \"+estado, function () {",
											"    pm.expect(estado).to.eql(201);",
											"});",
											"",
											"",
											"let error = jsonData.message;",
											"console.log(error);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) Token de acceso para la restiricción de las peticiones, dicho token será en formato JWT y contendrá la información del usuario",
										"key": "Authorization",
										"value": "{{Token_IvanoUser}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "apiToken",
										"type": "text",
										"value": "a84ee003-df7f-4ecd-a0ef-57c43e8365f4"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"institutionID\": 7,\n    \"rutDestinatario\": \"25546982-5\",\n    \"isDefault\": false,\n    \"nombreDestinatario\": \"José García V\",\n    \"numeroCuenta\": \"021241412\",\n    \"emailDestinatario\": \"correo@casilla.com.us\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://ywp1btqmn1.execute-api.us-west-2.amazonaws.com/craft/ms-bank-account-craft/banksAccounts",
									"protocol": "https",
									"host": [
										"ywp1btqmn1",
										"execute-api",
										"us-west-2",
										"amazonaws",
										"com"
									],
									"path": [
										"craft",
										"ms-bank-account-craft",
										"banksAccounts"
									]
								},
								"description": "Servicio que se encarga de la creación de una cuenta bancaria."
							},
							"response": [
								{
									"name": "Ya existe un registro con esos valores",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-access-token",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
												"description": "(Required) Token de acceso para la restiricción de las peticiones, dicho token será en formato JWT y contendrá la información del usuario"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"institutionID\": 1,\n    \"rutDestinatario\": \"20111111-5\",\n    \"isDefault\": false,\n    \"nombreDestinatario\": \"Juan García\",\n    \"numeroCuenta\": \"11234465\",\n    \"emailDestinatario\": \"correo@casilla.com\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/banksAccount/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"banksAccount",
												""
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": true,\n \"data\": {\n  \"code\": 409,\n  \"message\": \"Ya existe un registro con esos valores\"\n }\n}"
								},
								{
									"name": "La petición no posee la token de seguridad",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-access-token",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
												"description": "(Required) Token de acceso para la restiricción de las peticiones, dicho token será en formato JWT y contendrá la información del usuario"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"institutionID\": 1,\n    \"rutDestinatario\": \"20111111-5\",\n    \"isDefault\": false,\n    \"nombreDestinatario\": \"Juan García\",\n    \"numeroCuenta\": \"11234465\",\n    \"emailDestinatario\": \"correo@casilla.com\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/banksAccount/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"banksAccount",
												""
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"code\": 401,\n  \"message\": \"No posee permisos.\"\n }\n}"
								},
								{
									"name": "No se encontró el parámetro o body para la petición",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-access-token",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
												"description": "(Required) Token de acceso para la restiricción de las peticiones, dicho token será en formato JWT y contendrá la información del usuario"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"institutionID\": 1,\n    \"rutDestinatario\": \"20111111-5\",\n    \"isDefault\": false,\n    \"nombreDestinatario\": \"Juan García\",\n    \"numeroCuenta\": \"11234465\",\n    \"emailDestinatario\": \"correo@casilla.com\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/banksAccount/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"banksAccount",
												""
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": true,\n \"data\": {\n  \"code\": 400,\n  \"message\": \"No se encontró el parámetro o cuerpo de búsqueda\"\n }\n}"
								},
								{
									"name": "Cuenta creada con éxito",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-access-token",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
												"description": "(Required) Token de acceso para la restiricción de las peticiones, dicho token será en formato JWT y contendrá la información del usuario"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"institutionID\": 1,\n    \"rutDestinatario\": \"20111111-5\",\n    \"isDefault\": false,\n    \"nombreDestinatario\": \"Juan García\",\n    \"numeroCuenta\": \"11234465\",\n    \"emailDestinatario\": \"correo@casilla.com\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/banksAccount/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"banksAccount",
												""
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": false,\n \"data\": {\n  \"institutionID\": 1,\n  \"rutDestinatario\": \"20111111-5\",\n  \"isDefault\": false,\n  \"nombreDestinatario\": \"Juan García\",\n  \"numeroCuenta\": \"11234465\",\n  \"emailDestinatario\": \"correo@casilla.com\"\n }\n}"
								}
							]
						},
						{
							"name": "CP_004_CREACIÓN DE CUENTA SIN AUTENTICACIÓN",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c620e8e0-6c95-4030-9e42-9f92fb8ce7d6",
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"let estado = pm.response.code;",
											"console.log(estado);",
											"pm.test(\"CP_004_CREACIÓN DE CUENTA SIN AUTENTICACIÓN | Se requiere Status: 401 | Valor obtenido: \"+estado, function () {",
											"    pm.expect(estado).to.eql(401);",
											"});",
											"",
											"let error = jsonData.message;",
											"console.log(error);",
											"pm.test(\"CP_004_CREACIÓN DE CUENTA SIN AUTENTICACIÓN | Se require mensaje: Unauthorized | Valor obtenido: \"+error, function () {",
											"    pm.expect(error).to.eql(\"Unauthorized\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"institutionID\": 9,\r\n  \"rutDestinatario\": \"25546982-7\",\r\n  \"isDefault\": false,\r\n  \"nombreDestinatario\": \"José García V\",\r\n  \"numeroCuenta\": \"021241412\",\r\n  \"emailDestinatario\": \"correo@casilla.com.us\"\r\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://ywp1btqmn1.execute-api.us-west-2.amazonaws.com/craft/ms-bank-account-craft/banksAccounts",
									"protocol": "https",
									"host": [
										"ywp1btqmn1",
										"execute-api",
										"us-west-2",
										"amazonaws",
										"com"
									],
									"path": [
										"craft",
										"ms-bank-account-craft",
										"banksAccounts"
									]
								},
								"description": "Servicio que se encarga de la creación de una cuenta bancaria."
							},
							"response": [
								{
									"name": "Cuenta creada con éxito",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-access-token",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
												"description": "(Required) Token de acceso para la restiricción de las peticiones, dicho token será en formato JWT y contendrá la información del usuario"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"institutionID\": 1,\n    \"rutDestinatario\": \"20111111-5\",\n    \"isDefault\": false,\n    \"nombreDestinatario\": \"Juan García\",\n    \"numeroCuenta\": \"11234465\",\n    \"emailDestinatario\": \"correo@casilla.com\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/banksAccount/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"banksAccount",
												""
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": false,\n \"data\": {\n  \"institutionID\": 1,\n  \"rutDestinatario\": \"20111111-5\",\n  \"isDefault\": false,\n  \"nombreDestinatario\": \"Juan García\",\n  \"numeroCuenta\": \"11234465\",\n  \"emailDestinatario\": \"correo@casilla.com\"\n }\n}"
								},
								{
									"name": "No se encontró el parámetro o body para la petición",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-access-token",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
												"description": "(Required) Token de acceso para la restiricción de las peticiones, dicho token será en formato JWT y contendrá la información del usuario"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"institutionID\": 1,\n    \"rutDestinatario\": \"20111111-5\",\n    \"isDefault\": false,\n    \"nombreDestinatario\": \"Juan García\",\n    \"numeroCuenta\": \"11234465\",\n    \"emailDestinatario\": \"correo@casilla.com\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/banksAccount/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"banksAccount",
												""
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": true,\n \"data\": {\n  \"code\": 400,\n  \"message\": \"No se encontró el parámetro o cuerpo de búsqueda\"\n }\n}"
								},
								{
									"name": "Ya existe un registro con esos valores",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-access-token",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
												"description": "(Required) Token de acceso para la restiricción de las peticiones, dicho token será en formato JWT y contendrá la información del usuario"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"institutionID\": 1,\n    \"rutDestinatario\": \"20111111-5\",\n    \"isDefault\": false,\n    \"nombreDestinatario\": \"Juan García\",\n    \"numeroCuenta\": \"11234465\",\n    \"emailDestinatario\": \"correo@casilla.com\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/banksAccount/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"banksAccount",
												""
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": true,\n \"data\": {\n  \"code\": 409,\n  \"message\": \"Ya existe un registro con esos valores\"\n }\n}"
								},
								{
									"name": "La petición no posee la token de seguridad",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-access-token",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
												"description": "(Required) Token de acceso para la restiricción de las peticiones, dicho token será en formato JWT y contendrá la información del usuario"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"institutionID\": 1,\n    \"rutDestinatario\": \"20111111-5\",\n    \"isDefault\": false,\n    \"nombreDestinatario\": \"Juan García\",\n    \"numeroCuenta\": \"11234465\",\n    \"emailDestinatario\": \"correo@casilla.com\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/banksAccount/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"banksAccount",
												""
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"code\": 401,\n  \"message\": \"No posee permisos.\"\n }\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "DELETE",
					"item": [
						{
							"name": "CP_001_Eliminar Cuenta Bancaria",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "84161d83-7139-4772-8014-959cf4e66ead",
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"let estado = pm.response.code;",
											"console.log(estado);",
											"pm.test(\"CP_001_Eliminar Cuenta Bancaria | Se requiere Status: 200 | Valor obtenido: \"+estado, function () {",
											"    pm.expect(estado).to.eql(200);",
											"});",
											"",
											"let error = pm.response;",
											"console.log(error);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"description": "(Required) Token de acceso para la restiricción de las peticiones, dicho token será en formato JWT y contendrá la información del usuario",
										"key": "Authorization",
										"value": "{{Token_IvanoUser}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"bankAccountID\": 325\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://ywp1btqmn1.execute-api.us-west-2.amazonaws.com/craft/ms-bank-account-craft/banksAccounts",
									"protocol": "https",
									"host": [
										"ywp1btqmn1",
										"execute-api",
										"us-west-2",
										"amazonaws",
										"com"
									],
									"path": [
										"craft",
										"ms-bank-account-craft",
										"banksAccounts"
									]
								},
								"description": "Servicio que se encarga del borrado lógico de una cuenta bancaria."
							},
							"response": [
								{
									"name": "No se encontró el parámetro o body para la petición",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "x-access-token",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
												"description": "(Required) Token de acceso para la restiricción de las peticiones, dicho token será en formato JWT y contendrá la información del usuario"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bankAccountID\": 2\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/banksAccount/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"banksAccount",
												""
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": true,\n \"data\": {\n  \"code\": 400,\n  \"message\": \"No se encontró el parámetro o cuerpo de búsqueda\"\n }\n}"
								},
								{
									"name": "La petición no posee la token de seguridad",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "x-access-token",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
												"description": "(Required) Token de acceso para la restiricción de las peticiones, dicho token será en formato JWT y contendrá la información del usuario"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bankAccountID\": 2\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/banksAccount/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"banksAccount",
												""
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"code\": 401,\n  \"message\": \"No posee permisos.\"\n }\n}"
								},
								{
									"name": "Cuenta eliminada con éxito",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "x-access-token",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
												"description": "(Required) Token de acceso para la restiricción de las peticiones, dicho token será en formato JWT y contendrá la información del usuario"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bankAccountID\": 2\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/banksAccount/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"banksAccount",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": false,\n \"data\": {\n  \"code\": 200,\n  \"message\": \"Cuenta eliminada con éxito\"\n }\n}"
								}
							]
						},
						{
							"name": "CP_002_Registro No encontrado",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1e0de07f-d84d-4457-a476-3f13829b3f55",
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"let estado = pm.response.code;",
											"console.log(estado);",
											"pm.test(\"CP_002_Registro No encontrado | Se requiere Status: 404 | Valor obtenido: \"+estado, function () {",
											"    pm.expect(estado).to.eql(404);",
											"});",
											"",
											"let error = pm.response.message;",
											"console.log(error);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"description": "(Required) Token de acceso para la restiricción de las peticiones, dicho token será en formato JWT y contendrá la información del usuario",
										"key": "Authorization",
										"value": "{{Token_IvanoUser}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"bankAccountID\": 1231321321\r\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://ywp1btqmn1.execute-api.us-west-2.amazonaws.com/craft/ms-bank-account-craft/banksAccounts",
									"protocol": "https",
									"host": [
										"ywp1btqmn1",
										"execute-api",
										"us-west-2",
										"amazonaws",
										"com"
									],
									"path": [
										"craft",
										"ms-bank-account-craft",
										"banksAccounts"
									]
								},
								"description": "Servicio que se encarga del borrado lógico de una cuenta bancaria."
							},
							"response": [
								{
									"name": "Cuenta eliminada con éxito",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "x-access-token",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
												"description": "(Required) Token de acceso para la restiricción de las peticiones, dicho token será en formato JWT y contendrá la información del usuario"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bankAccountID\": 2\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/banksAccount/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"banksAccount",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": false,\n \"data\": {\n  \"code\": 200,\n  \"message\": \"Cuenta eliminada con éxito\"\n }\n}"
								},
								{
									"name": "No se encontró el parámetro o body para la petición",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "x-access-token",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
												"description": "(Required) Token de acceso para la restiricción de las peticiones, dicho token será en formato JWT y contendrá la información del usuario"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bankAccountID\": 2\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/banksAccount/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"banksAccount",
												""
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": true,\n \"data\": {\n  \"code\": 400,\n  \"message\": \"No se encontró el parámetro o cuerpo de búsqueda\"\n }\n}"
								},
								{
									"name": "La petición no posee la token de seguridad",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "x-access-token",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
												"description": "(Required) Token de acceso para la restiricción de las peticiones, dicho token será en formato JWT y contendrá la información del usuario"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bankAccountID\": 2\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/banksAccount/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"banksAccount",
												""
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"code\": 401,\n  \"message\": \"No posee permisos.\"\n }\n}"
								}
							]
						},
						{
							"name": "CP_003_Sin Cabecera de autenticación y/o apiToken",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "20fa8b5a-cf4b-488a-8342-f2c708c55bf5",
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"let estado = pm.response.code;",
											"console.log(estado);",
											"pm.test(\"CP_003_Sin Cabecera de autenticación y/o apiToken | Se requiere Status: 401 | Valor obtenido: \"+estado, function () {",
											"    pm.expect(estado).to.eql(401);",
											"});",
											"",
											"let error = jsonData.message;",
											"console.log(error);",
											"pm.test(\"CP_003_Sin Cabecera de autenticación y/o apiToken | Se require mensaje: Unauthorized | Valor obtenido: \"+error, function () {",
											"    pm.expect(error).to.eql(\"Unauthorized\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"bankAccountID\": 323\r\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://ywp1btqmn1.execute-api.us-west-2.amazonaws.com/craft/ms-bank-account-craft/banksAccounts",
									"protocol": "https",
									"host": [
										"ywp1btqmn1",
										"execute-api",
										"us-west-2",
										"amazonaws",
										"com"
									],
									"path": [
										"craft",
										"ms-bank-account-craft",
										"banksAccounts"
									]
								},
								"description": "Servicio que se encarga del borrado lógico de una cuenta bancaria."
							},
							"response": [
								{
									"name": "La petición no posee la token de seguridad",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "x-access-token",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
												"description": "(Required) Token de acceso para la restiricción de las peticiones, dicho token será en formato JWT y contendrá la información del usuario"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bankAccountID\": 2\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/banksAccount/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"banksAccount",
												""
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"code\": 401,\n  \"message\": \"No posee permisos.\"\n }\n}"
								},
								{
									"name": "No se encontró el parámetro o body para la petición",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "x-access-token",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
												"description": "(Required) Token de acceso para la restiricción de las peticiones, dicho token será en formato JWT y contendrá la información del usuario"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bankAccountID\": 2\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/banksAccount/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"banksAccount",
												""
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": true,\n \"data\": {\n  \"code\": 400,\n  \"message\": \"No se encontró el parámetro o cuerpo de búsqueda\"\n }\n}"
								},
								{
									"name": "Cuenta eliminada con éxito",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "x-access-token",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
												"description": "(Required) Token de acceso para la restiricción de las peticiones, dicho token será en formato JWT y contendrá la información del usuario"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bankAccountID\": 2\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/banksAccount/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"banksAccount",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": false,\n \"data\": {\n  \"code\": 200,\n  \"message\": \"Cuenta eliminada con éxito\"\n }\n}"
								}
							]
						},
						{
							"name": "CP_004_Eliminar Cuenta ya Eliminada",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3bdb18bc-3dc8-4564-b306-eda28da1336d",
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"let estado = pm.response.code;",
											"console.log(estado);",
											"pm.test(\"CP_004_Eliminar Cuenta ya Eliminada | Se requiere Status: 200 | Valor obtenido: \"+estado, function () {",
											"    pm.expect(estado).to.eql(200);",
											"});",
											"",
											"let error = pm.response;",
											"console.log(error);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"description": "(Required) Token de acceso para la restiricción de las peticiones, dicho token será en formato JWT y contendrá la información del usuario",
										"key": "Authorization",
										"value": "{{Token_IvanoUser}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"bankAccountID\": 325\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://ywp1btqmn1.execute-api.us-west-2.amazonaws.com/craft/ms-bank-account-craft/banksAccounts",
									"protocol": "https",
									"host": [
										"ywp1btqmn1",
										"execute-api",
										"us-west-2",
										"amazonaws",
										"com"
									],
									"path": [
										"craft",
										"ms-bank-account-craft",
										"banksAccounts"
									]
								},
								"description": "Servicio que se encarga del borrado lógico de una cuenta bancaria."
							},
							"response": [
								{
									"name": "No se encontró el parámetro o body para la petición",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "x-access-token",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
												"description": "(Required) Token de acceso para la restiricción de las peticiones, dicho token será en formato JWT y contendrá la información del usuario"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bankAccountID\": 2\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/banksAccount/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"banksAccount",
												""
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": true,\n \"data\": {\n  \"code\": 400,\n  \"message\": \"No se encontró el parámetro o cuerpo de búsqueda\"\n }\n}"
								},
								{
									"name": "Cuenta eliminada con éxito",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "x-access-token",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
												"description": "(Required) Token de acceso para la restiricción de las peticiones, dicho token será en formato JWT y contendrá la información del usuario"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bankAccountID\": 2\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/banksAccount/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"banksAccount",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": false,\n \"data\": {\n  \"code\": 200,\n  \"message\": \"Cuenta eliminada con éxito\"\n }\n}"
								},
								{
									"name": "La petición no posee la token de seguridad",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "x-access-token",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
												"description": "(Required) Token de acceso para la restiricción de las peticiones, dicho token será en formato JWT y contendrá la información del usuario"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bankAccountID\": 2\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/banksAccount/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"banksAccount",
												""
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"code\": 401,\n  \"message\": \"No posee permisos.\"\n }\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "GET",
					"item": [
						{
							"name": "CP_001_Listar Cuentas Bancarias",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "013f9956-9502-4ba1-b6d3-e55b0e791a86",
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"let estado = pm.response.code;",
											"console.log(estado);",
											"pm.test(\"CP_001_Listar Cuentas Bancarias | Se requiere Status: 200 | Valor obtenido: \"+estado, function () {",
											"    pm.expect(estado).to.eql(200);",
											"});",
											"",
											"let error = jsonData.message;",
											"console.log(error);"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{Token_IvanoUser}}",
										"description": "(Required) Token de acceso para la restiricción de las peticiones, dicho token será en formato JWT y contendrá la información del usuario"
									},
									{
										"key": "",
										"value": "",
										"description": "ApiToken",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://ywp1btqmn1.execute-api.us-west-2.amazonaws.com/craft/ms-bank-account-craft/banksAccounts",
									"protocol": "https",
									"host": [
										"ywp1btqmn1",
										"execute-api",
										"us-west-2",
										"amazonaws",
										"com"
									],
									"path": [
										"craft",
										"ms-bank-account-craft",
										"banksAccounts"
									]
								},
								"description": "Obtiene el listado de las cuentas asociadas a un usuario."
							},
							"response": [
								{
									"name": "La petición fue exitosa pero sin registros, es decir la consulta obtiene cero (0) rregistros",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-access-token",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
												"description": "(Required) Token de acceso para la restiricción de las peticiones, dicho token será en formato JWT y contendrá la información del usuario"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/banksAccounts/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"banksAccounts",
												""
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"code\": 204,\n  \"message\": \"No se encontraron registros\"\n }\n}"
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-access-token",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
												"description": "(Required) Token de acceso para la restiricción de las peticiones, dicho token será en formato JWT y contendrá la información del usuario"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/banksAccounts/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"banksAccounts",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"banksArray\": [\n  {\n   \"rutDestinatario\": \"20.111.111-5\",\n   \"nombreDestinatario\": \"Juan García\",\n   \"numeroCuenta\": \"11234465\",\n   \"emailDestinatario\": \"correo@casilla.com\",\n   \"institutions\": {\n    \"data\": {\n     \"tipo\": 12,\n     \"codigoSBIF\": \"Q1234\",\n     \"codigoRegistro\": \"456789\",\n     \"nombre\": \"BANCO ITAÚ CHILE\"\n    }\n   },\n   \"isDefault\": false,\n   \"created_at\": \"2020-02-12\",\n   \"updated_at\": \"2020-02-18\"\n  },\n  {\n   \"rutDestinatario\": \"20.111.111-5\",\n   \"nombreDestinatario\": \"Juan García\",\n   \"numeroCuenta\": \"11234465\",\n   \"emailDestinatario\": \"correo@casilla.com\",\n   \"institutions\": {\n    \"data\": {\n     \"tipo\": 12,\n     \"codigoSBIF\": \"Q1234\",\n     \"codigoRegistro\": \"456789\",\n     \"nombre\": \"BANCO ITAÚ CHILE\"\n    }\n   },\n   \"isDefault\": false,\n   \"created_at\": \"2020-02-12\",\n   \"updated_at\": \"2020-02-18\"\n  }\n ]\n}"
								},
								{
									"name": "La petición no posee la token de seguridad",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-access-token",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
												"description": "(Required) Token de acceso para la restiricción de las peticiones, dicho token será en formato JWT y contendrá la información del usuario"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/banksAccounts/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"banksAccounts",
												""
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"code\": 401,\n  \"message\": \"No posee permisos.\"\n }\n}"
								}
							]
						},
						{
							"name": "CP_002_Sin cuentas asocidas al usuario",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2b7b4b71-d0a1-4462-abd5-e628bdbea8f9",
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"let estado = pm.response.code;",
											"console.log(estado);",
											"pm.test(\"CP_002_Sin cuentas asocidas al usuario | Se requiere Status: 200 | Valor obtenido: \"+estado, function () {",
											"    pm.expect(estado).to.eql(200);",
											"});",
											"",
											"let error = pm.response.message;",
											"console.log(error);"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) Token de acceso para la restiricción de las peticiones, dicho token será en formato JWT y contendrá la información del usuario",
										"key": "Authorization",
										"value": "{{Token}}"
									},
									{
										"description": "ApiToken",
										"key": "",
										"type": "text",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://ywp1btqmn1.execute-api.us-west-2.amazonaws.com/craft/ms-bank-account-craft/banksAccounts",
									"protocol": "https",
									"host": [
										"ywp1btqmn1",
										"execute-api",
										"us-west-2",
										"amazonaws",
										"com"
									],
									"path": [
										"craft",
										"ms-bank-account-craft",
										"banksAccounts"
									]
								},
								"description": "Obtiene el listado de las cuentas asociadas a un usuario."
							},
							"response": [
								{
									"name": "La petición no posee la token de seguridad",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-access-token",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
												"description": "(Required) Token de acceso para la restiricción de las peticiones, dicho token será en formato JWT y contendrá la información del usuario"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/banksAccounts/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"banksAccounts",
												""
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"code\": 401,\n  \"message\": \"No posee permisos.\"\n }\n}"
								},
								{
									"name": "La petición fue exitosa pero sin registros, es decir la consulta obtiene cero (0) rregistros",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-access-token",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
												"description": "(Required) Token de acceso para la restiricción de las peticiones, dicho token será en formato JWT y contendrá la información del usuario"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/banksAccounts/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"banksAccounts",
												""
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"code\": 204,\n  \"message\": \"No se encontraron registros\"\n }\n}"
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-access-token",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
												"description": "(Required) Token de acceso para la restiricción de las peticiones, dicho token será en formato JWT y contendrá la información del usuario"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/banksAccounts/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"banksAccounts",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"banksArray\": [\n  {\n   \"rutDestinatario\": \"20.111.111-5\",\n   \"nombreDestinatario\": \"Juan García\",\n   \"numeroCuenta\": \"11234465\",\n   \"emailDestinatario\": \"correo@casilla.com\",\n   \"institutions\": {\n    \"data\": {\n     \"tipo\": 12,\n     \"codigoSBIF\": \"Q1234\",\n     \"codigoRegistro\": \"456789\",\n     \"nombre\": \"BANCO ITAÚ CHILE\"\n    }\n   },\n   \"isDefault\": false,\n   \"created_at\": \"2020-02-12\",\n   \"updated_at\": \"2020-02-18\"\n  },\n  {\n   \"rutDestinatario\": \"20.111.111-5\",\n   \"nombreDestinatario\": \"Juan García\",\n   \"numeroCuenta\": \"11234465\",\n   \"emailDestinatario\": \"correo@casilla.com\",\n   \"institutions\": {\n    \"data\": {\n     \"tipo\": 12,\n     \"codigoSBIF\": \"Q1234\",\n     \"codigoRegistro\": \"456789\",\n     \"nombre\": \"BANCO ITAÚ CHILE\"\n    }\n   },\n   \"isDefault\": false,\n   \"created_at\": \"2020-02-12\",\n   \"updated_at\": \"2020-02-18\"\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "CP_003_Sin Cabecera de autenticación y/o apiToken",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f94fe4b3-5f1a-4b05-a083-39245ecf95d2",
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"let estado = pm.response.code;",
											"console.log(estado);",
											"pm.test(\"CP_003_Sin Cabecera de autenticación y/o apiToken | Se requiere Status: 401 | Valor obtenido: \"+estado, function () {",
											"    pm.expect(estado).to.eql(401);",
											"});",
											"",
											"let error = jsonData.message;",
											"console.log(error);",
											"pm.test(\"CP_003_Sin Cabecera de autenticación y/o apiToken | Se require mensaje: Unauthorized | Valor obtenido: \"+error, function () {",
											"    pm.expect(error).to.eql(\"Unauthorized\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) Token de acceso para la restiricción de las peticiones, dicho token será en formato JWT y contendrá la información del usuario",
										"key": "Authorization",
										"value": "{{Token}}",
										"disabled": true
									},
									{
										"description": "ApiToken",
										"key": "",
										"type": "text",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://ywp1btqmn1.execute-api.us-west-2.amazonaws.com/craft/ms-bank-account-craft/banksAccounts",
									"protocol": "https",
									"host": [
										"ywp1btqmn1",
										"execute-api",
										"us-west-2",
										"amazonaws",
										"com"
									],
									"path": [
										"craft",
										"ms-bank-account-craft",
										"banksAccounts"
									]
								},
								"description": "Obtiene el listado de las cuentas asociadas a un usuario."
							},
							"response": [
								{
									"name": "La petición no posee la token de seguridad",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-access-token",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
												"description": "(Required) Token de acceso para la restiricción de las peticiones, dicho token será en formato JWT y contendrá la información del usuario"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/banksAccounts/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"banksAccounts",
												""
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"code\": 401,\n  \"message\": \"No posee permisos.\"\n }\n}"
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-access-token",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
												"description": "(Required) Token de acceso para la restiricción de las peticiones, dicho token será en formato JWT y contendrá la información del usuario"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/banksAccounts/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"banksAccounts",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"banksArray\": [\n  {\n   \"rutDestinatario\": \"20.111.111-5\",\n   \"nombreDestinatario\": \"Juan García\",\n   \"numeroCuenta\": \"11234465\",\n   \"emailDestinatario\": \"correo@casilla.com\",\n   \"institutions\": {\n    \"data\": {\n     \"tipo\": 12,\n     \"codigoSBIF\": \"Q1234\",\n     \"codigoRegistro\": \"456789\",\n     \"nombre\": \"BANCO ITAÚ CHILE\"\n    }\n   },\n   \"isDefault\": false,\n   \"created_at\": \"2020-02-12\",\n   \"updated_at\": \"2020-02-18\"\n  },\n  {\n   \"rutDestinatario\": \"20.111.111-5\",\n   \"nombreDestinatario\": \"Juan García\",\n   \"numeroCuenta\": \"11234465\",\n   \"emailDestinatario\": \"correo@casilla.com\",\n   \"institutions\": {\n    \"data\": {\n     \"tipo\": 12,\n     \"codigoSBIF\": \"Q1234\",\n     \"codigoRegistro\": \"456789\",\n     \"nombre\": \"BANCO ITAÚ CHILE\"\n    }\n   },\n   \"isDefault\": false,\n   \"created_at\": \"2020-02-12\",\n   \"updated_at\": \"2020-02-18\"\n  }\n ]\n}"
								},
								{
									"name": "La petición fue exitosa pero sin registros, es decir la consulta obtiene cero (0) rregistros",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-access-token",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
												"description": "(Required) Token de acceso para la restiricción de las peticiones, dicho token será en formato JWT y contendrá la información del usuario"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/banksAccounts/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"banksAccounts",
												""
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"code\": 204,\n  \"message\": \"No se encontraron registros\"\n }\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Invoice",
			"item": [
				{
					"name": "Utilidad",
					"item": [
						{
							"name": "CP_001_GenerarToken Luis",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4c685933-69c3-4627-8e73-93a68f9786b2",
										"exec": [
											"//Pasar token a variable Global",
											"let jsondata = pm.response.json();",
											"pm.globals.set(\"Token\",jsondata.data.access_token_jwt);",
											"",
											"let estado = pm.response.code;",
											"console.log(estado);",
											"",
											"//Validar que codigo sea el requerido",
											"pm.test(\"CP_001_Generar Token | Se requiere: Status 200 | valor obtenido: \"+estado, function () {",
											"    pm.expect(estado).to.eql(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"luis.ramirez@kibernum.com\",\n    \"password\": \"Lf-78754076\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_CRAFT}}/users/login?",
									"host": [
										"{{URL_CRAFT}}"
									],
									"path": [
										"users",
										"login"
									],
									"query": [
										{
											"key": "",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "CP_001_GenerarToken Alex",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1ce6d188-3b70-4972-9696-a23af5fd95a0",
										"exec": [
											"//Pasar token a variable Global",
											"let jsondata = pm.response.json();",
											"pm.globals.set(\"TokenAlexUser\",jsondata.data.access_token_jwt);",
											"",
											"let estado = pm.response.code;",
											"console.log(estado);",
											"",
											"//Validar que codigo sea el requerido",
											"pm.test(\"CP_001_Generar Token | Se requiere: Status 200 | valor obtenido: \"+estado, function () {",
											"    pm.expect(estado).to.eql(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"alexander.cabrera@kibernum.com\",\n    \"password\": \"Ignacio2020*\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_CRAFT}}/users/login?",
									"host": [
										"{{URL_CRAFT}}"
									],
									"path": [
										"users",
										"login"
									],
									"query": [
										{
											"key": "",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Consultar TRX - USUARIO",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{tokenLoginCraft}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_CRAFT}}/orders/?searchBy=idUser&idUser=6373",
									"host": [
										"{{URL_CRAFT}}"
									],
									"path": [
										"orders",
										""
									],
									"query": [
										{
											"key": "searchBy",
											"value": "idUser"
										},
										{
											"key": "idUser",
											"value": "6373"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Consultar TRX",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{tokenLoginCraft}}"
									}
								],
								"url": {
									"raw": "{{URL_CRAFT}}/trxs/51275147",
									"host": [
										"{{URL_CRAFT}}"
									],
									"path": [
										"trxs",
										"51275147"
									]
								}
							},
							"response": []
						},
						{
							"name": "BuscarOrden",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{tokenLoginCraft}}"
									}
								],
								"url": {
									"raw": "{{URL_CRAFT}}/trxs/51275147",
									"host": [
										"{{URL_CRAFT}}"
									],
									"path": [
										"trxs",
										"51275147"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "EnviarOrden_NoValida",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b2a00721-9e24-45b3-9d2b-2e6b3703bca4",
								"exec": [
									"let jsondata = pm.response.json();",
									"",
									"let estado = pm.response.code;",
									"console.log(estado);",
									"",
									"pm.test(\"EnviarOrden_NoValida | Se requiere: Status 404 | valor obtenido: \" + estado, function () {",
									"    pm.expect(estado).to.eql(404);",
									"});",
									"",
									"let MensajeError = jsondata.message;",
									"console.log(MensajeError);",
									"",
									"pm.test(\"Validación de mensaje Orden No valida | Se requiere mensaje: Order not found | valor obtenido: \" + MensajeError, function () {",
									"    pm.expect(MensajeError).to.eql(\"Order not found\");",
									"}); "
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "a24958be-cf15-4ac0-a2ef-832f3f9e2444",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{TokenAlexUser}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"idOrder\": \"579\",\n    \"orderType\": \"service\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/orders/invoice",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"orders",
								"invoice"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Se envia orden tipo que no existe"
					},
					"response": []
				},
				{
					"name": "TipoOrdenNoExistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8c067e7c-954f-4b7b-b345-0b4b36b5f22f",
								"exec": [
									"let jsondata = pm.response.json();\r",
									"\r",
									"\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"pm.test(\"TipoOrdenNoExistente | Se requiere: Status 400 | Valor obtenido: \" + estado, function () {\r",
									"    pm.expect(estado).to.eql(400);\r",
									"});\r",
									"\r",
									"let error = jsondata.message;\r",
									"console.log(error);\r",
									"pm.test(\"TipoOrdenNoExistente | Se requiere mensaje: Invalid request body | Valor obtenido: \" + error, function () {\r",
									"    pm.expect(error).to.eql(\"Invalid request body\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{TokenAlexUser}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"idOrder\": \"579\",\n    \"orderType\": \"s\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/orders/invoice",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"orders",
								"invoice"
							]
						},
						"description": "se envia tipo que no existe"
					},
					"response": []
				},
				{
					"name": "Se envia tipo que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e80e1cf5-412d-435c-8bd1-7effdfa3ec0f",
								"exec": [
									"let jsondata = pm.response.json();\r",
									"\r",
									"\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"pm.test(\"Se envia tipo que no existe | Se requiere: Status 400 | Valor obtenido: \"+estado, function () {\r",
									"    pm.expect(estado).to.eql(404);\r",
									"});\r",
									"\r",
									"let error = jsondata.message;\r",
									"console.log(error);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{TokenAlexUser}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL_CRAFT}}/orders/579",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"orders",
								"579"
							]
						}
					},
					"response": []
				},
				{
					"name": "OrdenNoEnviada",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "502c1e08-7004-4de9-ae9a-03323df0c78d",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"let estado = pm.response.code;",
									"console.log(estado);",
									"pm.test(\"OrdenNoEnviada | Se requiere: Status 400 | Valor obtenido: \" + estado, function () {",
									"    pm.expect(estado).to.eql(400);",
									"});",
									"",
									"",
									"let error = jsonData.message;",
									"console.log(error);",
									"pm.test(\"OrdenNoEnviada | Se requiere mensaje: Invalid request body | Valor obtenido: \" + error, function () {",
									"    pm.expect(error).to.eql(\"Invalid request body\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{TokenAlexUser}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"orderType\": \"service\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/orders/invoice",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"orders",
								"invoice"
							]
						}
					},
					"response": []
				},
				{
					"name": "OrdenTipoComisión",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "145631c0-9c03-4a88-8af1-b6d3e828865e",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"let estado = pm.response.code;",
									"console.log(estado);",
									"pm.test(\"OrdenNoEnviada | Se requiere: Status 400 | Valor obtenido: \" + estado, function () {",
									"    pm.expect(estado).to.eql(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{TokenAlexUser}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"idOrder\": \"138-2020-02-2\",\n    \"orderType\": \"commission\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/orders/invoice",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"orders",
								"invoice"
							]
						}
					},
					"response": []
				},
				{
					"name": "TipoOrdenNoEnviada",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "eebff018-f142-40af-aa23-e116ab2dc60e",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"let estado = pm.response.code;",
									"console.log(estado);",
									"pm.test(\"TipoOrdenNoEnviada | Se requiere: Status 400 | Valor obtenido: \" + estado, function () {",
									"    pm.expect(estado).to.eql(400);",
									"});",
									"",
									"",
									"let error = jsonData.message;",
									"console.log(error);",
									"pm.test(\"TipoOrdenNoEnviada 1 Se requiere mensaje: Invalid request body  | Valor obtenido: \" + error, function () {",
									"    pm.expect(error).to.eql(\"Invalid request body\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{TokenAlexUser}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"idOrder\": \"579\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/orders/invoice",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"orders",
								"invoice"
							]
						}
					},
					"response": []
				},
				{
					"name": "EnvíoOrdenNoCompletada",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3eaab18-6be8-4851-84e7-61ae57f72b27",
								"exec": [
									"let jsondata = pm.response.json();",
									"",
									"let estado = pm.response.code;",
									"console.log(estado);",
									"pm.test(\"EnvíoOrdenNoCompletada | Se requiere: Status 400 | Valor obtenido: \" + estado, function () {",
									"    pm.expect(estado).to.eql(400);",
									"});",
									"",
									"let error = jsondata.message;",
									"console.log(error);",
									"pm.test(\"EnvioOrdenNoCompletada | Se requeire mensaje: Order is not completed | Valor Obtenido: \" + error, function () {",
									"    pm.expect(error).to.eql(\"Order is not completed\");",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{TokenAlexUser}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"idOrder\": \"153-2018-08-1-164-8\",\n    \"orderType\": \"service\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/orders/invoice",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"orders",
								"invoice"
							]
						}
					},
					"response": []
				},
				{
					"name": "Se envia orden no completada",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bb1e9c3e-30bc-4e42-a43f-9c75dd880801",
								"exec": [
									"let jsondata = pm.response.json();\r",
									"\r",
									"\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"pm.test(\"Se envia orden no completada | Se requiere: Status 200 | Valor obtenido: \"+estado, function () {\r",
									"    pm.expect(estado).to.eql(200);\r",
									"});\r",
									"\r",
									"let error = jsondata.message;\r",
									"console.log(error);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{TokenAlexUser}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL_CRAFT}}/orders/153-2018-08-1-164-8",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"orders",
								"153-2018-08-1-164-8"
							]
						}
					},
					"response": []
				},
				{
					"name": "EnvíoOrdenYaFacturada",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "91c7f9c3-4c30-43eb-abf7-e87817bc124e",
								"exec": [
									"let jsondata = pm.response.json();",
									"",
									"let estado = pm.response.code;",
									"console.log(estado);",
									"pm.test(\"EnvíoOrdenYaFacturda | Se requiere: Status 422 | Valor obtenido: \" + estado, function () {",
									"    pm.expect(estado).to.eql(422);",
									"});",
									"",
									"let error = jsondata.message;",
									"console.log(error);",
									"pm.test(\"EnvíoOrdenYaFacturda | Se require Mensaje: Missing or invalid fields  | Valor Obtenido: \" + error, function () {",
									"    pm.expect(error).to.eql(\"Missing or invalid fields\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{TokenAlexUser}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"idOrder\": \"1-2017-01-1-12-3\",\n    \"orderType\": \"service\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/orders/invoice",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"orders",
								"invoice"
							]
						}
					},
					"response": []
				},
				{
					"name": "Se envia orden ya facturada",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8fe0022f-b17b-4c7b-9975-ded5a980b293",
								"exec": [
									"let jsondata = pm.response.json();\r",
									"\r",
									"\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"pm.test(\"Se envia orden ya facturada | Se requiere: Status 200 | Valor obtenido: \"+estado, function () {\r",
									"    pm.expect(estado).to.eql(200);\r",
									"});\r",
									"\r",
									"let error = jsondata.message;\r",
									"console.log(error);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{TokenAlexUser}}"
							}
						],
						"url": {
							"raw": "{{URL_CRAFT}}/orders/1-2017-01-1-12-3",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"orders",
								"1-2017-01-1-12-3"
							]
						}
					},
					"response": []
				},
				{
					"name": "NoTieneGiro",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a60ea660-a3cb-441c-87fc-e4e18ba80c1b",
								"exec": [
									"//se debe solicitar la elimanación de la factura a la orden",
									"",
									"let jsondata = pm.response.json();",
									"",
									"let estado = pm.response.code;",
									"console.log(estado);",
									"pm.test(\"NoTieneGiro | Se requiere: Status 201 | Valor obtenido: \" + estado, function () {",
									"    pm.expect(estado).to.eql(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{TokenAlexUser}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"idOrder\": \"6386-2020-04-1-2999-3\",\n    \"orderType\": \"service\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/orders/invoice",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"orders",
								"invoice"
							]
						},
						"description": "Se realiza consulta con usuario juridico que posea orden completada sin factura"
					},
					"response": []
				},
				{
					"name": "NoTieneGiro Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "559bb28b-1ce1-4a3e-89d0-7b6499dc5250",
								"exec": [
									"let jsondata = pm.response.json();",
									"",
									"let estado = pm.response.code;",
									"console.log(estado);",
									"pm.test(\"NoTieneGiro | Se requiere: Status 201 | Valor obtenido: \" + estado, function () {",
									"    pm.expect(estado).to.eql(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{TokenAlexUser}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "//se debe solicitar la elimanación de la factura a la orden\n{\n    \"idOrder\": \"6386-2020-04-1-2999-3\",\n    \"orderType\": \"service\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/orders/invoice",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"orders",
								"invoice"
							]
						},
						"description": "Se realiza consulta con usuario juridico que posea orden completada sin factura"
					},
					"response": []
				},
				{
					"name": "No tiene giro",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ef670d6f-b86e-480e-b467-1f6893458cf4",
								"exec": [
									"let jsondata = pm.response.json();\r",
									"\r",
									"\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"pm.test(\"No tiene giro | Se requiere: Status 200 | Valor obtenido: \"+estado, function () {\r",
									"    pm.expect(estado).to.eql(200);\r",
									"});\r",
									"\r",
									"let error = jsondata.message;\r",
									"console.log(error);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{TokenAlexUser}}"
							}
						],
						"url": {
							"raw": "{{URL_CRAFT}}/orders/6386-2020-04-1-2999-3",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"orders",
								"6386-2020-04-1-2999-3"
							]
						}
					},
					"response": []
				},
				{
					"name": "NoTieneEmailDte",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6bcb7a36-6805-4332-95a3-30b309240922",
								"exec": [
									"//se debe solicitar la elimanación de la factura a la orden",
									"",
									"let jsondata = pm.response.json();",
									"",
									"let estado = pm.response.code;",
									"console.log(estado);",
									"pm.test(\"NoTieneEmailDte | Se requiere: Status 201 | Valor obtenido: \" + estado, function () {",
									"    pm.expect(estado).to.eql(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{TokenAlexUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"idOrder\": \"6386-2020-04-1-3000-3\",\n    \"orderType\": \"service\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/orders/invoice",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"orders",
								"invoice"
							]
						},
						"description": "Se realiza consulta con usuario juridico que posea orden completada sin factura"
					},
					"response": []
				},
				{
					"name": "No tiene email dte",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a87dec50-a605-4ba3-858c-5c4994ecbcce",
								"exec": [
									"let jsondata = pm.response.json();\r",
									"\r",
									"\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"pm.test(\"No tiene email dte | Se requiere: Status 200 | Valor obtenido: \"+estado, function () {\r",
									"    pm.expect(estado).to.eql(200);\r",
									"});\r",
									"\r",
									"let error = jsondata.message;\r",
									"console.log(error);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{TokenAlexUser}}"
							}
						],
						"url": {
							"raw": "{{URL_CRAFT}}/orders/6386-2020-04-1-3000-3",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"orders",
								"6386-2020-04-1-3000-3"
							]
						}
					},
					"response": []
				},
				{
					"name": "NoTieneDireccion",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d1889e98-dd9b-48ab-91d6-45a2e0e68328",
								"exec": [
									"//se debe solicitar la elimanación de la factura a la orden",
									"",
									"let jsondata = pm.response.json();",
									"",
									"let estado = pm.response.code;",
									"console.log(estado);",
									"pm.test(\"NoTieneDireccion | Se requiere: Status 201 | Valor obtenido: \" + estado, function () {",
									"    pm.expect(estado).to.eql(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{TokenAlexUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"idOrder\": \"6386-2020-04-1-3002-3\",\n    \"orderType\": \"service\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/orders/invoice",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"orders",
								"invoice"
							]
						},
						"description": "Se realiza consulta con usuario juridico que posea orden completada sin factura"
					},
					"response": []
				},
				{
					"name": "No tiene direccion",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dc9761c5-f498-43c5-8e65-8f0f590142f5",
								"exec": [
									"let jsondata = pm.response.json();\r",
									"\r",
									"\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"pm.test(\"No tiene direccion | Se requiere: Status 200 | Valor obtenido: \"+estado, function () {\r",
									"    pm.expect(estado).to.eql(200);\r",
									"});\r",
									"\r",
									"let error = jsondata.message;\r",
									"console.log(error);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{TokenAlexUser}}"
							}
						],
						"url": {
							"raw": "{{URL_CRAFT}}/orders/6386-2020-04-1-3002-3",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"orders",
								"6386-2020-04-1-3002-3"
							]
						}
					},
					"response": []
				},
				{
					"name": "DatosNaturales",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ffa0369b-d530-4bf3-b4b2-3b851a7e8de0",
								"exec": [
									"//se debe solicitar la elimanación de la factura a la orden",
									"",
									"let jsondata = pm.response.json();",
									"",
									"let estado = pm.response.code;",
									"console.log(estado);",
									"pm.test(\"DatosNaturales | Se requiere: Status 201 | Valor obtenido: \" + estado, function () {",
									"    pm.expect(estado).to.eql(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{Token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"idOrder\": \"6373-2020-04-1-3005-3\",\n    \"orderType\": \"service\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/orders/invoice",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"orders",
								"invoice"
							]
						},
						"description": "Persona Natural que posea orden completada sin factura"
					},
					"response": []
				},
				{
					"name": "Datos naturales",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6c2342e0-223e-449b-a558-bbf2e080ddb6",
								"exec": [
									"let jsondata = pm.response.json();\r",
									"\r",
									"\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"pm.test(\"Datos naturales | Se requiere: Status 200 | Valor obtenido: \"+estado, function () {\r",
									"    pm.expect(estado).to.eql(200);\r",
									"});\r",
									"\r",
									"let error = jsondata.message;\r",
									"console.log(error);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{Token}}"
							}
						],
						"url": {
							"raw": "{{URL_CRAFT}}/orders/6373-2020-04-1-3005-3",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"orders",
								"6373-2020-04-1-3005-3"
							]
						}
					},
					"response": []
				},
				{
					"name": "ConsultaIJuridico",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d5acfcee-f1e6-45c6-9e1f-ede0011059e5",
								"exec": [
									"// Nro. Orden no debe tener factuta emitida, ojo con este caso que luego de la ejecución se quema el dato porque emite automaticamente la factura",
									"",
									"let jsonData = pm.response.json();",
									"",
									"let estado = pm.response.code;",
									"console.log(estado);",
									"pm.test(\"ConsultaJuridico | Se requiere: Status 201 | Valor obtenido: \" + estado, function () {",
									"    pm.expect(estado).to.eql(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{TokenAlexUser}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"idOrder\": \"6385-2020-04-1-2993-3\",\n    \"orderType\": \"service\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/orders/invoice",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"orders",
								"invoice"
							]
						},
						"description": "Se requiere consulta con usuario juridico que posea orden completada sin factura"
					},
					"response": []
				},
				{
					"name": "Datos juridicos",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "57980d8f-0bbd-4aaa-83da-f0042359294e",
								"exec": [
									"let jsondata = pm.response.json();\r",
									"\r",
									"\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"pm.test(\"Datos juridicos | Se requiere: Status 200 | Valor obtenido: \"+estado, function () {\r",
									"    pm.expect(estado).to.eql(200);\r",
									"});\r",
									"\r",
									"let error = jsondata.message;\r",
									"console.log(error);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{TokenAlexUser}}"
							}
						],
						"url": {
							"raw": "{{URL_CRAFT}}/orders/6385-2020-04-1-2993-3",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"orders",
								"6385-2020-04-1-2993-3"
							]
						}
					},
					"response": []
				},
				{
					"name": "EnvioOrdenTipoServicio",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6bdbf521-a04e-4f21-bab9-dad565d035f4",
								"exec": [
									"//se debe solicitar la elimanación de la factura a la orden",
									"let jsonData = pm.response.json();",
									"",
									"let estado = pm.response.code;",
									"console.log(estado);",
									"pm.test(\"EnvioOrdenTipoServicio | Se requiere: Status 201 | Valor obtenido: \" + estado, function () {",
									"    pm.expect(estado).to.eql(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{TokenAlexUser}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n        \"idOrder\": \"6373-2020-04-1-3006-3\",\r\n        \"orderType\": \"service\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/orders/invoice",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"orders",
								"invoice"
							]
						}
					},
					"response": []
				},
				{
					"name": "Se envia orden tipo servicio",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cdfc974b-e458-4cf0-8c4d-f8fc557c6122",
								"exec": [
									"let jsondata = pm.response.json();\r",
									"\r",
									"\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"pm.test(\"Se envia orden tipo servicio | Se requiere: Status 200 | Valor obtenido: \"+estado, function () {\r",
									"    pm.expect(estado).to.eql(200);\r",
									"});\r",
									"\r",
									"let error = jsondata.message;\r",
									"console.log(error);\r",
									"\r",
									"pm.test(\"Se envia orden tipo servicio\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"servicio\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{TokenAlexUser}}"
							}
						],
						"url": {
							"raw": "{{URL_CRAFT}}/orders/6373-2020-04-1-3006-3",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"orders",
								"6373-2020-04-1-3006-3"
							]
						}
					},
					"response": []
				},
				{
					"name": "EnvioTokenVacio",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f7259969-56bf-4ad4-a479-b729b6d14707",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"let estado = pm.response.code;",
									"console.log(estado);",
									"pm.test(\"EnvioTokenVacio | Se requiere: Status 401 | Valor obtenido: \" + estado, function () {",
									"    pm.expect(estado).to.eql(401);",
									"});",
									"",
									"let error = jsonData.message;",
									"console.log(error);",
									"pm.test(\"EnvioTokenVacio | Se require mensaje: Unauthorized | Valor obtenido: \" + error, function () {",
									"    pm.expect(error).to.eql(\"Unauthorized\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{URL_CRAFT}}/orders/invoice",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"orders",
								"invoice"
							]
						}
					},
					"response": []
				}
			],
			"description": "ordenes a la que eliminar la factura para las pruebas\r\n\r\n6386-2020-04-1-2999-3\r\n6386-2020-04-1-3000-3\r\n6386-2020-04-1-3002-3\r\n6373-2020-04-1-3005-3\r\n6385-2020-04-1-2993-3\r\n6373-2020-04-1-3006-3",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "9ba41fc2-7447-417c-8335-c9fbb650b132",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "45f39953-2e34-46f6-ba34-2a2b0fdeb190",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Invoicing - API Billing",
			"item": [
				{
					"name": "GenerarTokenJuridico",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4b8c5659-d436-4c0e-86d1-5ef2ba3328cc",
								"exec": [
									"//Pasar token a variable Global",
									"let jsondata = pm.response.json();",
									"pm.globals.set(\"TokenAlexUser\", jsondata.data.access_token_jwt);",
									"let estado = pm.response.code;",
									"console.log(estado);",
									"",
									"//Validar que codigo sea el requerido",
									"pm.test(\"CP_001_Generar Token | Se requiere: Status 200 | valor obtenido: \" + estado, function () {",
									"    pm.expect(estado).to.eql(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"alexander.cabrera@kibernum.com\",\n    \"password\": \"Ignacio2020*\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/users/login?",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"users",
								"login"
							],
							"query": [
								{
									"key": "",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "EnvioIdTrxInexistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "360b4931-230e-44fa-9c63-55eddb4bd25b",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"let estado = pm.response.code;",
									"console.log(estado);",
									"pm.test(\"EnvioIdTrxInexistente | Request Status 404 | Valor obtenido: \" + estado, function () {",
									"    pm.expect(estado).to.eql(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{TokenAlexUser}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tipoDocumento\": \"34\",\n    \"idServicio\": \"2923\",\n    \"idTransaccion\": \"0\",\n    \"type\": \"ORDEN\",\n    \"productos\": [\n        {\n            \"cantidad\": \"1\",\n            \"descuento\": \"0\",\n            \"nombreProducto\": \"Servicio Pago Facil(Orden : #501-2020-02-1-2923-3)\",\n            \"valorNeto\": 20000\n        }\n    ],\n    \"fechaEmision\": 1584982413,\n    \"fechaGeneracion\": 1584982413,\n    \"fechaExpiracion\": 1584982413,\n    \"montoTotal\": 20000,\n    \"cliente\": {\n        \"contacto\": {\n            \"telefonoContacto\": \"+56932696826\"\n        },\n        \"direccion\": \"Arturo Prat 636. Dpto #409 /Torre -C\",\n        \"emailDTE\": \"mauxi@pagofacil.cl\",\n        \"rut\": \"76345531-9\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/invoicing/",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"invoicing",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "IdTrxFacturada",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c58817e3-48ba-4a70-a06b-5f6779ae7413",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"let estado = pm.response.code;",
									"console.log(estado);",
									"pm.test(\"IdTrxFacturada | Request esperado: Status 400 | Valor obtenido: \" + estado, function () {",
									"    pm.expect(estado).to.eql(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{TokenAlexUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n        \"tipoDocumento\":\"34\",\r\n        \"idServicio\":\"12\",\r\n        \"idTransaccion\":\"3403-2020-07-2\",\r\n        \"type\": \"ORDEN\",\r\n        \"productos\": [\r\n                {\r\n                        \"cantidad\":\"1\",\r\n                        \"descuento\":\"0\",\r\n                        \"nombreProducto\":\"Servicio Pago Facil(Orden : #3403-2020-07-2)\",\r\n                        \"valorNeto\":20695\r\n                }\r\n        ],\r\n        \"fechaEmision\":1584982413,\r\n        \"fechaGeneracion\":1584982413,\r\n        \"fechaExpiracion\":1584982413,\r\n        \"montoTotal\":36796,\r\n        \"cliente\": {\r\n                \"contacto\":{\r\n                        \"telefonoContacto\": \"+56932696826\"\r\n                },\r\n                \"direccion\": \"Arturo Prat 636. Dpto #409 /Torre -C\",\r\n                \"emailDTE\":\"alexander.cabrera@kibernum.com\",\r\n                \"rut\":\"76345531-9\"\r\n        }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/invoicing/",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"invoicing",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "EnvioRutErroneo",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6a797816-ccb8-4804-a7a3-34d2f78f9493",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"let estado = pm.response.code;",
									"console.log(estado);",
									"pm.test(\"EnvioRutErroneo | Request esperado: Status 400 | Valor obtenido: \" + estado, function () {",
									"    pm.expect(estado).to.eql(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{TokenAlexUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n        \"tipoDocumento\":\"34\",\r\n        \"idServicio\":\"2923\",\r\n        \"idTransaccion\":\"6373-2020-04-1-3012-3\",\r\n        \"type\": \"ORDEN\",\r\n        \"productos\": [\r\n                {\r\n                        \"cantidad\":\"1\",\r\n                        \"descuento\":\"0\",\r\n                        \"nombreProducto\":\"Servicio Pago Facil(Orden : #501-2020-02-1-2923-3)\",\r\n                        \"valorNeto\":20000\r\n                }\r\n        ],\r\n        \"fechaEmision\":1584982413,\r\n        \"fechaGeneracion\":1584982413,\r\n        \"fechaExpiracion\":1584982413,\r\n        \"montoTotal\":20000,\r\n        \"cliente\": {\r\n                \"contacto\":{\r\n                        \"telefonoContacto\": \"+56932696826\"\r\n                },\r\n                \"direccion\": \"Arturo Prat 636. Dpto #409 /Torre -C\",\r\n                \"emailDTE\":\"mauxi@pagofacil.cl\",\r\n                \"rut\":\"763452231-9\"\r\n        }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/invoicing/",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"invoicing",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Generación factura de orden",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5b8b0820-81c6-4ac3-b0fa-2cc24821e913",
								"exec": [
									"let jsondata = pm.response.json();",
									"",
									"let estado = pm.response.code;",
									"console.log(estado);",
									"pm.test(\"Generación factura de orden | Se requiere: Status 200 | Valor obtenido: \" + estado, function () {",
									"    pm.expect(estado).to.eql(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{TokenAlexUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n        \"tipoDocumento\":34,\r\n        \"idServicio\":\"12\",\r\n        \"idTransaccion\":\"6386-2020-04-1-3004-3\",\r\n        \"type\": \"ORDEN\",\r\n        \"productos\": [\r\n            {\r\n                \"cantidad\":\"1\",\r\n                \"descuento\":\"0\",\r\n                \"nombreProducto\":\"Servicio Pago Facil(Orden : #6386-2020-04-1-3004-3)\",\r\n                \"valorNeto\":49900\r\n            }\r\n        ],\r\n        \"fechaEmision\":1590161149545,\r\n        \"fechaGeneracion\":1584982413,\r\n        \"fechaExpiracion\":1584982413,\r\n        \"montoTotal\":49900,\r\n        \"cliente\": {\r\n            \"ciudad\":\"Santiago de Chile\",\r\n            \"comuna\":\"Santiago\",\r\n            \"contacto\":{\r\n                \"emailContacto\":\"alexander.cabrera@kibernum.com\",\r\n                \"nombreContacto\":\"alexander\",\r\n                \"rutContacto\":\"24871670-3\"\r\n            },\r\n            \"direccion\": \"San Antonio 580\",\r\n            \"emailDTE\":\"alxander.cabrera@kibernum.com\",\r\n            \"rut\":\"24871670-3\",\r\n            \"giro\":\"web\",\r\n            \"razonSocial\":\"ALEXANDER SPA\"\r\n        }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/invoicing/",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"invoicing",
								""
							]
						},
						"description": "Se realiza consulta con usuario juridico que posea orden completada sin factura\r\n\r\nEl valor de   \"idServicio\" por ambiente es el siguiente.\r\n\r\n12 dev\r\n12 craft\r\n77 prod\r\n\r\nEste script permite la generación de factura de una orden sin factura"
					},
					"response": []
				},
				{
					"name": "Generar factura con Addons Nubox",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "77f27506-377c-4d05-9b76-c6339d7bb1d7",
								"exec": [
									"let jsondata = pm.response.json();",
									"",
									"let estado = pm.response.code;",
									"console.log(estado);",
									"pm.test(\"Generar factura con Addons Nubox | Se requiere: Status 200 | Valor obtenido: \" + estado, function () {",
									"    pm.expect(estado).to.eql(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{TokenAlexUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n        \"tipoDocumento\":34,\r\n        \"idServicio\":\"2992\",\r\n        \"idTransaccion\":\"51275266\",\r\n        \"productos\": [\r\n            {\r\n                \"cantidad\":\"1\",\r\n                \"descuento\":\"0\",\r\n                \"nombreProducto\":\"Servicio Pago Facil(Orden : #6385-2020-04-1-2992-3)\",\r\n                \"valorNeto\":20000\r\n            }\r\n        ],\r\n        \"fechaEmision\":1592341341000,\r\n        \"montoTotal\":20000,\r\n        \"cliente\": {\r\n            \"ciudad\":\"Santiago de Chile\",\r\n            \"comuna\":\"Santiago\",\r\n            \"contacto\":{\r\n                \"emailContacto\":\"alxander.cabrera@kibernum.com\",\r\n                \"nombreContacto\":\"alexander\",\r\n                \"rutContacto\":\"24871670-3\"\r\n            },\r\n            \"direccion\": \"San Antonio 580\",\r\n            \"emailDTE\":\"alxander.cabrera@kibernum.com\",\r\n            \"rut\":\"24871670-3\",\r\n            \"giro\":\"web\",\r\n            \"razonSocial\":\"ALEXANDER SPA\"\r\n        }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/invoicing/",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"invoicing",
								""
							]
						},
						"description": "Se realiza consulta con usuario juridico que posea orden completada sin factura"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Massive Invoice",
			"item": [
				{
					"name": "GenerarTokenJuridico",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7e3bd233-a5b4-41ca-ab53-95e7b01adac8",
								"exec": [
									"//Pasar token a variable Global",
									"let jsondata = pm.response.json();",
									"pm.globals.set(\"TokenAlexUser\", jsondata.data.access_token_jwt);",
									"let estado = pm.response.code;",
									"console.log(estado);",
									"",
									"//Validar que codigo sea el requerido",
									"pm.test(\"CP_001_Generar Token | Se requiere: Status 200 | valor obtenido: \" + estado, function () {",
									"    pm.expect(estado).to.eql(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"alexander.cabrera@kibernum.com\",\n    \"password\": \"Ignacio2020*\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/users/login?",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"users",
								"login"
							],
							"query": [
								{
									"key": "",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Generación Masiva facturas",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4b2c77ab-00ab-40bc-b86a-980f84cd7fa9",
								"exec": [
									"let jsondata = pm.response.json();",
									"",
									"let estado = pm.response.code;",
									"console.log(estado);",
									"pm.test(\"Generación Masiva facturas | Se requiere: Status 200 | Valor obtenido: \" + estado, function () {",
									"    pm.expect(estado).to.eql(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{TokenAlexUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"orders\": [\n        \"21552-2020-07-2\",\n        \"1565-2020-07-2\",\n        \"11923-2020-07-2\",\n        \"2941-2020-07-2\",\n        \"4102-2020-07-2\",\n        \"6218-2020-07-2\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/orders/massiveInvoice",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"orders",
								"massiveInvoice"
							]
						},
						"description": "Caso de prueba que permite la generaciín masiva de facturas a ordenes de compra"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "BlackList",
			"item": [
				{
					"name": "Utilidad",
					"item": [
						{
							"name": "LOGIN_CRAFT_ADMIN",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f338db58-13c5-4e7e-a606-b83baeb7ff54",
										"exec": [
											"//Pasar token a variable Global",
											"let jsondata = pm.response.json();",
											"pm.globals.set(\"Token_AlexUser\",jsondata.data.access_token_jwt);",
											"",
											"let estado = pm.response.code;",
											"console.log(estado);",
											"",
											"//Validar que codigo sea el requerido",
											"pm.test(\"Login Dev | Se requiere: Status 200 | valor obtenido: \"+estado, function () {",
											"    pm.expect(estado).to.eql(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"alexander.cabrera@kibernum.com\",\n    \"password\": \"Ignacio2020*\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_CRAFT}}/users/login",
									"host": [
										"{{URL_CRAFT}}"
									],
									"path": [
										"users",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "LOGIN_CRAFT_NO_ADMIN",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "043a66b3-dde8-480c-9b11-0e770f5de635",
										"exec": [
											"//Pasar token a variable Global",
											"let jsondata = pm.response.json();",
											"pm.globals.set(\"Token_UserNoAdmin\",jsondata.data.access_token_jwt);",
											"",
											"let estado = pm.response.code;",
											"console.log(estado);",
											"",
											"//Validar que codigo sea el requerido",
											"pm.test(\"Login Dev | Se requiere: Status 200 | valor obtenido: \"+estado, function () {",
											"    pm.expect(estado).to.eql(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{Token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"usuarionoadmin2@yopmail.com\",\n    \"password\": \"PruebasBL1*\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_CRAFT}}/users/login",
									"host": [
										"{{URL_CRAFT}}"
									],
									"path": [
										"users",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "LOGIN_CRAFT_NO_ADMIN_2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fe611d85-3b4a-4b1d-b125-61cce6a34f8e",
										"exec": [
											"//Pasar token a variable Global",
											"let jsondata = pm.response.json();",
											"pm.globals.set(\"Token_UserNoAdmin_2\",jsondata.data.access_token_jwt);",
											"",
											"let estado = pm.response.code;",
											"console.log(estado);",
											"",
											"//Validar que codigo sea el requerido",
											"pm.test(\"Login Dev | Se requiere: Status 200 | valor obtenido: \"+estado, function () {",
											"    pm.expect(estado).to.eql(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"pagofacil2@yopmail.com\",\n    \"password\": \"Pagofacil1*\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_CRAFT}}/users/login",
									"host": [
										"{{URL_CRAFT}}"
									],
									"path": [
										"users",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Buscar RUTs en lista negra asociandos a un Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3a85edca-5461-4853-90ae-e39b96965e77",
										"exec": [
											"let estado = pm.response.code;\r",
											"console.log(estado);\r",
											"\r",
											"let error = pm.response.code;\r",
											"console.log(error);\r",
											"//Validar que codigo sea el requerido\r",
											"pm.test(\"Buscar RUTs en lista negra asociandos a un Id | Se requiere: Status 200 | valor obtenido: \"+estado, function () {\r",
											"    pm.expect(estado).to.eql(200);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{Token_AlexUser}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL_CRAFT}}/black-list/getById/38a13380-d7cb-4f6e-a44f-6d1deaf97424",
									"host": [
										"{{URL_CRAFT}}"
									],
									"path": [
										"black-list",
										"getById",
										"38a13380-d7cb-4f6e-a44f-6d1deaf97424"
									]
								},
								"description": "Se requiere usuario Admin"
							},
							"response": []
						},
						{
							"name": "Como usuario no admin accedo a la funcion",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "29f3ebe8-b556-4eba-9efa-70f072cf284a",
										"exec": [
											"let estado = pm.response.code;\r",
											"console.log(estado);\r",
											"\r",
											"let error = pm.response.code;\r",
											"console.log(error);\r",
											"//Validar que codigo sea el requerido\r",
											"pm.test(\"Como usuario no admin accedo a la funcion | Se requiere: Status 403 | valor obtenido: \"+estado, function () {\r",
											"    pm.expect(estado).to.eql(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string (User doesn't exist or doesn't have permissions)\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"User doesn't exist or doesn't have permissions\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{Token_UserNoAdmin}}"
									}
								],
								"url": {
									"raw": "{{URL_CRAFT}}/black-list/getById/3d0d2fa8-deec-4e21-abf9-d21c2ffad423",
									"host": [
										"{{URL_CRAFT}}"
									],
									"path": [
										"black-list",
										"getById",
										"3d0d2fa8-deec-4e21-abf9-d21c2ffad423"
									]
								},
								"description": "Se requiere usuario Admin"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "SAVE",
					"item": [
						{
							"name": "Se intenta agregar RUT Inválido",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "32fbdc89-6ff4-4424-a1c5-f05898cd1b3e",
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"let estado = pm.response.code;",
											"console.log(estado);",
											"pm.test(\"Se intenta agregar RUT Inválido | Se requiere Status: 422 | Valor obtenido: \"+estado, function () {",
											"    pm.expect(estado).to.eql(422);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{Token_AlexUser}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Paola\",\n    \"document\": \"25456432-8\",\n    \"country\": \"CL\",\n    \"description\":\"prueba\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_CRAFT}}/black-list/save",
									"host": [
										"{{URL_CRAFT}}"
									],
									"path": [
										"black-list",
										"save"
									]
								}
							},
							"response": []
						},
						{
							"name": "Se agrega rut valido que no tiene usuarios vinculados",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fa51327a-1ae7-447d-94ac-bc9da8ae97e8",
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"let estado = pm.response.code;",
											"console.log(estado);",
											"pm.test(\"Se intenta agregar RUT Inválido | Se requiere Status: 200 | Valor obtenido: \"+estado, function () {",
											"    pm.expect(estado).to.eql(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{Token_AlexUser}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Ignacio\",\n    \"document\": \"27187851-6\",\n    \"country\": \"CL\",\n    \"description\": \"prueba\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_CRAFT}}/black-list/save",
									"host": [
										"{{URL_CRAFT}}"
									],
									"path": [
										"black-list",
										"save"
									]
								}
							},
							"response": []
						},
						{
							"name": "Se agrega un rut valido con usuarios vinculados por cuentas bancarias",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dab44609-2ea8-4450-94b9-daca020d44f4",
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"let estado = pm.response.code;",
											"console.log(estado);",
											"pm.test(\"Se agrega un rut valido con usuarios vinculados por cuentas bancarias | Se requiere Status: 200 | Valor obtenido: \" + estado, function () {",
											"    pm.expect(estado).to.eql(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{Token_AlexUser}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Paola\",\n    \"document\": \"26099055-1\",\n    \"country\": \"CL\",\n    \"description\": \"prueba\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_CRAFT}}/black-list/save",
									"host": [
										"{{URL_CRAFT}}"
									],
									"path": [
										"black-list",
										"save"
									]
								}
							},
							"response": []
						},
						{
							"name": "Se agrega un rut valido con usuarios vinculados por datos de facturación",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "995bfa6b-2872-4da4-ac90-5116faaed52c",
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"let estado = pm.response.code;",
											"console.log(estado);",
											"pm.test(\"Se agrega un rut valido con usuarios vinculados por datos de facturación | Se requiere Status: 200 | Valor obtenido: \" + estado, function () {",
											"    pm.expect(estado).to.eql(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{Token_AlexUser}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Pruebas DF1\",\n    \"document\": \"18081596-1\",\n    \"country\": \"CL\",\n    \"description\": \"prueba\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_CRAFT}}/black-list/save",
									"host": [
										"{{URL_CRAFT}}"
									],
									"path": [
										"black-list",
										"save"
									]
								}
							},
							"response": []
						},
						{
							"name": "Se agrega un rut valido con usuarios vinculados por datos de facturacion (representante legal)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "941da38b-b949-4395-9657-af768b5af406",
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"let estado = pm.response.code;",
											"console.log(estado);",
											"pm.test(\"Se agrega un rut valido con usuarios vinculados por datos de facturacion (representante legal) | Se requiere Status: 200 | Valor obtenido: \" + estado, function () {",
											"    pm.expect(estado).to.eql(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{Token_AlexUser}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Paola\",\n    \"document\": \"24871735-1\",\n    \"country\": \"CL\",\n    \"description\": \"prueba\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_CRAFT}}/black-list/save",
									"host": [
										"{{URL_CRAFT}}"
									],
									"path": [
										"black-list",
										"save"
									]
								}
							},
							"response": []
						},
						{
							"name": "Se agrega un rut valido con usuarios vinculados",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2eee75d6-c910-4244-a566-e2a42217ffcd",
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"let estado = pm.response.code;",
											"console.log(estado);",
											"pm.test(\"Se agrega un rut valido con usuarios vinculados | Se requiere Status: 200 | Valor obtenido: \"+estado, function () {",
											"    pm.expect(estado).to.eql(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{Token_AlexUser}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Paola\",\n    \"document\": \"25272254-8\",\n    \"country\": \"CL\",\n    \"description\": \"prueba\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_CRAFT}}/black-list/save",
									"host": [
										"{{URL_CRAFT}}"
									],
									"path": [
										"black-list",
										"save"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Verificar Persona Natural",
					"item": [
						{
							"name": "Un usuario (juridico o natural) en lista negra se registra, pero no pasa validacion TOC",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "16c998e0-dd9e-4b23-b626-447a7d033fc0",
										"exec": [
											"let jsonData = pm.response.json();\r",
											"\r",
											"let estado = pm.response.code;\r",
											"console.log(estado);\r",
											"pm.test(\"Un usuario (juridico o natural) en lista negra se registra, pero no pasa validacion TOC | Se requiere Status: 500 | Valor obtenido: \" + estado, function () {\r",
											"    pm.expect(estado).to.eql(500);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJraWQiOiJCMGVxMzlrZUFFQmJZMHRNa243aCtyaXJtQ1BWT3pkRTA0WHpuTzhOTkI0PSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3Nzg3ZTE3YS1jZTdmLTQ0YjMtODFiNy1hOTgzOGE3YjFkMjgiLCJjb2duaXRvOmdyb3VwcyI6WyJhZG1pbiIsInNlYmFzdGlhbiJdLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiaXNzIjoiaHR0cHM6XC9cL2NvZ25pdG8taWRwLnVzLXdlc3QtMi5hbWF6b25hd3MuY29tXC91cy13ZXN0LTJfSlEyRVRZMDhNIiwiY3VzdG9tOnVzZXJfaWQiOiJnb29nbGUtb2F1dGgyfDEwOTQyODY2MjA5NDMxMTIzNTczMCIsImNvZ25pdG86dXNlcm5hbWUiOiI3Nzg3ZTE3YS1jZTdmLTQ0YjMtODFiNy1hOTgzOGE3YjFkMjgiLCJhdWQiOiI3N3NrbHNqczEzYXBwcXUxOTNpZWxnbms5NSIsImV2ZW50X2lkIjoiMjkyNGY0MjQtNmU5NC00M2MxLTk4YjAtNzQ4MmMxNjI0MzExIiwidG9rZW5fdXNlIjoiaWQiLCJhdXRoX3RpbWUiOjE1ODk0NzAxNTQsImV4cCI6MTU4OTQ3Mzc1NCwiaWF0IjoxNTg5NDcwMTU0LCJlbWFpbCI6InN0ZXBoYW5pZUBwYWdvZmFjaWwuY2wifQ.ReO3jsHDLTOvO2FiIWMQ06JTwnLms3dWHWXOoAhD9PdPJHU4xb3JmzaEB1Of8y0ZoI1oxmnIpz-2oo3PT4VTmQK7CpqcZvzXl7W6Q1AiZaUQomovLG5_HHDJMsRRM_tHgEC7AABPxoMFXenZQBdcOhjhawwtSGsXPi77UiGmJseO138zo4L7hnKBr6pbvicX1yHiBLWWyo0gK2AwAEKGYp3FcAQg4vTF8h5GWBPKdaXjPenb30C4isOZI8v7K3dYqOq03PjVmz8PxGg7HzfbI8qREsDbdhshNseWjK_W073NSeyBLnU4WmV8qmLPj_nAiLCb7SK-fGR6T2SYcHxTZw",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Bearer {{Token_AlexUser}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"id_front\" : \"6358/6358_front.jpg\",\r\n \"id_back\" : \"6358/6358_back.jpg\",\r\n \"selfie\" : \"6358/6358_selfie.jpg\",\r\n \"documentType\" : \"CHL2\",\r\n \"tipoUsuario\" : \"comercio\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://v2.api.pagofacil.online/users/verifyperson",
									"protocol": "https",
									"host": [
										"v2",
										"api",
										"pagofacil",
										"online"
									],
									"path": [
										"users",
										"verifyperson"
									]
								},
								"description": "Usuario Paola"
							},
							"response": []
						},
						{
							"name": "Un usuario (juridico o natural) que sale de lista negra o no esta, se registra y pasa validacion TOC",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6a9a5ef7-4075-44d2-ba41-47685c786d92",
										"exec": [
											"let jsonData = pm.response.json();\r",
											"\r",
											"let estado = pm.response.code;\r",
											"console.log(estado);\r",
											"pm.test(\"Un usuario (juridico o natural) que sale de lista negra o no esta, se registra y pasa validacion TOC | Se requiere Status: 200 | Valor obtenido: \" + estado, function () {\r",
											"    pm.expect(estado).to.eql(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{Token_AlexUser}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"id_front\" : \"6385/6385_front.jpg\",\r\n \"id_back\" : \"6385/6385_back.jpg\",\r\n \"selfie\" : \"6385/6385_selfie.jpg\",\r\n \"documentType\" : \"CHL2\",\r\n \"tipoUsuario\" : \"comercio\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://v2.api.pagofacil.online/users/verifyperson",
									"protocol": "https",
									"host": [
										"v2",
										"api",
										"pagofacil",
										"online"
									],
									"path": [
										"users",
										"verifyperson"
									]
								},
								"description": "Usuario Alexander"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "DELETE",
					"item": [
						{
							"name": "Como usuario no admin accedo a la funcion",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "45f7a2b6-8a1e-42a0-9c49-5e9462857ca1",
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"let estado = pm.response.code;",
											"console.log(estado);",
											"pm.test(\"Como usuario no admin accedo a la funcion | Se requiere Status: 403 | Valor obtenido: \"+estado, function () {",
											"    pm.expect(estado).to.eql(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{Token_UserNoAdmin}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"document\": \"25272254-8\",\n    \"country\": \"CL\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_CRAFT}}/black-list/delete",
									"host": [
										"{{URL_CRAFT}}"
									],
									"path": [
										"black-list",
										"delete"
									]
								}
							},
							"response": []
						},
						{
							"name": "Como usuario admin elimino un rut que no tiene usuarios vinculados",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "38251f7f-0407-4a2a-9b6b-49c31917b23d",
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"let estado = pm.response.code;",
											"console.log(estado);",
											"pm.test(\"Como usuario admin elimino un rut que no tiene usuarios vinculados | Se requiere Status: 200 | Valor obtenido: \"+estado, function () {",
											"    pm.expect(estado).to.eql(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{Token_AlexUser}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"document\": \"27187851-6\",\n    \"country\": \"CL\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_CRAFT}}/black-list/delete",
									"host": [
										"{{URL_CRAFT}}"
									],
									"path": [
										"black-list",
										"delete"
									]
								}
							},
							"response": []
						},
						{
							"name": "Como usuario admin elimino un rut  tiene usuarios vinculados",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a39c2e9b-aea0-42d5-8387-c5b0ba9db9c1",
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"let estado = pm.response.code;",
											"console.log(estado);",
											"pm.test(\"Como usuario admin elimino un rut  tiene usuarios vinculados | Se requiere Status: 200 | Valor obtenido: \"+estado, function () {",
											"    pm.expect(estado).to.eql(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{Token_AlexUser}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"document\": \"25272254-8\",\n    \"country\": \"CL\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_CRAFT}}/black-list/delete",
									"host": [
										"{{URL_CRAFT}}"
									],
									"path": [
										"black-list",
										"delete"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "GET Busqueda de usuarios en Blacklist",
					"item": [
						{
							"name": "Se obtienen ruts en lista negra de un pais",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "051c4b6e-2afb-4b30-ad6c-79dbe7305d92",
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"let estado = pm.response.code;",
											"console.log(estado);",
											"pm.test(\"CP_004_Como usuario admin agrego un rut valido con usuarios vinculados | Se requiere Status: 200 | Valor obtenido: \"+estado, function () {",
											"    pm.expect(estado).to.eql(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{Token_AlexUser}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_CRAFT}}/black-list/get/CL",
									"host": [
										"{{URL_CRAFT}}"
									],
									"path": [
										"black-list",
										"get",
										"CL"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Verificación Persona Jurídica SII",
					"item": [
						{
							"name": "1.Un rut empresa que esta en lista negra intenta culminar el registro, pero no pasa la validacion SII",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "20acd2d7-d6ff-48ae-98ce-6ab73d927a1d",
										"exec": [
											"let jsonData = pm.response.json();\r",
											"\r",
											"let estado = pm.response.code;\r",
											"console.log(estado);\r",
											"pm.test(\"Un rut empresa que esta en lista negra intenta culminar el registro, pero no pasa la validacion SII | Se requiere Status: 403 | Valor obtenido: \" + estado, function () {\r",
											"    pm.expect(estado).to.eql(403);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{Token_AlexUser}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"password\": \"Q2xhdmVVcmJhbg==2\",\n    \"tipoUsuario\": \"comercio\",\n    \"rut\": \"76804564-K\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://v2.api.pagofacil.online/users/verifycompany",
									"protocol": "https",
									"host": [
										"v2",
										"api",
										"pagofacil",
										"online"
									],
									"path": [
										"users",
										"verifycompany"
									]
								},
								"description": "La contraseña debe estar codificada"
							},
							"response": []
						},
						{
							"name": "GET Validación Se  busca los user_meta de un usuario que no haya sido validado por SII por estar en lista negra",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJraWQiOiJCMGVxMzlrZUFFQmJZMHRNa243aCtyaXJtQ1BWT3pkRTA0WHpuTzhOTkI0PSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3Nzg3ZTE3YS1jZTdmLTQ0YjMtODFiNy1hOTgzOGE3YjFkMjgiLCJjb2duaXRvOmdyb3VwcyI6WyJhZG1pbiIsInNlYmFzdGlhbiJdLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiaXNzIjoiaHR0cHM6XC9cL2NvZ25pdG8taWRwLnVzLXdlc3QtMi5hbWF6b25hd3MuY29tXC91cy13ZXN0LTJfSlEyRVRZMDhNIiwiY3VzdG9tOnVzZXJfaWQiOiJnb29nbGUtb2F1dGgyfDEwOTQyODY2MjA5NDMxMTIzNTczMCIsImNvZ25pdG86dXNlcm5hbWUiOiI3Nzg3ZTE3YS1jZTdmLTQ0YjMtODFiNy1hOTgzOGE3YjFkMjgiLCJhdWQiOiI3N3NrbHNqczEzYXBwcXUxOTNpZWxnbms5NSIsImV2ZW50X2lkIjoiM2Q5NmNkMTctZDk0Yi00MjU0LTkwNTgtNjg0NDQxNTJlMzlhIiwidG9rZW5fdXNlIjoiaWQiLCJhdXRoX3RpbWUiOjE1ODk0ODE5MjQsImV4cCI6MTU4OTQ4NTUyNCwiaWF0IjoxNTg5NDgxOTI0LCJlbWFpbCI6InN0ZXBoYW5pZUBwYWdvZmFjaWwuY2wifQ.CCATnqS2Kl7kZHc0CdJZ1gVEFVpfL8Jm_1ymNXrfhysXqKbn51KS_bPxd7-4Ika4r3niNvso8dYq7w4CmqQTfa_z68aSPGYXcwelDt0iEJEN-LlZfu3IUS-ZyndSydmUGlwjRC_BDxx1h0KLmxbuTwMloGqNnJv4dGiglt1JtUugc5htB9ENKAWFJmVnn-zXKr0pSB_SPP_mSDyI8lEtVhu4j-_cye8z-wl6zFfPGt8ciIN9x7Gb3Vu5pBlmp_Y90f4L8TpoOdtYyJbJwmCPz5OmkrLeadHeov4YL7f3IfMPo3QwjdvMr6V0NmhpCzOhtbjPX27dlkDUy68TvrAvCg",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{Token_AlexUser}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"idUsuario\": \"6421\",\n    \"tipoUsuario\": \"comercio\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api-front-craft.pagofacil.online/users/getValidaciones",
									"protocol": "https",
									"host": [
										"api-front-craft",
										"pagofacil",
										"online"
									],
									"path": [
										"users",
										"getValidaciones"
									]
								}
							},
							"response": []
						},
						{
							"name": "2.Un rut empresa que no esta en lista negra intenta culminar el registro, tiene los datos correctos y pasa la validacion SII",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5e025486-ac41-4b78-985c-184e1289c519",
										"exec": [
											"let jsonData = pm.response.json();\r",
											"\r",
											"let estado = pm.response.code;\r",
											"console.log(estado);\r",
											"pm.test(\"Un rut empresa que no esta en lista negra intenta culminar el registro, tiene los datos correctos y pasa la validacion SII: 200 | Valor obtenido: \" + estado, function () {\r",
											"    pm.expect(estado).to.eql(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{Token_AlexUser}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"password\": \"Q2xhdmVVcmJhbg==2\",\n    \"tipoUsuario\": \"comercio\",\n    \"rut\": \"76804564-K\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://v2.api.pagofacil.online/users/verifycompany",
									"protocol": "https",
									"host": [
										"v2",
										"api",
										"pagofacil",
										"online"
									],
									"path": [
										"users",
										"verifycompany"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Validación user_meta de un usuario que haya sido validado por SII por estar en lista negra",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{Token_AlexUser}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"idUsuario\": \"6425\",\n    \"tipoUsuario\": \"comercio\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api-front-craft.pagofacil.online/users/getValidaciones",
									"protocol": "https",
									"host": [
										"api-front-craft",
										"pagofacil",
										"online"
									],
									"path": [
										"users",
										"getValidaciones"
									]
								}
							},
							"response": []
						},
						{
							"name": "3.Un rut de representante legal de la empresa que esta en lista negra intenta culminar el registro, pero no pasa la validacion SII",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "da706e49-54cb-4abd-9f33-3b3a9843adc9",
										"exec": [
											"let jsonData = pm.response.json();\r",
											"\r",
											"let estado = pm.response.code;\r",
											"console.log(estado);\r",
											"pm.test(\"Un rut empresa que no esta en lista negra intenta culminar el registro, tiene los datos correctos y pasa la validacion SII: 200 | Valor obtenido: \" + estado, function () {\r",
											"    pm.expect(estado).to.eql(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{Token_AlexUser}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"password\": \"Q2xhdmVVcmJhbg==2\",\n    \"tipoUsuario\": \"comercio\",\n    \"rut\": \"76804564-K\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://v2.api.pagofacil.online/users/verifycompany",
									"protocol": "https",
									"host": [
										"v2",
										"api",
										"pagofacil",
										"online"
									],
									"path": [
										"users",
										"verifycompany"
									]
								},
								"description": "Se requiere que el Token corresponda al usuario que realiza la validación. De lo contrario se realiza bloqueo de usuario con el que se realizo la solicitud de Login para la validación en SII"
							},
							"response": []
						},
						{
							"name": "GET Validación user_meta de un usuario que haya sido validado por SII por estar en lista negra Copy",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{Token_AlexUser}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"idUsuario\": \"6421\",\n    \"tipoUsuario\": \"comercio\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api-front-craft.pagofacil.online/users/getValidaciones",
									"protocol": "https",
									"host": [
										"api-front-craft",
										"pagofacil",
										"online"
									],
									"path": [
										"users",
										"getValidaciones"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Login",
					"item": [
						{
							"name": "Usuario en lista negra no puede loguearse",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0b6372c0-d61c-466a-ad11-7a8715241b7b",
										"exec": [
											"let jsondata = pm.response.json();",
											"",
											"let estado = pm.response.code;",
											"console.log(estado);",
											"pm.test(\"Usuario en BlackList no puede loguearse | Se requiere: Status 401 | Valor obtenido: \"+estado, function () {",
											"    pm.expect(estado).to.eql(401);",
											"});",
											"",
											"let error = jsondata.message;",
											"console.log(error);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"luis.ramirez@kibernum.com\",\n    \"password\": \"Lf-78754076\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_CRAFT}}/users/login",
									"host": [
										"{{URL_CRAFT}}"
									],
									"path": [
										"users",
										"login"
									]
								},
								"description": "Para ello se requiere contar con un usuario que se encuentre en Lista negra"
							},
							"response": []
						},
						{
							"name": "Usuario que sale de lista negra o no esta puede loguearse",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "06971022-109e-4907-a65d-62f207080993",
										"exec": [
											"let jsondata = pm.response.json();",
											"",
											"let estado = pm.response.code;",
											"console.log(estado);",
											"pm.test(\"Usuario que sale de lista negra o no esta puede loguearse | Se requiere: Status 200 | Valor obtenido: \"+estado, function () {",
											"    pm.expect(estado).to.eql(200);",
											"});",
											"",
											"let error = jsondata.message;",
											"console.log(error);",
											"pm.test(\"Usuario que sale de lista negra o no esta puede loguearse | Se requiere mensaje: Se proceso la solicitud correctamente | Valor obtenido: \"+error, function () {",
											"    pm.expect(error).to.eql(\"Se proceso la solicitud correctamente\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n        \"username\":\"stephanie@pagofacil.cl\",\r\n        \"password\":\"Stephanie000.\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_CRAFT}}/users/login",
									"host": [
										"{{URL_CRAFT}}"
									],
									"path": [
										"users",
										"login"
									]
								},
								"description": "Para ello se requiere contar con un usuario que NO se encuentre en Lista negra"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Get By Rut",
					"item": [
						{
							"name": "Buscar RUT que no esta en lista negra",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4a051b76-791c-40e9-8383-14f33139fb5f",
										"exec": [
											"let jsondata = pm.response.json();\r",
											"\r",
											"let estado = pm.response.code;\r",
											"console.log(estado);\r",
											"pm.test(\"Buscar RUT que no esta en lista negra | Se requiere: Status 200 | Valor obtenido: \"+estado, function () {\r",
											"    pm.expect(estado).to.eql(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{Token_AlexUser}}"
									}
								],
								"url": {
									"raw": "{{URL_CRAFT}}/black-list/getByRut/25272254-8/CL",
									"host": [
										"{{URL_CRAFT}}"
									],
									"path": [
										"black-list",
										"getByRut",
										"25272254-8",
										"CL"
									]
								},
								"description": "Se requiere usuario Admin"
							},
							"response": []
						},
						{
							"name": "Buscar RUT que esta en lista negra",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "16e1ecc3-cf00-4176-b5c5-a2d3ad4074fd",
										"exec": [
											"let jsondata = pm.response.json();\r",
											"\r",
											"let estado = pm.response.code;\r",
											"console.log(estado);\r",
											"pm.test(\"Buscar RUT que esta en lista negra | Se requiere: Status 200 | Valor obtenido: \"+estado, function () {\r",
											"    pm.expect(estado).to.eql(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{Token_AlexUser}}"
									}
								],
								"url": {
									"raw": "{{URL_CRAFT}}/black-list/getByRut/25272254-8/CL",
									"host": [
										"{{URL_CRAFT}}"
									],
									"path": [
										"black-list",
										"getByRut",
										"25272254-8",
										"CL"
									]
								},
								"description": "Se requiere usuario Admin"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Get By ID",
					"item": [
						{
							"name": "Usuario no admin accede a la funcion",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6e8aab1d-2c74-4146-b45d-69e75cd55acb",
										"exec": [
											"let jsondata = pm.response.json();\r",
											"\r",
											"let estado = pm.response.code;\r",
											"console.log(estado);\r",
											"pm.test(\"Usuario no admin accede a la funcion | Se requiere: Status 403 | Valor obtenido: \"+estado, function () {\r",
											"    pm.expect(estado).to.eql(403);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{Token_UserNoAdmin_2}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_CRAFT}}/black-list/getById/auth0|5b92a146819feb2450c35798",
									"host": [
										"{{URL_CRAFT}}"
									],
									"path": [
										"black-list",
										"getById",
										"auth0|5b92a146819feb2450c35798"
									]
								}
							},
							"response": []
						},
						{
							"name": "Buscar RUT en lista negra by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c313fb18-0b01-4c3e-bac3-0532d078b36d",
										"exec": [
											"let jsondata = pm.response.json();\r",
											"\r",
											"let estado = pm.response.code;\r",
											"console.log(estado);\r",
											"pm.test(\"Buscar RUT en lista negra by ID | Se requiere: Status 200 | Valor obtenido: \"+estado, function () {\r",
											"    pm.expect(estado).to.eql(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{Token_AlexUser}}"
									}
								],
								"url": {
									"raw": "{{URL_CRAFT}}/black-list/getById/auth0|5b92a146819feb2450c35798",
									"host": [
										"{{URL_CRAFT}}"
									],
									"path": [
										"black-list",
										"getById",
										"auth0|5b92a146819feb2450c35798"
									]
								},
								"description": "Se requiere usuario Admin"
							},
							"response": []
						},
						{
							"name": "Como usuario admin se obtienen ruts en lista negra asociandos a un Id, pero el Id no tiene ruts en lista negra",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "af349032-0d69-4dc6-b398-56aa803f3807",
										"exec": [
											"let jsondata = pm.response.json();\r",
											"\r",
											"let estado = pm.response.code;\r",
											"console.log(estado);\r",
											"pm.test(\"Como usuario admin se obtienen ruts en lista negra asociandos a un Id, pero el Id no tiene ruts en lista negra | Se requiere: Status 200 | Valor obtenido: \"+estado, function () {\r",
											"    pm.expect(estado).to.eql(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{Token_AlexUser}}"
									}
								],
								"url": {
									"raw": "{{URL_CRAFT}}/black-list/getById/auth0|5b92a146819feb2450c35798",
									"host": [
										"{{URL_CRAFT}}"
									],
									"path": [
										"black-list",
										"getById",
										"auth0|5b92a146819feb2450c35798"
									]
								},
								"description": "Se requiere usuario Admin"
							},
							"response": []
						},
						{
							"name": "Usuario no admin accede a la funcion Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3fff19d7-8105-46db-a15f-3ecef9d9a8c0",
										"exec": [
											"let jsondata = pm.response.json();\r",
											"let estado = pm.response.code;\r",
											"console.log(estado);\r",
											"pm.test(\"Usuario no admin accede a la funcion | Se requiere: Status 403 | Valor obtenido: \"+estado, function () {\r",
											"    pm.expect(estado).to.eql(403);\r",
											"});\r",
											"let message = jsondata.message;\r",
											"console.log(message);\r",
											"pm.test(\"Se valida mensaje de respuesta | Valor esperado: User doesn't exist or doesn't have permissions\", function () {\r",
											"    pm.expect(message).to.eql(\"User doesn't exist or doesn't have permissions\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{Token_UserNoAdmin_2}}"
									}
								],
								"url": {
									"raw": "{{URL_CRAFT}}/black-list/getById/auth0|5b92a146819feb2450c35798",
									"host": [
										"{{URL_CRAFT}}"
									],
									"path": [
										"black-list",
										"getById",
										"auth0|5b92a146819feb2450c35798"
									]
								}
							},
							"response": []
						},
						{
							"name": "Buscar RUT en lista negra by ID Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "84ffe07b-9855-4c66-a543-d9cc27ffca91",
										"exec": [
											"let jsondata = pm.response.json();\r",
											"\r",
											"let estado = pm.response.code;\r",
											"console.log(estado);\r",
											"pm.test(\"Buscar RUT en lista negra by ID | Se requiere: Status 200 | Valor obtenido: \"+estado, function () {\r",
											"    pm.expect(estado).to.eql(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{Token_AlexUser}}"
									}
								],
								"url": {
									"raw": "{{URL_CRAFT}}/black-list/getById/auth0|5b92a146819feb2450c35798",
									"host": [
										"{{URL_CRAFT}}"
									],
									"path": [
										"black-list",
										"getById",
										"auth0|5b92a146819feb2450c35798"
									]
								},
								"description": "Se requiere usuario Admin"
							},
							"response": []
						},
						{
							"name": "Como usuario admin se obtienen ruts en lista negra asociandos a un Id, pero el Id no tiene ruts en lista negra Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a4628a26-0e36-4891-914d-d16848a21365",
										"exec": [
											"let jsondata = pm.response.json();\r",
											"\r",
											"let estado = pm.response.code;\r",
											"console.log(estado);\r",
											"pm.test(\"Como usuario admin se obtienen ruts en lista negra asociandos a un Id, pero el Id no tiene ruts en lista negra | Se requiere: Status 200 | Valor obtenido: \"+estado, function () {\r",
											"    pm.expect(estado).to.eql(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{Token_AlexUser}}"
									}
								],
								"url": {
									"raw": "{{URL_CRAFT}}/black-list/getById/auth0|5b92a146819feb2450c35798",
									"host": [
										"{{URL_CRAFT}}"
									],
									"path": [
										"black-list",
										"getById",
										"auth0|5b92a146819feb2450c35798"
									]
								},
								"description": "Se requiere usuario Admin"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Get Validación Usuario",
					"item": [
						{
							"name": "Se  busca los user_meta de un usuario que no haya sido validado por SII por estar en lista negra",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJraWQiOiJCMGVxMzlrZUFFQmJZMHRNa243aCtyaXJtQ1BWT3pkRTA0WHpuTzhOTkI0PSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3Nzg3ZTE3YS1jZTdmLTQ0YjMtODFiNy1hOTgzOGE3YjFkMjgiLCJjb2duaXRvOmdyb3VwcyI6WyJhZG1pbiIsInNlYmFzdGlhbiJdLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiaXNzIjoiaHR0cHM6XC9cL2NvZ25pdG8taWRwLnVzLXdlc3QtMi5hbWF6b25hd3MuY29tXC91cy13ZXN0LTJfSlEyRVRZMDhNIiwiY3VzdG9tOnVzZXJfaWQiOiJnb29nbGUtb2F1dGgyfDEwOTQyODY2MjA5NDMxMTIzNTczMCIsImNvZ25pdG86dXNlcm5hbWUiOiI3Nzg3ZTE3YS1jZTdmLTQ0YjMtODFiNy1hOTgzOGE3YjFkMjgiLCJhdWQiOiI3N3NrbHNqczEzYXBwcXUxOTNpZWxnbms5NSIsImV2ZW50X2lkIjoiM2Q5NmNkMTctZDk0Yi00MjU0LTkwNTgtNjg0NDQxNTJlMzlhIiwidG9rZW5fdXNlIjoiaWQiLCJhdXRoX3RpbWUiOjE1ODk0ODE5MjQsImV4cCI6MTU4OTQ4NTUyNCwiaWF0IjoxNTg5NDgxOTI0LCJlbWFpbCI6InN0ZXBoYW5pZUBwYWdvZmFjaWwuY2wifQ.CCATnqS2Kl7kZHc0CdJZ1gVEFVpfL8Jm_1ymNXrfhysXqKbn51KS_bPxd7-4Ika4r3niNvso8dYq7w4CmqQTfa_z68aSPGYXcwelDt0iEJEN-LlZfu3IUS-ZyndSydmUGlwjRC_BDxx1h0KLmxbuTwMloGqNnJv4dGiglt1JtUugc5htB9ENKAWFJmVnn-zXKr0pSB_SPP_mSDyI8lEtVhu4j-_cye8z-wl6zFfPGt8ciIN9x7Gb3Vu5pBlmp_Y90f4L8TpoOdtYyJbJwmCPz5OmkrLeadHeov4YL7f3IfMPo3QwjdvMr6V0NmhpCzOhtbjPX27dlkDUy68TvrAvCg",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TokenAlexUser}}",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"idUsuario\": \"6421\",\n    \"tipoUsuario\": \"comercio\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api-front-craft.pagofacil.online/users/getValidaciones",
									"protocol": "https",
									"host": [
										"api-front-craft",
										"pagofacil",
										"online"
									],
									"path": [
										"users",
										"getValidaciones"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Anulación",
			"item": [
				{
					"name": "GenerarTokenJuridico",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "92f6d318-5815-4603-bbf3-ea69719b78f9",
								"exec": [
									"//Pasar token a variable Global",
									"let jsondata = pm.response.json();",
									"pm.globals.set(\"TokenAlexUser\", jsondata.data.access_token_jwt);",
									"let estado = pm.response.code;",
									"console.log(estado);",
									"",
									"//Validar que codigo sea el requerido",
									"pm.test(\"CP_001_Generar Token | Se requiere: Status 200 | valor obtenido: \" + estado, function () {",
									"    pm.expect(estado).to.eql(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"alexander.cabrera@kibernum.com\",\n    \"password\": \"Ignacio2020*\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/users/login?",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"users",
								"login"
							],
							"query": [
								{
									"key": "",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GenerarToken_OtherUser_2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "34f4fd75-b067-4ddf-81e6-0d5f180cc880",
								"exec": [
									"//Pasar token a variable Global",
									"let jsondata = pm.response.json();",
									"pm.globals.set(\"Token_OtherUser_2\",jsondata.data.access_token_jwt);",
									"",
									"let estado = pm.response.code;",
									"console.log(estado);",
									"",
									"//Validar que codigo sea el requerido",
									"pm.test(\"CP_001_Generar Token | Se requiere: Status 200 | valor obtenido: \"+estado, function () {",
									"    pm.expect(estado).to.eql(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"stephanie@pagofacil.cl\",\n    \"password\": \"Stephanie000.\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/users/login?",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"users",
								"login"
							],
							"query": [
								{
									"key": "",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "CREAR TXN CRAFT",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1830ce1f-7e5b-4830-9ae0-3e3df376f1b7",
								"exec": [
									"//Pasar id a variable Global",
									"let jsondata = pm.response.json();",
									"pm.globals.set(\"id\", jsondata.data.id);",
									"",
									"let estado = pm.response.code;",
									"console.log(estado);",
									"pm.test(\"Crear TXN envía correo |Se requiere 200 | Valor obtenido: \"+estado, function () {",
									"    pm.expect(estado).to.eql(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{TokenAlexUser}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"tipo\": \"link\",\r\n\t\"idServicio\": 3071,\r\n\t\"monto\": 45000,\r\n\t\"email\": \"alexander.cabrera@kibernum.com\",\r\n\t\"mensaje_receptor\": \"PRUEBA CREAR COBRO\",\r\n\t\"nota_interna\": \"CREAR ORDEN EN DEV\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/trxs/charges",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"trxs",
								"charges"
							]
						}
					},
					"response": []
				},
				{
					"name": "CREAR TXN CRAFT Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "832a19f2-0664-4953-a673-45ebaa6ea9b1",
								"exec": [
									"//Pasar id a variable Global",
									"let jsondata = pm.response.json();",
									"",
									"pm.test(\"Contiene Id Transacción\", function () {",
									"    pm.expect(jsondata.id).to.eql(pm.iterationData.get(\"id\"));",
									"});",
									"",
									"pm.test(\"Contiene idServicio\", function () {",
									"    pm.expect(jsondata.idServicio).to.eql(pm.iterationData.get(\"idServicio\"));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{TokenAlexUser}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"tipo\": \"link\",\r\n\t\"idServicio\": {{idServicio}},\r\n\t\"monto\": {{monto}},\r\n\t\"email\": \"alexander.cabrera@kibernum.com\",\r\n\t\"mensaje_receptor\": \"PRUEBA CREAR COBRO\",\r\n\t\"nota_interna\": \"CREAR ORDEN EN DEV\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/trxs/charges",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"trxs",
								"charges"
							]
						}
					},
					"response": []
				},
				{
					"name": "Anular TXN Parcial",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bf967939-26d3-4c62-a3d5-0445ee00447f",
								"exec": [
									"let jsondata = pm.response.json();\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"\r",
									"pm.test(\"Anular TXN Parcial | Se requiere: Status 200 | valor obtenido: \" + estado, function () {\r",
									"    pm.expect(estado).to.eql(200);\r",
									"});\r",
									"\r",
									"let MensajeError = jsondata.message;\r",
									"console.log(MensajeError);\r",
									"\r",
									"pm.test(\"Anular TXN Parcial | Se requiere mensaje: La anulación se encuentra en proceso | valor obtenido: \" + MensajeError, function () {\r",
									"    pm.expect(MensajeError).to.eql(\"La anulación se encuentra en proceso\");\r",
									"}); "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{TokenAlexUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"amount\": 50,\n    \"type\": \"parcial\",\n    \"nullifyTbk\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/trxs/51275261/nullification",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"trxs",
								"51275261",
								"nullification"
							]
						}
					},
					"response": []
				},
				{
					"name": "Anular TXN Parcial Pago Débito",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3687535e-3005-4774-8570-e5884646a7a6",
								"exec": [
									"let jsondata = pm.response.json();\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"\r",
									"pm.test(\"Anular TXN Parcial Pago Débito | Se requiere: Status 200 | valor obtenido: \" + estado, function () {\r",
									"    pm.expect(estado).to.eql(200);\r",
									"});\r",
									"\r",
									"let MensajeError = jsondata.message;\r",
									"console.log(MensajeError);\r",
									"\r",
									"pm.test(\"Anular TXN Parcial Pago Débito | Se requiere mensaje: La Trx no es de crédito | valor obtenido: \" + MensajeError, function () {\r",
									"    pm.expect(MensajeError).to.eql(\"La Trx no es de crédito\");\r",
									"}); "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{TokenAlexUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"amount\": 20,\n    \"type\": \"parcial\",\n    \"nullifyTbk\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/trxs/51275262/nullification",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"trxs",
								"51275262",
								"nullification"
							]
						}
					},
					"response": []
				},
				{
					"name": "Anular TXN Parcial pago en cuotas sin interés",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8b220e1f-cfb1-4098-9e96-5c6ae4b9fb11",
								"exec": [
									"let jsondata = pm.response.json();\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"\r",
									"pm.test(\"Anular TXN Parcial pago en cuotas | Se requiere: Status 200 | valor obtenido: \" + estado, function () {\r",
									"    pm.expect(estado).to.eql(200);\r",
									"});\r",
									"\r",
									"let MensajeError = jsondata.message;\r",
									"console.log(MensajeError);\r",
									"\r",
									"pm.test(\"Anular TXN Parcial pago en cuotas | Se requiere mensaje: La transacción no se puede anular parcialmente | valor obtenido: \" + MensajeError, function () {\r",
									"    pm.expect(MensajeError).to.eql(\"La transacción no se puede anular parcialmente\");\r",
									"}); "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{TokenAlexUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"amount\": 200,\n    \"type\": \"parcial\",\n    \"nullifyTbk\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/trxs/51275289/nullification",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"trxs",
								"51275289",
								"nullification"
							]
						}
					},
					"response": []
				},
				{
					"name": "Anular TXN Parcial ya anulada",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3ea2ffc9-0334-4181-be53-c57c2f7ccd1e",
								"exec": [
									"let jsondata = pm.response.json();\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"\r",
									"pm.test(\"Anular TXN Parcial ya anulada | Se requiere: Status 200 | valor obtenido: \" + estado, function () {\r",
									"    pm.expect(estado).to.eql(200);\r",
									"});\r",
									"\r",
									"let MensajeError = jsondata.message;\r",
									"console.log(MensajeError);\r",
									"\r",
									"pm.test(\"Anular TXN Parcial ya anulada | Se requiere mensaje: Transacción ya se encuentra anulada | valor obtenido: \" + MensajeError, function () {\r",
									"    pm.expect(MensajeError).to.eql(\"Transacción ya se encuentra anulada\");\r",
									"}); "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{TokenAlexUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"amount\": 19000,\n    \"type\": \"parcial\",\n    \"nullifyTbk\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/trxs/51275257/nullification",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"trxs",
								"51275257",
								"nullification"
							]
						}
					},
					"response": []
				},
				{
					"name": "Anular TXN Parcial no completada",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "27e31254-8bea-4be4-9f2b-1099fb2885e5",
								"exec": [
									"let jsondata = pm.response.json();\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"\r",
									"pm.test(\"Anular TXN Parcial no completada | Se requiere: Status 200 | valor obtenido: \" + estado, function () {\r",
									"    pm.expect(estado).to.eql(200);\r",
									"});\r",
									"\r",
									"let MensajeError = jsondata.message;\r",
									"console.log(MensajeError);\r",
									"\r",
									"pm.test(\"Anular TXN Parcial no completada | Se requiere mensaje: Transacción no esta completada | valor obtenido: \" + MensajeError, function () {\r",
									"    pm.expect(MensajeError).to.eql(\"Transacción no esta completada\");\r",
									"}); "
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"followRedirects": false
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{TokenAlexUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"amount\": 3000,\n    \"type\": \"parcial\",\n    \"nullifyTbk\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/trxs/{{id}}/nullification",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"trxs",
								"{{id}}",
								"nullification"
							]
						}
					},
					"response": []
				},
				{
					"name": "Anular TXN Total no completada",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3ebe931b-4861-4e40-9608-15cb0fefc668",
								"exec": [
									"let jsondata = pm.response.json();\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"\r",
									"pm.test(\"Anular TXN Total no completada | Se requiere: Status 200 | valor obtenido: \" + estado, function () {\r",
									"    pm.expect(estado).to.eql(200);\r",
									"});\r",
									"\r",
									"let MensajeError = jsondata.message;\r",
									"console.log(MensajeError);\r",
									"\r",
									"pm.test(\"Anular TXN Total no completada | Se requiere mensaje: Transacción no esta completada | valor obtenido: \" + MensajeError, function () {\r",
									"    pm.expect(MensajeError).to.eql(\"Transacción no esta completada\");\r",
									"}); "
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"followRedirects": false
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{TokenAlexUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"amount\": 3000,\n    \"type\": \"total\",\n    \"nullifyTbk\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/trxs/{{id}}/nullification",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"trxs",
								"{{id}}",
								"nullification"
							]
						}
					},
					"response": []
				},
				{
					"name": "Anular TXN Total",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f87e19b0-11f8-4748-bda4-c3143d89adf3",
								"exec": [
									"let jsondata = pm.response.json();\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"\r",
									"pm.test(\"Anular TXN Total | Se requiere: Status 200 | valor obtenido: \" + estado, function () {\r",
									"    pm.expect(estado).to.eql(200);\r",
									"});\r",
									"\r",
									"let MensajeError = jsondata.message;\r",
									"console.log(MensajeError);\r",
									"\r",
									"pm.test(\"Anular TXN Total | Se requiere mensaje: La anulación se encuentra en proceso | valor obtenido: \" + MensajeError, function () {\r",
									"    pm.expect(MensajeError).to.eql(\"La anulación se encuentra en proceso\");\r",
									"}); "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{TokenAlexUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"amount\": 105000,\n    \"type\": \"total\",\n    \"nullifyTbk\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/trxs/51275224/nullification",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"trxs",
								"51275224",
								"nullification"
							]
						}
					},
					"response": []
				},
				{
					"name": "Anular TXN Total ya anulada",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3960a810-6342-4f87-b1be-360eff7e653e",
								"exec": [
									"let jsondata = pm.response.json();\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"\r",
									"pm.test(\"Anular TXN Total ya anulada | Se requiere: Status 200 | valor obtenido: \" + estado, function () {\r",
									"    pm.expect(estado).to.eql(200);\r",
									"});\r",
									"\r",
									"let MensajeError = jsondata.message;\r",
									"console.log(MensajeError);\r",
									"\r",
									"pm.test(\"Anular TXN Total ya anulada | Se requiere mensaje: Transacción ya se encuentra anulada | valor obtenido: \" + MensajeError, function () {\r",
									"    pm.expect(MensajeError).to.eql(\"Transacción ya se encuentra anulada\");\r",
									"}); "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{TokenAlexUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"amount\": 105000,\n    \"type\": \"total\",\n    \"nullifyTbk\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/trxs/51275224/nullification",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"trxs",
								"51275224",
								"nullification"
							]
						}
					},
					"response": []
				},
				{
					"name": "Anular TXN Parcial con más de 90 días",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "545e28c0-8608-4229-a1e0-028a83114ab9",
								"exec": [
									"let jsondata = pm.response.json();\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"\r",
									"pm.test(\"Anular TXN Parcial con más de 90 días | Se requiere: Status 200 | valor obtenido: \" + estado, function () {\r",
									"    pm.expect(estado).to.eql(200);\r",
									"});\r",
									"\r",
									"let MensajeError = jsondata.message;\r",
									"console.log(MensajeError);\r",
									"\r",
									"pm.test(\"Anular TXN Parcial con más de 90 días | Se requiere mensaje: La Trx tiene más de 90 días | valor obtenido: \" + MensajeError, function () {\r",
									"    pm.expect(MensajeError).to.eql(\"La Trx tiene más de 90 días\");\r",
									"}); "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{Token_OtherUser_2}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"amount\": 10,\n    \"type\": \"parcial\",\n    \"nullifyTbk\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/trxs/51274909/nullification",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"trxs",
								"51274909",
								"nullification"
							]
						},
						"description": "Se debe generar botón de cobro y hacer el pago. Luego se puede anular la txn"
					},
					"response": []
				},
				{
					"name": "Anular TXN Total con más de 90 días",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e01c1fa5-0ed3-442e-9e56-029430824cd9",
								"exec": [
									"let jsondata = pm.response.json();\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"\r",
									"pm.test(\"Anular TXN Total con más de 90 días | Se requiere: Status 200 | valor obtenido: \" + estado, function () {\r",
									"    pm.expect(estado).to.eql(200);\r",
									"});\r",
									"\r",
									"let MensajeError = jsondata.message;\r",
									"console.log(MensajeError);\r",
									"\r",
									"pm.test(\"Anular TXN Total con más de 90 días | Se requiere mensaje: La Trx tiene más de 90 días | valor obtenido: \" + MensajeError, function () {\r",
									"    pm.expect(MensajeError).to.eql(\"La Trx tiene más de 90 días\");\r",
									"}); "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{Token_OtherUser_2}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"amount\": 100000,\n    \"type\": \"total\",\n    \"nullifyTbk\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/trxs/51274920/nullification",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"trxs",
								"51274920",
								"nullification"
							]
						},
						"description": "Se debe generar botón de cobro y hacer el pago. Luego se puede anular la txn"
					},
					"response": []
				},
				{
					"name": "Anular TXN Parcial con menos de 48 horas de completada",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2f2f913c-be29-4d2f-91eb-941a642b7fad",
								"exec": [
									"let jsondata = pm.response.json();\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"\r",
									"pm.test(\"Anular TXN Parcial con menos de 48 horas de completada | Se requiere: Status 200 | valor obtenido: \" + estado, function () {\r",
									"    pm.expect(estado).to.eql(200);\r",
									"});\r",
									"\r",
									"let MensajeError = jsondata.message;\r",
									"console.log(MensajeError);\r",
									"\r",
									"pm.test(\"Anular TXN Parcial con menos de 48 horas de completada | Se requiere mensaje: Transacciones pueden ser anuladas 48hrs hábiles después de haber sido completadas | valor obtenido: \" + MensajeError, function () {\r",
									"    pm.expect(MensajeError).to.eql(\"Transacciones pueden ser anuladas 48hrs hábiles después de haber sido completadas\");\r",
									"}); "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{TokenAlexUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"amount\": 500,\n    \"type\": \"parcial\",\n    \"nullifyTbk\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/trxs/51275547/nullification",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"trxs",
								"51275547",
								"nullification"
							]
						}
					},
					"response": []
				},
				{
					"name": "Anular TXN Total con menos de 48 horas de completada",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e751be5b-9f00-4132-abc7-d812b4bd681c",
								"exec": [
									"let jsondata = pm.response.json();\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"\r",
									"pm.test(\"Anular TXN Total con menos de 48 horas de completada | Se requiere: Status 200 | valor obtenido: \" + estado, function () {\r",
									"    pm.expect(estado).to.eql(200);\r",
									"});\r",
									"\r",
									"let MensajeError = jsondata.message;\r",
									"console.log(MensajeError);\r",
									"\r",
									"pm.test(\"Anular TXN Total con menos de 48 horas de completada | Se requiere mensaje: Transacciones pueden ser anuladas 48hrs hábiles después de haber sido completadas | valor obtenido: \" + MensajeError, function () {\r",
									"    pm.expect(MensajeError).to.eql(\"Transacciones pueden ser anuladas 48hrs hábiles después de haber sido completadas\");\r",
									"}); "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{TokenAlexUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"amount\": 300000,\n    \"type\": \"total\",\n    \"nullifyTbk\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/trxs/51275547/nullification",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"trxs",
								"51275547",
								"nullification"
							]
						}
					},
					"response": []
				},
				{
					"name": "Anular TXN con datos nulos",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c07c41db-0c0a-4753-95dd-21a3488b37b3",
								"exec": [
									"let jsondata = pm.response.json();\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"\r",
									"pm.test(\"Anular TXN con tados nulos | Se requiere: Status 422 | valor obtenido: \" + estado, function () {\r",
									"    pm.expect(estado).to.eql(422);\r",
									"});\r",
									"\r",
									"let MensajeError = jsondata.message;\r",
									"console.log(MensajeError);\r",
									"\r",
									"pm.test(\"Anular TXN con tados nulos | Se requiere mensaje: Invalid request body | valor obtenido: \" + MensajeError, function () {\r",
									"    pm.expect(MensajeError).to.eql(\"Invalid request body\");\r",
									"}); "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{TokenAlexUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"amount\": 0,\n    \"type\": \"parcial\",\n    \"nullifyTbk\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/trxs/51275261/nullification",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"trxs",
								"51275261",
								"nullification"
							]
						}
					},
					"response": []
				},
				{
					"name": "Anular TXN Parcial pago en cuotas con intereses",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "edd3bc9b-5ba2-42c0-8fe5-4d0e40394211",
								"exec": [
									"let jsondata = pm.response.json();\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"\r",
									"pm.test(\"Anular TXN Parcial pago en cuotas con intereses | Se requiere: Status 200 | valor obtenido: \" + estado, function () {\r",
									"    pm.expect(estado).to.eql(200);\r",
									"});\r",
									"\r",
									"let MensajeError = jsondata.message;\r",
									"console.log(MensajeError);\r",
									"\r",
									"pm.test(\"Anular TXN Parcial pago en cuotas | Se requiere mensaje: La transacción no se puede anular parcialmente | valor obtenido: \" + MensajeError, function () {\r",
									"    pm.expect(MensajeError).to.eql(\"La transacción no se puede anular parcialmente\");\r",
									"}); "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{TokenAlexUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"amount\": 100,\n    \"type\": \"parcial\",\n    \"nullifyTbk\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/trxs/51275289/nullification",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"trxs",
								"51275289",
								"nullification"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET consultar orden Craft",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "98891064-e57e-4523-96e2-78f44b0edf26",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"let estado = pm.response.code;",
									"console.log(estado);",
									"pm.test(\"ENVIO CORREO |Se requiere 200| Valor obtenido: \" + estado, function () {",
									"    pm.expect(estado).to.eql(200);",
									"});",
									"",
									"let error = jsonData.message;",
									"console.log(error);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{TokenAlexUser}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/trxs/51275219",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"trxs",
								"51275219"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "SDK-Transbank",
			"item": [
				{
					"name": "GenerarTokenUserAlex",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3d29fb87-9800-45c0-a813-e26379cdeaa4",
								"exec": [
									"//Pasar token a variable Global",
									"let jsondata = pm.response.json();",
									"pm.globals.set(\"Token_AlexUser\", jsondata.data.access_token_jwt);",
									"let estado = pm.response.code;",
									"console.log(estado);",
									"",
									"//Validar que codigo sea el requerido",
									"pm.test(\"CP_001_Generar Token | Se requiere: Status 200 | valor obtenido: \" + estado, function () {",
									"    pm.expect(estado).to.eql(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"alexander.cabrera@kibernum.com\",\n    \"password\": \"Ignacio2020*\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/users/login?",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"users",
								"login"
							],
							"query": [
								{
									"key": "",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GenerarToken_OtherUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "735bb518-490c-444a-9caa-bdce8834735f",
								"exec": [
									"//Pasar token a variable Global",
									"let jsondata = pm.response.json();",
									"pm.globals.set(\"Token_Other_User\",jsondata.data.access_token_jwt);",
									"",
									"let estado = pm.response.code;",
									"console.log(estado);",
									"",
									"//Validar que codigo sea el requerido",
									"pm.test(\"CP_001_Generar Token | Se requiere: Status 200 | valor obtenido: \"+estado, function () {",
									"    pm.expect(estado).to.eql(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"pagofacil2@yopmail.com\",\n    \"password\": \"Pagofacil1*\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/users/login?",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"users",
								"login"
							],
							"query": [
								{
									"key": "",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GenerarToken_OtherUser_2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2a2281d3-bd2c-4258-8374-517000ac2815",
								"exec": [
									"//Pasar token a variable Global",
									"let jsondata = pm.response.json();",
									"pm.globals.set(\"Token_OtherUser_2\",jsondata.data.access_token_jwt);",
									"",
									"let estado = pm.response.code;",
									"console.log(estado);",
									"",
									"//Validar que codigo sea el requerido",
									"pm.test(\"CP_001_Generar Token | Se requiere: Status 200 | valor obtenido: \"+estado, function () {",
									"    pm.expect(estado).to.eql(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"stephanie@pagofacil.cl\",\n    \"password\": \"Stephanie000.\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/users/login?",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"users",
								"login"
							],
							"query": [
								{
									"key": "",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ANULACIÓN PARCIAL TXN PROPIA EN SDK_TBK_200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "426b19ca-e321-4996-a3f4-1692031ffda4",
								"exec": [
									"let jsondata = pm.response.json();\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"\r",
									"pm.test(\"ANULACIÓN TXN PROPIA EN SDK_TBK_200 | Se requiere: Status 200 | valor obtenido: \" + estado, function () {\r",
									"    pm.expect(estado).to.eql(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Token_AlexUser}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"authorizationCode\": 1213,\r\n  \"authorizedAmount\": 25000,\r\n  \"buyOrder\": \"51275266\",\r\n  \"nullifyAmount\": 100,\r\n  \"commerceId\": \"597020000543\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/sdk-transbank/nullifyWebPayNormal",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"sdk-transbank",
								"nullifyWebPayNormal"
							]
						}
					},
					"response": []
				},
				{
					"name": "ANULACIÓN TXN PROPIA EN SDK_TBK_245",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "aea99cec-dee7-4954-b1a2-beacdb9b2df3",
								"exec": [
									"let jsondata = pm.response.json();\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"\r",
									"pm.test(\"ANULACIÓN TXN Código de comercio no existe EN SDK_TBK_245 | Se requiere: Status 245 | valor obtenido: \" + estado, function () {\r",
									"    pm.expect(estado).to.eql(245);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{Token_AlexUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"authorizationCode\": 1213,\r\n  \"authorizedAmount\": 25000,\r\n  \"buyOrder\": \"51275266\",\r\n  \"nullifyAmount\": 100,\r\n  \"commerceId\": \"59702000054\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/sdk-transbank/nullifyWebPayNormal",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"sdk-transbank",
								"nullifyWebPayNormal"
							]
						}
					},
					"response": []
				},
				{
					"name": "ANULACIÓN TXN PROPIA EN SDK_TBK_274",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b9aa294d-00f7-4d20-b194-2abec2e31438",
								"exec": [
									"let jsondata = pm.response.json();\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"\r",
									"pm.test(\"ANULACIÓN Transacción no encontrada EN SDK_TBK_274 | Se requiere: Status 274 | valor obtenido: \" + estado, function () {\r",
									"    pm.expect(estado).to.eql(274);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{Token_AlexUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"authorizationCode\": 1213,\n  \"authorizedAmount\": 100000,\n  \"buyOrder\": \"16669\",\n  \"nullifyAmount\": 100000,\n  \"commerceId\": \"597020000542\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/sdk-transbank/nullifyWebPayNormal",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"sdk-transbank",
								"nullifyWebPayNormal"
							]
						}
					},
					"response": []
				},
				{
					"name": "ANULACIÓN TXN PROPIA EN SDK_TBK_284",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0feb8bfe-2e23-4270-9180-020e6088cf3a",
								"exec": [
									"let jsondata = pm.response.json();\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"\r",
									"pm.test(\"ANULACIÓN TXN Período de anulación excedido EN SDK_TBK_284 | Se requiere: Status 284 | valor obtenido: \" + estado, function () {\r",
									"    pm.expect(estado).to.eql(284);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{Token_OtherUser_2}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"authorizationCode\": 1213,\r\n  \"authorizedAmount\": 10000,\r\n  \"buyOrder\": \"10557\",\r\n  \"nullifyAmount\": 10000,\r\n  \"commerceId\": \"597020000543\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/sdk-transbank/nullifyWebPayNormal",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"sdk-transbank",
								"nullifyWebPayNormal"
							]
						}
					},
					"response": []
				},
				{
					"name": "ANULACIÓN TXN PROPIA EN SDK_TBK_292",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d4ecdb9a-2f63-415a-b27b-9901318b845b",
								"exec": [
									"let jsondata = pm.response.json();\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"\r",
									"pm.test(\"ANULACIÓN TXN PROPIA EN SDK_TBK_292 | Se requiere: Status 292 | valor obtenido: \" + estado, function () {\r",
									"    pm.expect(estado).to.eql(292);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{Token_AlexUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"authorizationCode\": 1213,\r\n  \"authorizedAmount\": 25000,\r\n  \"buyOrder\": \"51275266\",\r\n  \"nullifyAmount\": 3000,\r\n  \"commerceId\": \"597020000542\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/sdk-transbank/nullifyWebPayNormal",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"sdk-transbank",
								"nullifyWebPayNormal"
							]
						}
					},
					"response": []
				},
				{
					"name": "ANULACIÓN TXN con campos de entrada nulos en SDK_TBK_305",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "76509b91-ff5d-41dd-a81d-bb65234617ba",
								"exec": [
									"let jsondata = pm.response.json();\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"\r",
									"pm.test(\"ANULACIÓN TXN con campos de entrada nulos en SDK_TBK_305 | Se requiere: Status 305 | valor obtenido: \" + estado, function () {\r",
									"    pm.expect(estado).to.eql(305);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{Token_AlexUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"authorizationCode\": 1213,\r\n  \"authorizedAmount\": 25000,\r\n  \"buyOrder\": \"51275266\",\r\n  \"nullifyAmount\": 100,\r\n  \"commerceId\": \"0\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/sdk-transbank/nullifyWebPayNormal",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"sdk-transbank",
								"nullifyWebPayNormal"
							]
						}
					},
					"response": []
				},
				{
					"name": "ANULACIÓN TXN PROPIA EN SDK_TBK_308",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ca407d18-85d2-4af7-a357-a500ce71c707",
								"exec": [
									"let jsondata = pm.response.json();\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"\r",
									"pm.test(\"ANULACIÓN TXN PROPIA EN SDK_TBK_308 | Se requiere: Status 308 | valor obtenido: \" + estado, function () {\r",
									"    pm.expect(estado).to.eql(308);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{Token_AlexUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"authorizationCode\": 1213,\r\n  \"authorizedAmount\": 25000,\r\n  \"buyOrder\": \"51275266\",\r\n  \"nullifyAmount\": 3000,\r\n  \"commerceId\": \"597020000542\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/sdk-transbank/nullifyWebPayNormal",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"sdk-transbank",
								"nullifyWebPayNormal"
							]
						}
					},
					"response": []
				},
				{
					"name": "ANULACIÓN TXN PROPIA EN SDK_TBK_310",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ef27eefd-2a1e-49ad-9eeb-a5ce27a03980",
								"exec": [
									"let jsondata = pm.response.json();\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"\r",
									"pm.test(\"ANULACIÓN TXN PROPIA EN SDK_TBK_310 | Se requiere: Status 310 | valor obtenido: \" + estado, function () {\r",
									"    pm.expect(estado).to.eql(310);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{Token_AlexUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"authorizationCode\": 1213,\r\n  \"authorizedAmount\": 2000,\r\n  \"buyOrder\": \"51275246\",\r\n  \"nullifyAmount\": 2000,\r\n  \"commerceId\": \"597020000543\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/sdk-transbank/nullifyWebPayNormal",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"sdk-transbank",
								"nullifyWebPayNormal"
							]
						}
					},
					"response": []
				},
				{
					"name": "ANULACIÓN TXN PROPIA EN SDK_TBK_311",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1bd8afd1-d5a0-4469-8b61-c06da79fc3e7",
								"exec": [
									"let jsondata = pm.response.json();\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"\r",
									"pm.test(\"ANULACIÓN TXN PROPIA EN SDK_TBK_311 | Se requiere: Status 311 | valor obtenido: \" + estado, function () {\r",
									"    pm.expect(estado).to.eql(311);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{Token_AlexUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"authorizationCode\": 1213,\r\n  \"authorizedAmount\": 25000,\r\n  \"buyOrder\": \"51275266\",\r\n  \"nullifyAmount\": 145500,\r\n  \"commerceId\": \"597020000543\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/sdk-transbank/nullifyWebPayNormal",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"sdk-transbank",
								"nullifyWebPayNormal"
							]
						}
					},
					"response": []
				},
				{
					"name": "ANULACIÓN TXN PROPIA EN SDK_TBK_312",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bc42d53e-273c-4a18-a0ea-6d840dcd4f6b",
								"exec": [
									"let jsondata = pm.response.json();\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"\r",
									"pm.test(\"ANULACIÓN TXN PROPIA EN SDK_TBK_312 | Se requiere: Status 312 | valor obtenido: \" + estado, function () {\r",
									"    pm.expect(estado).to.eql(312);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{Token_AlexUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"authorizationCode\": 1213,\r\n  \"authorizedAmount\": 25000,\r\n  \"buyOrder\": \"51275266\",\r\n  \"nullifyAmount\": 3000,\r\n  \"commerceId\": \"597020000542\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/sdk-transbank/nullifyWebPayNormal",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"sdk-transbank",
								"nullifyWebPayNormal"
							]
						}
					},
					"response": []
				},
				{
					"name": "ANULACIÓN TXN PROPIA EN SDK_TBK_315",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1bc44dd3-2ae2-4c4f-8d4f-fa98343739b8",
								"exec": [
									"let jsondata = pm.response.json();\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"\r",
									"pm.test(\"ANULACIÓN TXN PROPIA EN SDK_TBK_315 | Se requiere: Status 315 | valor obtenido: \" + estado, function () {\r",
									"    pm.expect(estado).to.eql(315);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{Token_AlexUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"authorizationCode\": 1213,\r\n  \"authorizedAmount\": 25000,\r\n  \"buyOrder\": \"51275266\",\r\n  \"nullifyAmount\": 3000,\r\n  \"commerceId\": \"597020000542\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/sdk-transbank/nullifyWebPayNormal",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"sdk-transbank",
								"nullifyWebPayNormal"
							]
						}
					},
					"response": []
				},
				{
					"name": "ANULACIÓN TXN PROPIA EN SDK_TBK_316",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1f20f45a-f4dc-42f9-acd5-d319c810baf6",
								"exec": [
									"let jsondata = pm.response.json();\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"\r",
									"pm.test(\"ANULACIÓN TXN PROPIA EN SDK_TBK_316 | Se requiere: Status 316 | valor obtenido: \" + estado, function () {\r",
									"    pm.expect(estado).to.eql(316);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{Token_AlexUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"authorizationCode\": 1213,\r\n  \"authorizedAmount\": 25000,\r\n  \"buyOrder\": \"51275266\",\r\n  \"nullifyAmount\": 3000,\r\n  \"commerceId\": \"597020000542\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/sdk-transbank/nullifyWebPayNormal",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"sdk-transbank",
								"nullifyWebPayNormal"
							]
						}
					},
					"response": []
				},
				{
					"name": "ANULACIÓN TXN SDK_TBK_403_Other User",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "97dd758c-ab31-4ac0-b013-8bf3a820c67f",
								"exec": [
									"let jsondata = pm.response.json();\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"\r",
									"pm.test(\"ANULACIÓN TXN SDK_TBK Other User | Se requiere: Status 403 | valor obtenido: \" + estado, function () {\r",
									"    pm.expect(estado).to.eql(403);\r",
									"});\r",
									"\r",
									"let MensajeError = jsondata.message;\r",
									"console.log(MensajeError);\r",
									"\r",
									"pm.test(\"ANULACIÓN TXN SDK_TBK Other User | Se requiere mensaje: User doesn't exist or doesn't have permissions  | valor obtenido: \" + MensajeError, function () {\r",
									"    pm.expect(MensajeError).to.eql(\"User doesn't exist or doesn't have permissions\");\r",
									"}); "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Token_Other_User}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"authorizationCode\": 1213,\r\n  \"authorizedAmount\": 25000,\r\n  \"buyOrder\": \"51275266\",\r\n  \"nullifyAmount\": 100,\r\n  \"commerceId\": \"597020000543\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/sdk-transbank/nullifyWebPayNormal",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"sdk-transbank",
								"nullifyWebPayNormal"
							]
						}
					},
					"response": []
				},
				{
					"name": "ANULACIÓN TXN PROPIA EN SDK_TBK_500",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "02e88ab8-8261-49f9-b242-2840f5fb36ef",
								"exec": [
									"let jsondata = pm.response.json();\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"\r",
									"pm.test(\"ANULACIÓN TXN PROPIA EN SDK_TBK_500 | Se requiere: Status 500 | valor obtenido: \" + estado, function () {\r",
									"    pm.expect(estado).to.eql(500);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{Token_AlexUser_DEV}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/sdk-transbank/nullifyWebPayNormal",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"sdk-transbank",
								"nullifyWebPayNormal"
							]
						}
					},
					"response": []
				},
				{
					"name": "ANULACIÓN VALIDACIÓN",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "11c86fd9-a0e8-47d7-a275-c148276cfe08",
								"exec": [
									"let jsondata = pm.response.json();\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"\r",
									"pm.test(\"ANULACIÓN TXN PROPIA EN SDK_TBK_500 | Se requiere: Status 500 | valor obtenido: \" + estado, function () {\r",
									"    pm.expect(estado).to.eql(500);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{Token_AlexUser_DEV}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/trxs/16667/nullification/status?verificationToken=e02f12863b420390128e13453aba5854bc4ca5500ed48e15dc4d0d5509ef8a87",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"trxs",
								"16667",
								"nullification",
								"status"
							],
							"query": [
								{
									"key": "verificationToken",
									"value": "e02f12863b420390128e13453aba5854bc4ca5500ed48e15dc4d0d5509ef8a87"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET consultar anulación",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d93e3889-2027-412a-bf54-7e207b1a29a3",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"let estado = pm.response.code;",
									"console.log(estado);",
									"pm.test(\"ENVIO CORREO |Se requiere 200| Valor obtenido: \" + estado, function () {",
									"    pm.expect(estado).to.eql(200);",
									"});",
									"",
									"let error = jsonData.message;",
									"console.log(error);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{Token_AlexUser_DEV}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/trxs/16667",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"trxs",
								"16667"
							]
						}
					},
					"response": []
				},
				{
					"name": "ANULACIÓN TXN PROPIA EN SDK_TBK_401",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bfc44928-ff6a-4205-b175-da8af65008dc",
								"exec": [
									"let jsondata = pm.response.json();\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"\r",
									"pm.test(\"ANULACIÓN TXN PROPIA TOKEN VACIO EN SDK_TBK_401 | Se requiere: Status 401 | valor obtenido: \" + estado, function () {\r",
									"    pm.expect(estado).to.eql(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"authorizationCode\": 1213,\r\n  \"authorizedAmount\": 20000,\r\n  \"buyOrder\": \"16655\",\r\n  \"nullifyAmount\": 4000,\r\n  \"commerceId\": \"597020000542\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/sdk-transbank/nullifyWebPayNormal",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"sdk-transbank",
								"nullifyWebPayNormal"
							]
						}
					},
					"response": []
				},
				{
					"name": "ANULACIÓN TXN PROPIA EN SDK_TBK_401 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ac1b97cc-0789-4abc-85d0-1ac4f1c01d63",
								"exec": [
									"let jsondata = pm.response.json();\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"\r",
									"pm.test(\"ANULACIÓN TXN PROPIA TOKEN VACIO EN SDK_TBK_401 | Se requiere: Status 400 | valor obtenido: \" + estado, function () {\r",
									"    pm.expect(estado).to.eql(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"authorizationCode\": 1213,\r\n  \"authorizedAmount\": 20000,\r\n  \"buyOrder\": \"16655\",\r\n  \"nullifyAmount\": 4000,\r\n  \"commerceId\": \"597020000542\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/sdk-transbank/nullifyWebPayNormal",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"sdk-transbank",
								"nullifyWebPayNormal"
							]
						}
					},
					"response": []
				},
				{
					"name": "ANULACIÓN TXN PROPIA EN SDK_TBK_315 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "04001f49-49b9-4bf7-802c-49c4aef2a73c",
								"exec": [
									"let jsondata = pm.response.json();\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"\r",
									"pm.test(\"ANULACIÓN TXN PROPIA EN SDK_TBK_315 | Se requiere: Status 315 | valor obtenido: \" + estado, function () {\r",
									"    pm.expect(estado).to.eql(315);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{Token_AlexUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"authorizationCode\": 1213,\r\n  \"authorizedAmount\": 25000,\r\n  \"buyOrder\": \"51275266\",\r\n  \"nullifyAmount\": 3000,\r\n  \"commerceId\": \"597020000542\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/sdk-transbank/nullifyWebPayNormal",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"sdk-transbank",
								"nullifyWebPayNormal"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Charges",
			"item": [
				{
					"name": "GenerarToken Alex",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3a2166a2-0afc-40ff-94b7-5982c72e6ee1",
								"exec": [
									"//Pasar token a variable Global",
									"let jsondata = pm.response.json();",
									"pm.globals.set(\"TokenAlexUser\", jsondata.data.access_token_jwt);",
									"let estado = pm.response.code;",
									"console.log(estado);",
									"",
									"//Validar que codigo sea el requerido",
									"pm.test(\"CP_001_Generar Token | Se requiere: Status 200 | valor obtenido: \" + estado, function () {",
									"    pm.expect(estado).to.eql(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"alexander.cabrera@kibernum.com\",\n    \"password\": \"Ignacio2020*\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/users/login?",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"users",
								"login"
							],
							"query": [
								{
									"key": "",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "CREAR TXN CRAFT",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ebd7d4be-1fb6-45c2-ba65-50df7af6a506",
								"exec": [
									"let jsonData = pm.response.json();",
									"console.log(jsonData)",
									"",
									"let estado = pm.response.code;",
									"console.log(estado);",
									"pm.test(\"ENVIO CORREO |Se requiere 200 | Valor obtenido: \" + estado, function () {",
									"    pm.expect(estado).to.eql(200);",
									"});",
									"",
									"let error = jsonData.message;",
									"console.log(error);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{TokenAlexUser}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"tipo\": \"link\",\r\n\t\"idServicio\": 2993,\r\n\t\"monto\": 55000,\r\n\t\"email\": \"alexander.cabrera@kibernum.com\",\r\n\t\"mensaje_receptor\": \"PRUEBA CREAR ORDEN\",\r\n\t\"nota_interna\": \"SE CREA ORDEN EN CRAFT\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/trxs/charges",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"trxs",
								"charges"
							]
						}
					},
					"response": []
				},
				{
					"name": "CREAR TXN CRAFT datos variables",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ae453c2e-d9a1-4a84-b96b-20f94dde060e",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"let estado = pm.response.code;",
									"console.log(estado);",
									"pm.test(\"ENVIO CORREO |Se requiere 200 | Valor obtenido: \" + estado, function () {",
									"    pm.expect(estado).to.eql(200);",
									"});",
									"",
									"let error = jsonData.message;",
									"console.log(error);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{TokenAlexUser}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"tipo\": \"link\",\r\n\t\"idServicio\": {{idServicio}},\r\n\t\"monto\": {{monto}},\r\n\t\"email\": \"alexander.cabrera@kibernum.com\",\r\n\t\"mensaje_receptor\": \"PRUEBA CREAR COBRO\",\r\n\t\"nota_interna\": \"CREAR ORDEN EN DEV\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/trxs/charges",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"trxs",
								"charges"
							]
						}
					},
					"response": []
				},
				{
					"name": "CREAR TXN CRAFT datos variables 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "32d1df34-d829-4c34-97ee-1b1b542e4861",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"let estado = pm.response.code;",
									"console.log(estado);",
									"pm.test(\"ENVIO CORREO |Se requiere 200 | Valor obtenido: \" + estado, function () {",
									"    pm.expect(estado).to.eql(200);",
									"});",
									"",
									"let error = jsonData.message;",
									"console.log(error);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{TokenAlexUser}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"tipo\": \"link\",\r\n\t\"idServicio\": {{idServicio}},\r\n\t\"monto\": {{monto}},\r\n\t\"email\": \"alexander.cabrera@kibernum.com\",\r\n\t\"mensaje_receptor\": \"PRUEBA CREAR COBRO\",\r\n\t\"nota_interna\": \"CREAR ORDEN EN DEV\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/trxs/charges",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"trxs",
								"charges"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Completar - Orden",
			"item": [
				{
					"name": "CP_001_Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c1d1fef3-05f0-42c9-b62d-ca5adb377ba2",
								"exec": [
									"//Pasar token a variable global",
									"let jsonData = pm.response.json(); ",
									"console.log (jsonData);",
									"pm.globals.set (\"Token\", jsonData.data.access_token_jwt);",
									"",
									"//Primer caso de pruebas validar codigo de respuesta correspondiente a Status de Request",
									"let estado = pm.response.code;",
									"console.log(estado);",
									"pm.test(\"CP_001: Request Status 200 | Valor obtenido: \"+estado, function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"luis.ramirez@kibernum.com\",\n    \"password\": \"Lf-78754076\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/users/login",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"users",
								"login"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "CP_002_OrdenYaCompletada",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c4dad5b2-7664-4c2b-96f2-cd9e9886d178",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"let estado = pm.response.code;",
									"console.log(estado);",
									"pm.test(\"Pre-Condición CP_002: Request Status 200 | Valor obtenido: \"+estado, function () {",
									"    pm.expect(estado).to.eql(200);",
									"});",
									"",
									"let error = jsonData.message;",
									"console.log(error);",
									"pm.test(\"CP_002: Validación mensaje 'Orden' ya completada | Valor obtenido: \"+error, function () {",
									"    pm.expect(error).to.match(/^Orden/);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{TokenAlexUser}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"x_account_id\": \"e29ded1ece1fa60d327f3f1592cc597c5bcd6dba6aaa581f0b205ca01faf72e8\",\n    \"x_amount\": 49900,\n    \"x_currency\": \"CLP\",\n    \"x_reference\": \"6373-2020-04-1-2988-3\",\n    \"x_customer_email\": \"luis.ramirez@kibernum.com\",\n    \"x_url_complete\": \"https://dashboard-craft.pagofacil.cl/\",\n    \"x_url_cancel\": \"https://dashboard-craft.pagofacil.cl//orders/return-url/\",\n    \"x_url_callback\": \"https://uzotywpg3a.execute-api.us-west-2.amazonaws.com/craft/complete-order/6373-2020-04-1-2988-3\",\n    \"x_shop_country\": \"CL\",\n    \"x_session_id\": \"1794968\",\n    \"x_timestamp\": \"2020-04-23T21:32:11.000Z\",\n    \"x_gateway_reference\": \"51275151\",\n    \"x_result\": \"completed\",\n    \"x_message\": \"X\",\n    \"x_test\": \"false\",\n    \"x_signature\": \"20de171c713469e2e62e1aa78ba499a95a116e621b31c9ae7f19c14c1f01239b\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CompletarOrden}}/craft/complete-order/6373-2020-04-1-2988-3",
							"host": [
								"{{URL_CompletarOrden}}"
							],
							"path": [
								"craft",
								"complete-order",
								"6373-2020-04-1-2988-3"
							]
						}
					},
					"response": []
				},
				{
					"name": "CP_003_OrdenNoExiste",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "beb34e68-aa29-4fa2-998b-0e0310ae0603",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"let estado = pm.response.code;",
									"console.log(estado);",
									"pm.test(\"CP_003_OrdenNoExistente: Request Status 400 | Valor obtenido: \"+estado, function () {",
									"    pm.expect(estado).to.eql(400);",
									"});",
									"",
									"let error = jsonData.errorMessage;",
									"console.log(error);",
									"pm.test(\"CP_003_OrdenNoExistente | Validación mensaje: Error al obtener la orden | Valor obtenido: \"+error, function () {",
									"    pm.expect(error).to.eql(\"Error al obtener la orden\");",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{TokenAlexUser}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"x_account_id\": \"e29ded1ece1fa60d327f3f1592cc597c5bcd6dba6aaa581f0b205ca01faf72e8\",\n    \"x_amount\": 49900,\n    \"x_currency\": \"CLP\",\n    \"x_reference\": \"0\",\n    \"x_customer_email\": \"luis.ramirez@kibernum.com\",\n    \"x_url_complete\": \"https://dashboard-craft.pagofacil.cl/\",\n    \"x_url_cancel\": \"https://dashboard-craft.pagofacil.cl//orders/return-url/\",\n    \"x_url_callback\": \"https://uzotywpg3a.execute-api.us-west-2.amazonaws.com/craft/complete-order/6373-2020-04-1-2988-3\",\n    \"x_shop_country\": \"CL\",\n    \"x_session_id\": \"1794968\",\n    \"x_timestamp\": \"2020-04-23T21:32:11.000Z\",\n    \"x_gateway_reference\": \"0\",\n    \"x_result\": \"completed\",\n    \"x_message\": \"X\",\n    \"x_test\": \"false\",\n    \"x_signature\": \"20de171c713469e2e62e1aa78ba499a95a116e621b31c9ae7f19c14c1f01239b\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CompletarOrden}}/craft/complete-order/0",
							"host": [
								"{{URL_CompletarOrden}}"
							],
							"path": [
								"craft",
								"complete-order",
								"0"
							]
						}
					},
					"response": []
				},
				{
					"name": "CP_004_NoEnviaFirma",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d204adfb-421c-48ac-ba12-d1f0b2dfaa71",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"let estado = pm.response.code;",
									"console.log(estado);",
									"pm.test(\"CP_004_NoEnviaFirma | Request Status 400 | Valor obtenido: \"+estado, function () {",
									"    pm.expect(estado).to.eql(400);",
									"});",
									"",
									"let error = jsonData.message;",
									"console.log(error);",
									"pm.test(\"CP_004_NoEnviaFirma | Validación mensaje: No trae la firma | Valor obtenido: \"+error, function () {",
									"    pm.expect(error).to.eql(\"No trae la firma\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{TokenAlexUser}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"x_account_id\": \"66cbe5587089c349d216b15c2887212134d3394586d2632abf18e1f7e25d0bcb\",\n    \"x_amount\": 49900,\n    \"x_currency\": \"CLP\",\n    \"x_reference\": \"6385-2020-04-1-2992-3\",\n    \"x_customer_email\": \"alexander.cabrera@kibernum.com\",\n    \"x_url_complete\": \"https://dashboard-craft.pagofacil.cl/\",\n    \"x_url_cancel\": \"https://dashboard-craft.pagofacil.cl//orders/return-url/\",\n    \"x_url_callback\": \"https://uzotywpg3a.execute-api.us-west-2.amazonaws.com/craft/complete-order/6385-2020-04-1-2992-3\",\n    \"x_shop_country\": \"CL\",\n    \"x_session_id\": \"7762427\",\n    \"x_timestamp\": \"2020-04-24T21:32:11.000Z\",\n    \"x_gateway_reference\": \"51275151\",\n    \"x_result\": \"completed\",\n    \"x_message\": \"X\",\n    \"x_test\": \"false\"\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CompletarOrden}}/craft/complete-order/6385-2020-04-1-2992-3",
							"host": [
								"{{URL_CompletarOrden}}"
							],
							"path": [
								"craft",
								"complete-order",
								"6385-2020-04-1-2992-3"
							]
						}
					},
					"response": []
				},
				{
					"name": "CP_005_EnvioFirmaInvalida",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2174b7ed-7cf9-49e1-9c23-6904a60e0df0",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"let estado = pm.response.code;",
									"console.log(estado);",
									"pm.test(\"CP_005_EnvioFirmaInvalida | Se requiere: Status 403 | Valor obtenido: \"+estado, function () {",
									"    pm.expect(estado).to.eql(403);",
									"});",
									"",
									"let error = jsonData.errorMessage;",
									"console.log(error);",
									"pm.test(\"CP_005_EnvioFirmaInvalida | Validación response: Firmas no concuerdan | Valor obtenido: \"+error, function () {",
									"    pm.expect(error).to.eql(\"Firmas no concuerdan\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{TokenAlexUser}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"x_account_id\": \"0831cabfe9005372eab99cd67e034fc7222443a2b028acec1fffcb66c843a1fc\",\n    \"x_amount\": 49900,\n    \"x_currency\": \"CLP\",\n    \"x_reference\": \"6386-2020-04-1-2997-3\",\n    \"x_customer_email\": \"mauxi@pagofacil.cl\",\n    \"x_url_complete\": \"https://dashboard-craft.pagofacil.cl//orders/return-url\",\n    \"x_url_cancel\": \"https://dashboard-craft.pagofacil.cl/\",\n    \"x_url_callback\": \"https://uzotywpg3a.execute-api.us-west-2.amazonaws.com/craft/complete-order/501-2020-02-1-2923-3\",\n    \"x_shop_country\": \"CL\",\n    \"x_session_id\": \"1004372\",\n    \"x_timestamp\": \"2020-03-17T12:23:39.220Z\",\n    \"x_gateway_reference\": \"51275105\",\n    \"x_result\": \"completed\",\n    \"x_message\": \"X\",\n    \"x_test\": \"false\",\n    \"x_signature\": \"45b93f9ecf328af0a5dc14f4d969e12a81c30d13875903f62ca0fd39bf789\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CompletarOrden}}/craft/complete-order/6386-2020-04-1-2997-3",
							"host": [
								"{{URL_CompletarOrden}}"
							],
							"path": [
								"craft",
								"complete-order",
								"6386-2020-04-1-2997-3"
							]
						}
					},
					"response": []
				},
				{
					"name": "CP_006_EnvioPendiente",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cc52d966-11b7-45c3-bf8e-f16194b29862",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"let estado = pm.response.code;",
									"console.log(estado);",
									"pm.test(\"CP_006_EnvioPendiente | Se requiere: Status 200 | Valor obtenido: \"+estado, function () {",
									"    pm.expect(estado).to.eql(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{TokenAlexUser}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \r\n    \"x_account_id\": \"e90ff8fb6051bf4cbf26067363ee9c23535dd42d8e858ad19d4d34683b0f6a75\",\r\n    \"x_amount\": 49900,\r\n    \"x_currency\": \"CLP\",\r\n    \"x_reference\": \"6385-2020-05-1-3069-3\",\r\n    \"x_customer_email\": \"alexander.cabrera@kibernum.com\",\r\n    \"x_url_complete\": \"https://dashboard-craft.pagofacil.cl/\",\r\n    \"x_url_cancel\": \"https://dashboard-craft.pagofacil.cl//orders/return-url\",\r\n    \"x_url_callback\": \"https://uzotywpg3a.execute-api.us-west-2.amazonaws.com/craft/complete-order/6385-2020-05-1-3069-3\",\r\n    \"x_shop_country\": \"CL\",\r\n    \"x_session_id\": \"2910570\",\r\n    \"x_timestamp\": \"2020-05-26T12:23:39.220Z\",\r\n    \"x_gateway_reference\": \"51275263\",\r\n    \"x_result\": \"completed\",\r\n    \"x_message\": \"X\",\r\n    \"x_test\": \"false\",\r\n    \"x_signature\": \"e78dfd298e641c0254816af41adc5b31186003f7a95db3ca39cea167ba43b159\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CompletarOrden}}/craft/complete-order/6385-2020-05-1-3069-3",
							"host": [
								"{{URL_CompletarOrden}}"
							],
							"path": [
								"craft",
								"complete-order",
								"6385-2020-05-1-3069-3"
							]
						},
						"description": "Para enviar este script debe utilizarse una orden uqe no este completada. Dee estar en estado pendiente."
					},
					"response": []
				}
			],
			"description": "x_account_id\tString\t255\tCorresponde al Token Service relacionado al servicio con el que deseas generar el cobro.\r\nx_amount\tFloat\t10 enteros y 2 decimales\tMonto de la trx. Admite decimales si la divisa utilizada los utiliza.\r\nx_currency\tString\t3\tCódigo de divisa. (moneda)\r\nx_reference\tString\t45\tNúmero de trx del cliente. Este número debería ser único por servicio para no tener problema de duplicidad de pagos.\r\nx_customer_email\tString\t255\tcorreo del cliente\r\nx_url_complete\tString\t255\t\"Dirección en dónde se redireccionará al momento de completar la transacción. Se enviará un POST a esta URL con los mismos datos del callback explicado en la sección response.\r\n\"\r\nx_url_cancel\tString\t255\tDirección en dónde se redireccionará en caso de cancelación. Se recomienda usar la dirección del carrito de compras.\r\nx_url_callback\tString\t255\tDirección en donde se avisará de los cambios en la transacción de manera asincrónica a través de un método POST.\r\nx_shop_country\tString\t3\tPaís donde se realiza la orden\r\nx_session_id\tString\t61\tIdentificador único de la sesión del usuario que realiza el pago.\r\nx_timestamp\tString\t30\t\r\nx_gateway_reference\tString\t11\tId de la trx en PagoFacil\r\nx_result\tString\t45\t\r\nx_message\tString\t\t\r\nx_test\tString\t\t\r\nx_signature\tString\t\tMensaje Firmado para validar la información.\r\n",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "dd0b5e70-142a-4674-a92c-206fa7d893d7",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "296486ba-e0c6-46d8-9342-788acac00037",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Reportes",
			"item": [
				{
					"name": "GenerarToken_UserSinPermiso",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b9bada72-a6b4-4eab-894b-d36f1bb89e69",
								"exec": [
									"//Pasar token a variable Global",
									"let jsondata = pm.response.json();",
									"pm.globals.set(\"UserSinPermiso\",jsondata.data.access_token_jwt);",
									"",
									"let estado = pm.response.code;",
									"console.log(estado);",
									"",
									"//Validar que codigo sea el requerido",
									"pm.test(\"CP_001_Generar Token | Se requiere: Status 200 | valor obtenido: \"+estado, function () {",
									"    pm.expect(estado).to.eql(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"usuarionoadmin2@yopmail.com\",\n    \"password\": \"PruebasBL1*\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/users/login?",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"users",
								"login"
							],
							"query": [
								{
									"key": "",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GenerarTokenJuridico",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ed9c2777-66cc-42b9-9882-215c7e1f2a89",
								"exec": [
									"//Pasar token a variable Global",
									"let jsondata = pm.response.json();",
									"pm.globals.set(\"TokenAlexUser\", jsondata.data.access_token_jwt);",
									"let estado = pm.response.code;",
									"console.log(estado);",
									"",
									"//Validar que codigo sea el requerido",
									"pm.test(\"CP_001_Generar Token | Se requiere: Status 200 | valor obtenido: \" + estado, function () {",
									"    pm.expect(estado).to.eql(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"alexander.cabrera@kibernum.com\",\n    \"password\": \"Ignacio2020*\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/users/login?",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"users",
								"login"
							],
							"query": [
								{
									"key": "",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener abonos disponibles en un día",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d0597cf1-9bab-46c9-9db7-4fa7effb8691",
								"exec": [
									"let jsonData = pm.response.json();\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"pm.test(\"Obtener abonos disponibles en un día | Request Status 200 | Valor obtenido: \"+estado, function () {\r",
									"    pm.expect(estado).to.eql(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Bearer {{TokenAlexUser}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"idUser\": 1,\n    \"initialDate\": 1587427200,\n    \"finalDate\": 1587427200\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/reports/remittances?pageNumber=1&pageSize=10",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"reports",
								"remittances"
							],
							"query": [
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "pageSize",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Abonos en un rango de fecha válido",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7b3aa2fc-27b5-4adf-85fd-8b6134359fb3",
								"exec": [
									"let jsonData = pm.response.json();\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"pm.test(\"Abonos en un rango de fecha válido | Request Status 200 | Valor obtenido: \"+estado, function () {\r",
									"    pm.expect(estado).to.eql(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{TokenAlexUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"idUser\": 1,\n    \"initialDate\": 1585699200,\n    \"finalDate\": 1588291199\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/reports/remittances?pageNumber=1&pageSize=10",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"reports",
								"remittances"
							],
							"query": [
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "pageSize",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Abonos inexistentes en las fechas",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f40563ae-33c8-4c07-8462-01dbe84cb095",
								"exec": [
									"let jsonData = pm.response.json();\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"pm.test(\"Abonos inexistentes en las fechas | Request Status 200 | Valor obtenido: \"+estado, function () {\r",
									"    pm.expect(estado).to.eql(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{TokenAlexUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"idUser\": 1,\n    \"initialDate\": 1588291200,\n    \"finalDate\": 1589846399\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/reports/remittances?pageNumber=1&pageSize=10",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"reports",
								"remittances"
							],
							"query": [
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "pageSize",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Falta un parámetro o inválido",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "586e36a1-7a2a-4d55-8184-cd9b0ca71813",
								"exec": [
									"let jsonData = pm.response.json();\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"pm.test(\"Falta un parámetro o inválido | Request Status 422 | Valor obtenido: \"+estado, function () {\r",
									"    pm.expect(estado).to.eql(422);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{TokenAlexUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"idUser\": \"1\",\n    \"initialDate\": 1588291200,\n    \"finalDate\": \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/reports/remittances?pageNumber=1&pageSize=10",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"reports",
								"remittances"
							],
							"query": [
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "pageSize",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Usuario sin permisos",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "582983d4-7229-4ba7-9f19-ad03d49b5ac2",
								"exec": [
									"let jsonData = pm.response.json();\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"pm.test(\"Usuario sin permisos | Request Status 403 | Valor obtenido: \"+estado, function () {\r",
									"    pm.expect(estado).to.eql(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{UserSinPermiso}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"idUser\": 1,\n    \"initialDate\": 1588291200,\n    \"finalDate\": 1588291200\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/reports/remittances?pageNumber=1&pageSize=10",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"reports",
								"remittances"
							],
							"query": [
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "pageSize",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "No se envía Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "53c8c5bb-69e7-4970-81ce-b015b6999a81",
								"exec": [
									"let jsonData = pm.response.json();\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"pm.test(\"No se envía Token | Request Status 401 | Valor obtenido: \"+estado, function () {\r",
									"    pm.expect(estado).to.eql(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"idUser\": 1,\n    \"initialDate\": 1588291200,\n    \"finalDate\": 1588291200\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/reports/remittances?pageNumber=1&pageSize=10",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"reports",
								"remittances"
							],
							"query": [
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "pageSize",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Servidor caído",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9b38cc53-ec42-4ffa-9a53-afcf3d1dd357",
								"exec": [
									"let jsonData = pm.response.json();\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"pm.test(\"Servidor caído | Request Status 500 | Valor obtenido: \"+estado, function () {\r",
									"    pm.expect(estado).to.eql(500);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{TokenAlexUser}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"idUser\": 1,\n    \"initialDate\": 1588291200,\n    \"finalDate\": 1588291200\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/reports/remittances?pageNumber=0&pageSize=10",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"reports",
								"remittances"
							],
							"query": [
								{
									"key": "pageNumber",
									"value": "0"
								},
								{
									"key": "pageSize",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Descarga de archivo con datos incompletos",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "21a60d18-ddbd-4524-819a-3a91dad3b680",
								"exec": [
									"let jsonData = pm.response.json();\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"pm.test(\"Descarga de archivo con datos incompletos | Request Status 200 | Valor obtenido: \"+estado, function () {\r",
									"    pm.expect(estado).to.eql(422);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{TokenAlexUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"idUser\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/reports/remittance/file",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"reports",
								"remittance",
								"file"
							]
						}
					},
					"response": []
				},
				{
					"name": "Descarga de archivo  - Validacion tipo de datos",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1d08e229-57de-4c3d-8bed-e4be9b53febb",
								"exec": [
									"let jsonData = pm.response.json();\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"pm.test(\"Descarga de archivo / Validacion tipo de datos | Request Status 422 | Valor obtenido: \"+estado, function () {\r",
									"    pm.expect(estado).to.eql(422);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{TokenAlexUser}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"idUser\": 1,\n    \"dateRemittance\": \"1588118400\",\n    \"amount\": 96296\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/reports/remittance/file",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"reports",
								"remittance",
								"file"
							]
						}
					},
					"response": []
				},
				{
					"name": "Descarga de archivo - Error Interno del Servidor",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "470fcaab-7aca-4fcc-a38a-7a75ab47dcb6",
								"exec": [
									"let jsonData = pm.response.json();\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"pm.test(\"Descarga de archivo - Error Interno del Servidor | Request Status 500 | Valor obtenido: \"+estado, function () {\r",
									"    pm.expect(estado).to.eql(500);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{TokenAlexUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"idUser\": 1,\r\n\t\"dateRemittance\": 15881184009978765646465465,\r\n\t\"amount\": 2983284238943\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/reports/remittance/file",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"reports",
								"remittance",
								"file"
							]
						}
					},
					"response": []
				},
				{
					"name": "Descarga archivo - Usuario sin permisos",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "47e11ad5-5f1e-4c42-8e83-d75c7cb5d6b9",
								"exec": [
									"let jsonData = pm.response.json();\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"pm.test(\"Usuario sin permisos | Request Status 403 | Valor obtenido: \"+estado, function () {\r",
									"    pm.expect(estado).to.eql(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{UserSinPermiso}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"idUser\": 1,\n    \"dateRemittance\": 1588118400,\n    \"amount\": 96296\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/reports/remittance/file",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"reports",
								"remittance",
								"file"
							]
						}
					},
					"response": []
				},
				{
					"name": "Descarga archivo -No se envía Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9bb809af-52d0-474e-bc4a-ebce068c1519",
								"exec": [
									"let jsonData = pm.response.json();\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"pm.test(\"No se envía Token | Request Status 401 | Valor obtenido: \"+estado, function () {\r",
									"    pm.expect(estado).to.eql(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"idUser\": 1,\n    \"initialDate\": 1588291200,\n    \"finalDate\": 1588291200\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/reports/remittance/file",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"reports",
								"remittance",
								"file"
							]
						}
					},
					"response": []
				},
				{
					"name": "Descarga archivo - Validación campo Monto",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b5272a96-8ac3-4cb7-9c81-8c65425634fe",
								"exec": [
									"let jsonData = pm.response.json();\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"pm.test(\"Descarga archivo - Validación campo Monto | Request Status 422 | Valor obtenido: \"+estado, function () {\r",
									"    pm.expect(estado).to.eql(422);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{TokenAlexUser}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"idUser\": 1,\n    \"dateRemittance\": 1588118400,\n    \"amount\": 78769876875576576\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/reports/remittance/file",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"reports",
								"remittance",
								"file"
							]
						}
					},
					"response": []
				},
				{
					"name": "Descarga archivo reporte de abonos",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "985f6f81-afb7-41f4-b055-6edce03ac11f",
								"exec": [
									"let jsonData = pm.response.json();\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"pm.test(\"Descarga archivo reporte de abonos | Request Status 200 | Valor obtenido: \"+estado, function () {\r",
									"    pm.expect(estado).to.eql(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{TokenAlexUser}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"idUser\": 1,\n    \"dateRemittance\": 1588118400,\n    \"amount\": 96296\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/reports/remittance/file",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"reports",
								"remittance",
								"file"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Payouts",
			"item": [
				{
					"name": "LOGIN",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6a5fbad0-ffb6-47cf-aab6-8b3ae556c2ec",
								"exec": [
									"//Pasar token a variable global",
									"let jsonData = pm.response.json(); ",
									"console.log (jsonData);",
									"pm.globals.set (\"Token_AlexUser\", jsonData.data.access_token_jwt);",
									"",
									"//Primer caso de pruebas validar codigo de respuesta correspondiente a Status de Request",
									"let estado = pm.response.code;",
									"console.log(estado);",
									"pm.test(\"LOGIN | Request Status 200 | Valor obtenido: \"+estado, function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"alexander.cabrera@kibernum.com\",\n    \"password\": \"Ignacio2020*\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/users/login",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"users",
								"login"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Token con apiToken",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cc249502-9225-4acd-8d87-83b7b0ae0b10",
								"exec": [
									"//Pasar token a variable global",
									"let jsonData = pm.response.json(); ",
									"console.log (jsonData);",
									"pm.globals.set (\"Api_Token_AlexUser\", jsonData.access_token_jwt);",
									"",
									"//Primer caso de pruebas validar codigo de respuesta correspondiente a Status de Request",
									"let estado = pm.response.code;",
									"console.log(estado);",
									"pm.test(\"Request Status 200 | Valor obtenido: \"+estado, function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"email\":\"alexander.cabrera@kibernum.com\",\"apiToken\":\"c8a9190f-6a8d-4e01-9f16-865611e16d57\"}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{URL_ApiToken}}/dev/loginToken",
							"host": [
								"{{URL_ApiToken}}"
							],
							"path": [
								"dev",
								"loginToken"
							]
						},
						"description": "Genera un Token JWT usando el correo y un API Token"
					},
					"response": []
				},
				{
					"name": "CP_001_Envío de dinero OK",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5399470d-e3e6-41a8-918e-77aff2edaebd",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"let estado = pm.response.code;",
									"console.log(estado);",
									"pm.test(\"CP_001_Envío de dinero OK |Se requiere 201 | Valor obtenido: \"+estado, function () {",
									"    pm.expect(estado).to.eql(201);",
									"});",
									"",
									"let error = jsonData.message;",
									"console.log(error);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Api_Token_AlexUser}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{Token_AlexUser}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							},
							{
								"key": "apiToken",
								"value": "c8a9190f-6a8d-4e01-9f16-865611e16d57",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Authorization",
								"value": "bearer {{Api_Token_AlexUser}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"tef\": {\n    \"id\": \"{{$guid}}\",\n    \"messageToAddressee\": \"TEST MESSAGE\",\n    \"amount\": 9000,\n    \"recipientData\": {\n      \"rut\": \"16207214-5\",\n      \"name\": \"Cristian Andres Tala Sanchez\",\n      \"email\": \"alexander\"\n    },\n    \"bankData\": {\n      \"bankAccount\": \"3680210608\",\n      \"bankSBIFNumber\": \"001\"\n    }\n  },\n  \"callbackUrl\": \"https://sys.cristiantala.cl/callbackResponse\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://apis.pagofacil.xyz/dev/tef",
							"protocol": "https",
							"host": [
								"apis",
								"pagofacil",
								"xyz"
							],
							"path": [
								"dev",
								"tef"
							]
						},
						"description": "Se requiere generar API TOKEN para ejecutar el request"
					},
					"response": []
				},
				{
					"name": "CP_001_Envío de dinero OK Datos Alex",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "37ccc16d-dbd5-48b8-9513-fb0c7694a537",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"let estado = pm.response.code;",
									"console.log(estado);",
									"pm.test(\"CP_001_Envío de dinero OK |Se requiere 201 | Valor obtenido: \"+estado, function () {",
									"    pm.expect(estado).to.eql(201);",
									"});",
									"",
									"let error = jsonData.message;",
									"console.log(error);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Api_Token_AlexUser}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "bearer {{Token_AlexUser}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "bearer {{Api_Token_AlexUser}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"tef\": {\n    \"id\": \"{{$guid}}\",\n    \"messageToAddressee\": \"TEST MESSAGE\",\n    \"amount\": 1800,\n    \"recipientData\": {\n      \"rut\": \"24871670-3\",\n      \"name\": \"Alexander Cabrera\",\n      \"email\": \"alexander.cabrera@kibernum.com\"\n    },\n    \"bankData\": {\n      \"bankAccount\": \"3680210608\",\n      \"bankSBIFNumber\": \"001\"\n    }\n  },\n  \"callbackUrl\": \"https://sys.cristiantala.cl/callbackResponse\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://apis.pagofacil.xyz/dev/tef",
							"protocol": "https",
							"host": [
								"apis",
								"pagofacil",
								"xyz"
							],
							"path": [
								"dev",
								"tef"
							]
						},
						"description": "Se requiere generar API TOKEN para ejecutar el request"
					},
					"response": []
				},
				{
					"name": "CP_002_Envío de dinero No Monto",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "93e96177-adea-40e9-b0e2-47ae2365b69d",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"let estado = pm.response.code;",
									"console.log(estado);",
									"pm.test(\"CP_002_Envío de dinero No Monto |Se requiere 422 | Valor obtenido: \"+estado, function () {",
									"    pm.expect(estado).to.eql(422);",
									"});",
									"",
									"let error = jsonData.message;",
									"console.log(error);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Api_Token_AlexUser}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "bearer {{Token_AlexUser}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json",
								"disabled": true
							},
							{
								"key": "apiToken",
								"type": "text",
								"value": "c8a9190f-6a8d-4e01-9f16-865611e16d57",
								"disabled": true
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "bearer {{Api_Token_AlexUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"tef\": {\n    \"id\": \"{{$guid}}\",\n    \"messageToAddressee\": \"TEST MESSAGE\",\n    \"amount\": null,\n    \"recipientData\": {\n      \"rut\": \"16207214-5\",\n      \"name\": \"Cristian Andres Tala Sanchez\",\n      \"email\": \"yomismo@cristiantala.cl\"\n    },\n    \"bankData\": {\n      \"bankAccount\": \"3680210608\",\n      \"bankSBIFNumber\": \"001\"\n    }\n  },\n  \"callbackUrl\": \"https://sys.cristiantala.cl/callbackResponse\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://apis.pagofacil.xyz/dev/tef",
							"protocol": "https",
							"host": [
								"apis",
								"pagofacil",
								"xyz"
							],
							"path": [
								"dev",
								"tef"
							]
						}
					},
					"response": []
				},
				{
					"name": "CP_003_Envío de dinero No Rut",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c140848d-c246-4d86-aa36-0ac41d5d5f3c",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"let estado = pm.response.code;",
									"console.log(estado);",
									"pm.test(\"CP_003_Envío de dinero No Rut |Se requiere 422 | Valor obtenido: \"+estado, function () {",
									"    pm.expect(estado).to.eql(422);",
									"});",
									"",
									"let error = jsonData.message;",
									"console.log(error);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Api_Token_AlexUser}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "bearer {{Token_AlexUser}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json",
								"disabled": true
							},
							{
								"key": "apiToken",
								"type": "text",
								"value": "c8a9190f-6a8d-4e01-9f16-865611e16d57",
								"disabled": true
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "bearer {{Api_Token_AlexUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"tef\": {\n    \"id\": \"{{$guid}}\",\n    \"messageToAddressee\": \"TEST MESSAGE\",\n    \"amount\": 200,\n    \"recipientData\": {\n      \"rut\": \"\",\n      \"name\": \"Cristian Andres Tala Sanchez\",\n      \"email\": \"yomismo@cristiantala.cl\"\n    },\n    \"bankData\": {\n      \"bankAccount\": \"3680210608\",\n      \"bankSBIFNumber\": \"001\"\n    }\n  },\n  \"callbackUrl\": \"https://sys.cristiantala.cl/callbackResponse\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://apis.pagofacil.xyz/dev/tef",
							"protocol": "https",
							"host": [
								"apis",
								"pagofacil",
								"xyz"
							],
							"path": [
								"dev",
								"tef"
							]
						}
					},
					"response": []
				},
				{
					"name": "CP_004_Envío de dinero No Name",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fe9cc074-2254-4c85-a90e-6b242a3a4167",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"let estado = pm.response.code;",
									"console.log(estado);",
									"pm.test(\"CP_004_Envío de dinero No Name |Se requiere 422 | Valor obtenido: \"+estado, function () {",
									"    pm.expect(estado).to.eql(422);",
									"});",
									"",
									"let error = jsonData.message;",
									"console.log(error);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Api_Token_AlexUser}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "bearer {{Token_AlexUser}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json",
								"disabled": true
							},
							{
								"key": "apiToken",
								"type": "text",
								"value": "c8a9190f-6a8d-4e01-9f16-865611e16d57",
								"disabled": true
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "bearer {{Api_Token_AlexUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"tef\": {\n    \"id\": \"{{$guid}}\",\n    \"messageToAddressee\": \"TEST MESSAGE\",\n    \"amount\": 200,\n    \"recipientData\": {\n      \"rut\": \"24871670-3\",\n      \"name\": \"\",\n      \"email\": \"yomismo@cristiantala.cl\"\n    },\n    \"bankData\": {\n      \"bankAccount\": \"3680210608\",\n      \"bankSBIFNumber\": \"001\"\n    }\n  },\n  \"callbackUrl\": \"https://sys.cristiantala.cl/callbackResponse\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://apis.pagofacil.xyz/dev/tef",
							"protocol": "https",
							"host": [
								"apis",
								"pagofacil",
								"xyz"
							],
							"path": [
								"dev",
								"tef"
							]
						}
					},
					"response": []
				},
				{
					"name": "CP_005_Envío de dinero No Mail",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7f02d94e-cf72-46bd-ba70-23787c6904ac",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"let estado = pm.response.code;",
									"console.log(estado);",
									"pm.test(\"CP_005_Envío de dinero No Mail |Se requiere 422 | Valor obtenido: \"+estado, function () {",
									"    pm.expect(estado).to.eql(422);",
									"});",
									"",
									"let error = jsonData.message;",
									"console.log(error);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Api_Token_AlexUser}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "bearer {{Token_AlexUser}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json",
								"disabled": true
							},
							{
								"key": "apiToken",
								"type": "text",
								"value": "c8a9190f-6a8d-4e01-9f16-865611e16d57",
								"disabled": true
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "bearer {{Api_Token_AlexUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"tef\": {\n    \"id\": \"{{$guid}}\",\n    \"messageToAddressee\": \"TEST MESSAGE\",\n    \"amount\": 500,\n    \"recipientData\": {\n      \"rut\": \"24871670-3\",\n      \"name\": \"Alexander Cabrera\",\n      \"email\": \"\"\n    },\n    \"bankData\": {\n      \"bankAccount\": \"3680210608\",\n      \"bankSBIFNumber\": \"001\"\n    }\n  },\n  \"callbackUrl\": \"https://sys.cristiantala.cl/callbackResponse\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://apis.pagofacil.xyz/dev/tef",
							"protocol": "https",
							"host": [
								"apis",
								"pagofacil",
								"xyz"
							],
							"path": [
								"dev",
								"tef"
							]
						}
					},
					"response": []
				},
				{
					"name": "CP_006_Envío de dinero No bankAccount",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6e1461c6-74cb-4723-ac52-41d2e779f589",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"let estado = pm.response.code;",
									"console.log(estado);",
									"pm.test(\"CP_006_Envío de dinero No bankAccount |Se requiere 422 | Valor obtenido: \"+estado, function () {",
									"    pm.expect(estado).to.eql(422);",
									"});",
									"",
									"let error = jsonData.message;",
									"console.log(error);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Api_Token_AlexUser}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "bearer {{Token_AlexUser}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json",
								"disabled": true
							},
							{
								"key": "apiToken",
								"type": "text",
								"value": "c8a9190f-6a8d-4e01-9f16-865611e16d57",
								"disabled": true
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "bearer {{Api_Token_AlexUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"tef\": {\n    \"id\": \"{{$guid}}\",\n    \"messageToAddressee\": \"TEST MESSAGE\",\n    \"amount\": 500,\n    \"recipientData\": {\n      \"rut\": \"24871670-3\",\n      \"name\": \"Alexander Cabrera\",\n      \"email\": \"alexander.cabrera@kibernum.com\"\n    },\n    \"bankData\": {\n      \"bankAccount\": \"\",\n      \"bankSBIFNumber\": \"001\"\n    }\n  },\n  \"callbackUrl\": \"https://sys.cristiantala.cl/callbackResponse\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://apis.pagofacil.xyz/dev/tef",
							"protocol": "https",
							"host": [
								"apis",
								"pagofacil",
								"xyz"
							],
							"path": [
								"dev",
								"tef"
							]
						}
					},
					"response": []
				},
				{
					"name": "CP_007_Envío de dinero No bankSBIFNumber",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3fd45e83-0282-459f-a513-ebe69b8df5e2",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"let estado = pm.response.code;",
									"console.log(estado);",
									"pm.test(\"CP_007_Envío de dinero No bankSBIFNumber |Se requiere 422 | Valor obtenido: \"+estado, function () {",
									"    pm.expect(estado).to.eql(422);",
									"});",
									"",
									"let error = jsonData.message;",
									"console.log(error);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Api_Token_AlexUser}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "bearer {{Token_AlexUser}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json",
								"disabled": true
							},
							{
								"key": "apiToken",
								"type": "text",
								"value": "c8a9190f-6a8d-4e01-9f16-865611e16d57",
								"disabled": true
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "bearer {{Api_Token_AlexUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"tef\": {\n    \"id\": \"{{$guid}}\",\n    \"messageToAddressee\": \"TEST MESSAGE\",\n    \"amount\": 300,\n    \"recipientData\": {\n      \"rut\": \"16207214-5\",\n      \"name\": \"Cristian Andres Tala Sanchez\",\n      \"email\": \"yomismo@cristiantala.cl\"\n    },\n    \"bankData\": {\n      \"bankAccount\": \"3680210608\",\n      \"bankSBIFNumber\": \"\"\n    }\n  },\n  \"callbackUrl\": \"https://sys.cristiantala.cl/callbackResponse\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://apis.pagofacil.xyz/dev/tef",
							"protocol": "https",
							"host": [
								"apis",
								"pagofacil",
								"xyz"
							],
							"path": [
								"dev",
								"tef"
							]
						}
					},
					"response": []
				}
			],
			"description": "usuario de Alex no tiene privilegios en CRAFT para los payouts",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "4765b489-fc76-42ca-bd98-1963cd23b5d7",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "656b2edf-c7ae-45a9-b5a4-62b0387cf581",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "ADD ADDON",
			"item": [
				{
					"name": "GenerarToken Alex",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fc76f260-ac54-41ad-a3b9-4d433c1f969e",
								"exec": [
									"//Pasar token a variable Global",
									"let jsondata = pm.response.json();",
									"pm.globals.set(\"Token_AlexUser\", jsondata.data.access_token_jwt);",
									"let estado = pm.response.code;",
									"console.log(estado);",
									"",
									"//Validar que codigo sea el requerido",
									"pm.test(\"CP_001_Generar Token | Se requiere: Status 200 | valor obtenido: \" + estado, function () {",
									"    pm.expect(estado).to.eql(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"alexander.cabrera@kibernum.com\",\n    \"password\": \"Ignacio2020*\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/users/login?",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"users",
								"login"
							],
							"query": [
								{
									"key": "",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Agregar Addons Nubox 200",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Token_AlexUser}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"idService\": \"3056\",\r\n    \"tokenAddon\": \"token_Nubox\",\r\n    \"categoria\": \"FACTURACION\",\r\n    \"config\": {\r\n        \"rutEmpresa\": \"76804564-K\",\r\n        \"rutFuncionario\": \"16207214-5\",\r\n        \"token_user\": \"UFNUQ3J0OlBTVENydDc2ODA0NTY0\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/addons",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"addons"
							]
						}
					},
					"response": []
				},
				{
					"name": "Agregar Addons Nubox ya configurado 403",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{Token_AlexUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"idService\": \"3056\",\r\n    \"tokenAddon\": \"token_Nubox\",\r\n    \"categoria\": \"FACTURACION\",\r\n    \"config\": {\r\n        \"rutEmpresa\": \"76804564-K\",\r\n        \"rutFuncionario\": \"16207214-5\",\r\n        \"token_user\": \"UFNUQ3J0OlBTVENydDc2ODA0NTY0\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/addons",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"addons"
							]
						}
					},
					"response": []
				},
				{
					"name": "Agregar Addons Nubox  500",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Token_AlexUser}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"idService\": \"3056\",\r\n    \"tokenAddon\": \"token_Nubox\",\r\n    \"categoria\": \"FACTURACION\",\r\n    \"config\": {\r\n        \"rutEmpresa\": \"76804564-K\",\r\n        \"rutFuncionario\": \"16207214-5\",\r\n        \"token_user\": \"UFNUQ3J0OlBTVENydDc2ODA0NTY0\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/addons",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"addons"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Verify Company Pendiente",
			"item": [
				{
					"name": "UTILIDAD",
					"item": [
						{
							"name": "LOGIN user alex",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "79dee395-4ee1-4b27-813c-1eb6b9152aa3",
										"exec": [
											"//Pasar token a variable global",
											"let jsonData = pm.response.json(); ",
											"console.log (jsonData);",
											"pm.globals.set (\"Token_AlexUser\", jsonData.data.access_token_jwt);",
											"",
											"//Primer caso de pruebas validar codigo de respuesta correspondiente a Status de Request",
											"let estado = pm.response.code;",
											"console.log(estado);",
											"pm.test(\"LOGIN | Request Status 200 | Valor obtenido: \"+estado, function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"alexander.cabrera@kibernum.com\",\n    \"password\": \"Ignacio2020*\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_CRAFT}}/users/login",
									"host": [
										"{{URL_CRAFT}}"
									],
									"path": [
										"users",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "LOGIN verificacionsii@yopmail.com",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "39abe6ac-56a7-4e58-833f-025b89bef493",
										"exec": [
											"//Pasar token a variable global",
											"let jsonData = pm.response.json(); ",
											"console.log (jsonData);",
											"pm.globals.set (\"Token_AlexUser\", jsonData.data.access_token_jwt);",
											"",
											"//Primer caso de pruebas validar codigo de respuesta correspondiente a Status de Request",
											"let estado = pm.response.code;",
											"console.log(estado);",
											"pm.test(\"LOGIN | Request Status 200 | Valor obtenido: \"+estado, function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"verificacionsii@yopmail.com\",\n    \"password\": \"PruebaSII2020*\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_CRAFT}}/users/login",
									"host": [
										"{{URL_CRAFT}}"
									],
									"path": [
										"users",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "LOGIN verificacionsii_2@yopmail.com",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "518bedd1-77e3-4e19-9e09-20d93acf4ad9",
										"exec": [
											"//Pasar token a variable global",
											"let jsonData = pm.response.json(); ",
											"console.log (jsonData);",
											"pm.globals.set (\"Token_AlexUser\", jsonData.data.access_token_jwt);",
											"",
											"//Primer caso de pruebas validar codigo de respuesta correspondiente a Status de Request",
											"let estado = pm.response.code;",
											"console.log(estado);",
											"pm.test(\"LOGIN | Request Status 200 | Valor obtenido: \"+estado, function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"verificacionsii_2@yopmail.com\",\n    \"password\": \"PruebaSII2020*\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_CRAFT}}/users/login",
									"host": [
										"{{URL_CRAFT}}"
									],
									"path": [
										"users",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "LOGIN verificacionsii_3@yopmail.com",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "949b1128-628f-4ced-bd43-61d89deeedf1",
										"exec": [
											"//Pasar token a variable global",
											"let jsonData = pm.response.json(); ",
											"console.log (jsonData);",
											"pm.globals.set (\"Token_AlexUser\", jsonData.data.access_token_jwt);",
											"",
											"//Primer caso de pruebas validar codigo de respuesta correspondiente a Status de Request",
											"let estado = pm.response.code;",
											"console.log(estado);",
											"pm.test(\"LOGIN | Request Status 200 | Valor obtenido: \"+estado, function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"verificacionsii_3@yopmail.com\",\n    \"password\": \"PruebaSII2020*\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_CRAFT}}/users/login",
									"host": [
										"{{URL_CRAFT}}"
									],
									"path": [
										"users",
										"login"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "CP_001_ENVIO DATOS CORRECTOS EMPRESA",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5ff7cb8f-00c7-4221-bb32-0dd4fcc09661",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"let estado = pm.response.code;",
									"console.log(estado);",
									"pm.test(\"CP_001_ENVIO DATOS CORRECTOS EMPRESA | Se requiere Status: 200 | Valor obtenido: \"+estado, function () {",
									"    pm.expect(estado).to.eql(200);",
									"});",
									"",
									"let error = jsonData.errorMessage;",
									"console.log(error);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJraWQiOiJ3bnF6dFN3RzNsQ3FNYVQ5T09QMlVxaG5VeU5wVmhnc203SzBKanFKcnh3PSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI4NWMxNjIyZC00NWUwLTRkZmQtYWVmMS04MTVkYTMzYjRhMzkiLCJhdWQiOiI2bWl1MTkzdWw4Zzk1MHNzdDY0MjQ5djRpbSIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJldmVudF9pZCI6IjhhM2IyMWZiLWNkZWEtNDIxMy1iM2QxLWZmOGQ5ZTI1YjE0YyIsInRva2VuX3VzZSI6ImlkIiwiYXV0aF90aW1lIjoxNTg5MzI1NTgwLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtd2VzdC0yLmFtYXpvbmF3cy5jb21cL3VzLXdlc3QtMl9KOGM3QkhLMUYiLCJjb2duaXRvOnVzZXJuYW1lIjoiODVjMTYyMmQtNDVlMC00ZGZkLWFlZjEtODE1ZGEzM2I0YTM5IiwiZXhwIjoxNTg5MzI5MTgwLCJpYXQiOjE1ODkzMjU1ODAsImN1c3RvbTplbnZpcm9ubWVudCI6ImRldiIsImVtYWlsIjoidmVyaWZpY2FjaW9uc2lpQHlvcG1haWwuY29tIn0.GrFVKKW2VvG2AXPFtmnJKFKewbb9F3ouq4dC76NwJUY54LoRsTktxh-EBSbcyXBV_RsRbs7bwZ3hEpF8gHVFRekMGuhLI5LuxVTeaIkEkx_nk_lmE-MQCCQI7yVU-5in10uzfUa-Ud4IKiYtDd84lRxkoyNGjZx6lQN3fopgV_DXv4_Ib92NUsWbaxyvIpZvolli3p0_hp1SGXT73dY7UFvh7KWniDqTWogrpAc7I251zeKAfdaifImSKkVUCi3j_9kQy14_mVTRsq0WPF8nfV4ePaL0CADIIUFNMMwXt_n-hMkUXwD44D0TGHiu64P4rTU5bQbL-OeUuyoxu292lA",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{Token_AlexUser}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"password\": \"Q2xhdmVVcmJhbg==*\",\n    \"rut\": \"76804564-K\",\n    \"tipoUsuario\": \"comercio\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://v2.api-dev.pgf.cl/users/verifycompany",
							"protocol": "https",
							"host": [
								"v2",
								"api-dev",
								"pgf",
								"cl"
							],
							"path": [
								"users",
								"verifycompany"
							]
						}
					},
					"response": []
				},
				{
					"name": "CP_002_OBTENER DATOS DE USUARIO EMPRESA",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f9ab2aed-b0b4-4292-a710-486bec045184",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"let estado = pm.response.code;",
									"console.log(estado);",
									"pm.test(\"CP_002_OBTENER DATOS DE USUARIO EMPRESA | Se requiere Status: 200 | Valor obtenido: \"+estado, function () {",
									"    pm.expect(estado).to.eql(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJraWQiOiJ3bnF6dFN3RzNsQ3FNYVQ5T09QMlVxaG5VeU5wVmhnc203SzBKanFKcnh3PSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI4NWMxNjIyZC00NWUwLTRkZmQtYWVmMS04MTVkYTMzYjRhMzkiLCJhdWQiOiI2bWl1MTkzdWw4Zzk1MHNzdDY0MjQ5djRpbSIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJldmVudF9pZCI6IjhhM2IyMWZiLWNkZWEtNDIxMy1iM2QxLWZmOGQ5ZTI1YjE0YyIsInRva2VuX3VzZSI6ImlkIiwiYXV0aF90aW1lIjoxNTg5MzI1NTgwLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtd2VzdC0yLmFtYXpvbmF3cy5jb21cL3VzLXdlc3QtMl9KOGM3QkhLMUYiLCJjb2duaXRvOnVzZXJuYW1lIjoiODVjMTYyMmQtNDVlMC00ZGZkLWFlZjEtODE1ZGEzM2I0YTM5IiwiZXhwIjoxNTg5MzI5MTgwLCJpYXQiOjE1ODkzMjU1ODAsImN1c3RvbTplbnZpcm9ubWVudCI6ImRldiIsImVtYWlsIjoidmVyaWZpY2FjaW9uc2lpQHlvcG1haWwuY29tIn0.GrFVKKW2VvG2AXPFtmnJKFKewbb9F3ouq4dC76NwJUY54LoRsTktxh-EBSbcyXBV_RsRbs7bwZ3hEpF8gHVFRekMGuhLI5LuxVTeaIkEkx_nk_lmE-MQCCQI7yVU-5in10uzfUa-Ud4IKiYtDd84lRxkoyNGjZx6lQN3fopgV_DXv4_Ib92NUsWbaxyvIpZvolli3p0_hp1SGXT73dY7UFvh7KWniDqTWogrpAc7I251zeKAfdaifImSKkVUCi3j_9kQy14_mVTRsq0WPF8nfV4ePaL0CADIIUFNMMwXt_n-hMkUXwD44D0TGHiu64P4rTU5bQbL-OeUuyoxu292lA",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Token_AlexUser}}",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"idUsuario\": \"14653\",\n    \"tipoUsuario\": \"comercio\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api-front-dev.pgf.cl/users/getValidaciones",
							"protocol": "https",
							"host": [
								"api-front-dev",
								"pgf",
								"cl"
							],
							"path": [
								"users",
								"getValidaciones"
							]
						}
					},
					"response": []
				},
				{
					"name": "CP_003_ENVIO DATOS CORRECTOS DE PERSONA",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f08a0771-447b-40ba-819d-aa06019eae65",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"let estado = pm.response.code;",
									"console.log(estado);",
									"pm.test(\"CP_003_ENVIO DATOS CORRECTOS DE PERSONA | Se requiere: Status 200 | Valor obtenido: \"+estado, function () {",
									"    pm.expect(estado).to.eql(200);",
									"});",
									"",
									"let error = jsonData.errorMessage;",
									"console.log(error);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJraWQiOiJ3bnF6dFN3RzNsQ3FNYVQ5T09QMlVxaG5VeU5wVmhnc203SzBKanFKcnh3PSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiIxZWU3NGYyOC0yNDc1LTRmOWItYTU2My1kZTk1MDllNzI1MjMiLCJhdWQiOiI2bWl1MTkzdWw4Zzk1MHNzdDY0MjQ5djRpbSIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJldmVudF9pZCI6IjRhNGJjN2M5LTJiZTUtNDBmZS05NmU3LTk1NjI0OWJhNzk2NCIsInRva2VuX3VzZSI6ImlkIiwiYXV0aF90aW1lIjoxNTg5MzI1NTgzLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtd2VzdC0yLmFtYXpvbmF3cy5jb21cL3VzLXdlc3QtMl9KOGM3QkhLMUYiLCJjb2duaXRvOnVzZXJuYW1lIjoiMWVlNzRmMjgtMjQ3NS00ZjliLWE1NjMtZGU5NTA5ZTcyNTIzIiwiZXhwIjoxNTg5MzI5MTgzLCJpYXQiOjE1ODkzMjU1ODMsImN1c3RvbTplbnZpcm9ubWVudCI6ImRldiIsImVtYWlsIjoidmVyaWZpY2FjaW9uc2lpXzJAeW9wbWFpbC5jb20ifQ.a4-nsRgOo1qvie3Auu4qgeeBcH20HONsDuuHweyrOt4y6GKcTy1F5hF-jLyJ2JaWtilRyUedVXfYDgXwuRXlIDNR19TKpVTeevnJPLHS6uewseWRFguwR6rwvDVDU7FZejW4AMktzO0JBvnwxnejRdWhX97BweJ0Qake6UgC5HwwNiPK5jlaIOy2YlENRQaZR_Z7U3BJtIuksQhGquR7C30Q9RIYK9XXRQIDPQ-mq6a8B0tB1toSk2E5pU0eBwX3kUbWVWT939MzCrZ2qB57SE5DtK2cWY7XKJb7JFLqAFYLXqyhlMcBrxX-58s9ukJc5zgsPApeN-PTo9PLqPQSxw",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Token_AlexUser}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"password\": \"Y2hpdmEyMw==\",\n    \"rut\": \"24871670-3\",\n    \"tipoUsuario\": \"comercio\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://v2.api-dev.pgf.cl/users/verifycompany",
							"protocol": "https",
							"host": [
								"v2",
								"api-dev",
								"pgf",
								"cl"
							],
							"path": [
								"users",
								"verifycompany"
							]
						}
					},
					"response": []
				},
				{
					"name": "CP_004_OBTENER DATOS DE USUARIO NATURAL",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "48049ed9-944a-44ec-8c35-a222583f787a",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"let estado = pm.response.code;",
									"console.log(estado);",
									"pm.test(\"CP_004_OBTENER DATOS DE USUARIO NATURAL | Se requiere Status: 200 | Valor obtenido: \"+estado, function () {",
									"    pm.expect(estado).to.eql(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJraWQiOiJ3bnF6dFN3RzNsQ3FNYVQ5T09QMlVxaG5VeU5wVmhnc203SzBKanFKcnh3PSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiIxZWU3NGYyOC0yNDc1LTRmOWItYTU2My1kZTk1MDllNzI1MjMiLCJhdWQiOiI2bWl1MTkzdWw4Zzk1MHNzdDY0MjQ5djRpbSIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJldmVudF9pZCI6IjRhNGJjN2M5LTJiZTUtNDBmZS05NmU3LTk1NjI0OWJhNzk2NCIsInRva2VuX3VzZSI6ImlkIiwiYXV0aF90aW1lIjoxNTg5MzI1NTgzLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtd2VzdC0yLmFtYXpvbmF3cy5jb21cL3VzLXdlc3QtMl9KOGM3QkhLMUYiLCJjb2duaXRvOnVzZXJuYW1lIjoiMWVlNzRmMjgtMjQ3NS00ZjliLWE1NjMtZGU5NTA5ZTcyNTIzIiwiZXhwIjoxNTg5MzI5MTgzLCJpYXQiOjE1ODkzMjU1ODMsImN1c3RvbTplbnZpcm9ubWVudCI6ImRldiIsImVtYWlsIjoidmVyaWZpY2FjaW9uc2lpXzJAeW9wbWFpbC5jb20ifQ.a4-nsRgOo1qvie3Auu4qgeeBcH20HONsDuuHweyrOt4y6GKcTy1F5hF-jLyJ2JaWtilRyUedVXfYDgXwuRXlIDNR19TKpVTeevnJPLHS6uewseWRFguwR6rwvDVDU7FZejW4AMktzO0JBvnwxnejRdWhX97BweJ0Qake6UgC5HwwNiPK5jlaIOy2YlENRQaZR_Z7U3BJtIuksQhGquR7C30Q9RIYK9XXRQIDPQ-mq6a8B0tB1toSk2E5pU0eBwX3kUbWVWT939MzCrZ2qB57SE5DtK2cWY7XKJb7JFLqAFYLXqyhlMcBrxX-58s9ukJc5zgsPApeN-PTo9PLqPQSxw",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{Token_AlexUser}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"idUsuario\": \"14659\",\n    \"tipoUsuario\": \"comercio\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api-front-dev.pgf.cl/users/getValidaciones",
							"protocol": "https",
							"host": [
								"api-front-dev",
								"pgf",
								"cl"
							],
							"path": [
								"users",
								"getValidaciones"
							]
						}
					},
					"response": []
				},
				{
					"name": "CP_005_ENVIO DATOS ERRONEOS",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "19712b22-4ad7-40fd-91d3-1a047f0d2902",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"let estado = pm.response.code;",
									"console.log(estado);",
									"pm.test(\"CP_005_ENVIO DATOS ERRONEOS | Se requiere: Status 200 | Valor obtenido: \"+estado, function () {",
									"    pm.expect(estado).to.eql(200);",
									"});",
									"",
									"let error = jsonData.errorMessage;",
									"console.log(error);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJraWQiOiJ3bnF6dFN3RzNsQ3FNYVQ5T09QMlVxaG5VeU5wVmhnc203SzBKanFKcnh3PSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI1YWM0MzU1OC0zYThmLTQxMzItOTk4Zi0yOWVlNDE4NGE0MmIiLCJhdWQiOiI2bWl1MTkzdWw4Zzk1MHNzdDY0MjQ5djRpbSIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJldmVudF9pZCI6IjE4MGI5YjYzLTJhZmEtNDg0Mi05ODFkLWViMWM3Mjg3Y2UyYSIsInRva2VuX3VzZSI6ImlkIiwiYXV0aF90aW1lIjoxNTg5MzI1NTg1LCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtd2VzdC0yLmFtYXpvbmF3cy5jb21cL3VzLXdlc3QtMl9KOGM3QkhLMUYiLCJjb2duaXRvOnVzZXJuYW1lIjoiNWFjNDM1NTgtM2E4Zi00MTMyLTk5OGYtMjllZTQxODRhNDJiIiwiZXhwIjoxNTg5MzI5MTg1LCJpYXQiOjE1ODkzMjU1ODUsImN1c3RvbTplbnZpcm9ubWVudCI6ImRldiIsImVtYWlsIjoidmVyaWZpY2FjaW9uc2lpXzNAeW9wbWFpbC5jb20ifQ.WCy1ZoR2Bqx538tBF6eCNS4xu_I4Il3QDXYjybgOkvLI9_p0qTRDT3SUPvcGtV-UpPKVPmoHEIdK8rkzSJAXHiOOwd3NyFwgf6n4g6Dd4uqWIQr6sFxJ_AF_zWQvXARdTqeIewtaUgAcLgFqtHnct9OttLaHwKNAn46w6KDYBX65ZCUKbHIvgG0bKaol53SjnYUT-NlEpBq95JrvBHZymmZVw1ceM2nWOZReyZgrfa0wqBTKJltCTVkSd2yMBnDZZlP0WjZgmigBJk1EWVkpFUBA5fN4NU1eq8bPHTTVSmhY28JnnB3IPEj6qz7WTxYt7lwKSp5k6MbhSxXCj1kbBQ",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer ",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"password\": \"plrueba23232\",\n    \"rut\": \"24871670-3\",\n    \"tipoUsuario\": \"comercio\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://v2.api-dev.pgf.cl/users/verifycompany",
							"protocol": "https",
							"host": [
								"v2",
								"api-dev",
								"pgf",
								"cl"
							],
							"path": [
								"users",
								"verifycompany"
							]
						}
					},
					"response": []
				},
				{
					"name": "CP_006_CONSULTA DE VALIDACIÓN EN SII CON DATOS ERRONEOS",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1d39f992-b992-45d2-b220-f0c1f77f1048",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"let estado = pm.response.code;",
									"console.log(estado);",
									"pm.test(\"CP_006_CONSULTA DE VALIDACIÓN EN SII CON DATOS ERRONEOS | Se requiere Status: 200 | Valor obtenido: \"+estado, function () {",
									"    pm.expect(estado).to.eql(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJraWQiOiJ3bnF6dFN3RzNsQ3FNYVQ5T09QMlVxaG5VeU5wVmhnc203SzBKanFKcnh3PSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI1YWM0MzU1OC0zYThmLTQxMzItOTk4Zi0yOWVlNDE4NGE0MmIiLCJhdWQiOiI2bWl1MTkzdWw4Zzk1MHNzdDY0MjQ5djRpbSIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJldmVudF9pZCI6IjE4MGI5YjYzLTJhZmEtNDg0Mi05ODFkLWViMWM3Mjg3Y2UyYSIsInRva2VuX3VzZSI6ImlkIiwiYXV0aF90aW1lIjoxNTg5MzI1NTg1LCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtd2VzdC0yLmFtYXpvbmF3cy5jb21cL3VzLXdlc3QtMl9KOGM3QkhLMUYiLCJjb2duaXRvOnVzZXJuYW1lIjoiNWFjNDM1NTgtM2E4Zi00MTMyLTk5OGYtMjllZTQxODRhNDJiIiwiZXhwIjoxNTg5MzI5MTg1LCJpYXQiOjE1ODkzMjU1ODUsImN1c3RvbTplbnZpcm9ubWVudCI6ImRldiIsImVtYWlsIjoidmVyaWZpY2FjaW9uc2lpXzNAeW9wbWFpbC5jb20ifQ.WCy1ZoR2Bqx538tBF6eCNS4xu_I4Il3QDXYjybgOkvLI9_p0qTRDT3SUPvcGtV-UpPKVPmoHEIdK8rkzSJAXHiOOwd3NyFwgf6n4g6Dd4uqWIQr6sFxJ_AF_zWQvXARdTqeIewtaUgAcLgFqtHnct9OttLaHwKNAn46w6KDYBX65ZCUKbHIvgG0bKaol53SjnYUT-NlEpBq95JrvBHZymmZVw1ceM2nWOZReyZgrfa0wqBTKJltCTVkSd2yMBnDZZlP0WjZgmigBJk1EWVkpFUBA5fN4NU1eq8bPHTTVSmhY28JnnB3IPEj6qz7WTxYt7lwKSp5k6MbhSxXCj1kbBQ",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{Token_AlexUser}}",
								"disabled": true
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"idUsuario\": \"14678\",\n    \"tipoUsuario\": \"comercio\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api-front-dev.pgf.cl/users/getValidaciones",
							"protocol": "https",
							"host": [
								"api-front-dev",
								"pgf",
								"cl"
							],
							"path": [
								"users",
								"getValidaciones"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Indicadores",
			"item": [
				{
					"name": "Generar Token Alex",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "418f4bb2-0179-49d2-a326-d271eae20726",
								"exec": [
									"//Pasar token a variable Global",
									"let jsondata = pm.response.json();",
									"pm.globals.set(\"TokenAlexUser\", jsondata.data.access_token_jwt);",
									"let estado = pm.response.code;",
									"console.log(estado);",
									"",
									"//Validar que codigo sea el requerido",
									"pm.test(\"CP_001_Generar Token | Se requiere: Status 200 | valor obtenido: \" + estado, function () {",
									"    pm.expect(estado).to.eql(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"alexander.cabrera@kibernum.com\",\n    \"password\": \"Ignacio2020*\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/users/login?",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"users",
								"login"
							],
							"query": [
								{
									"key": "",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Consulta Indicadores",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{TokenAlexUser}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/indicators/remittances?idUser=6385&idTrx=51275279&availableBalance=true&futureRemittances=true",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"indicators",
								"remittances"
							],
							"query": [
								{
									"key": "idUser",
									"value": "6385"
								},
								{
									"key": "idTrx",
									"value": "51275279"
								},
								{
									"key": "availableBalance",
									"value": "true"
								},
								{
									"key": "futureRemittances",
									"value": "true"
								},
								{
									"key": "remittanceByDate",
									"value": "2020/08/10",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Consulta Indicadores Copy",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{TokenAlexUser}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/indicators/remittances?idUser=6385&idTrx=51275279&availableBalance=true&futureRemittances=false",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"indicators",
								"remittances"
							],
							"query": [
								{
									"key": "idUser",
									"value": "6385"
								},
								{
									"key": "idTrx",
									"value": "51275279"
								},
								{
									"key": "availableBalance",
									"value": "true"
								},
								{
									"key": "futureRemittances",
									"value": "false"
								},
								{
									"key": "remittanceByDate",
									"value": "2020/08/10",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Consulta Indicadores Copy Copy",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{TokenAlexUser}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/indicators/remittances?idUser=6385&availableBalance=true&futureRemittances=false",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"indicators",
								"remittances"
							],
							"query": [
								{
									"key": "idUser",
									"value": "6385"
								},
								{
									"key": "idTrx",
									"value": "51275279",
									"disabled": true
								},
								{
									"key": "availableBalance",
									"value": "true"
								},
								{
									"key": "futureRemittances",
									"value": "false"
								},
								{
									"key": "remittanceByDate",
									"value": "2020/08/10",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Webhooks",
			"item": [
				{
					"name": "LOGIN",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "df5f97ff-1ff0-460e-a4ca-4a50cadec06d",
								"exec": [
									"//Pasar token a variable global",
									"let jsonData = pm.response.json(); ",
									"console.log (jsonData);",
									"pm.globals.set (\"Token_AlexUser\", jsonData.data.access_token_jwt);",
									"",
									"//Primer caso de pruebas validar codigo de respuesta correspondiente a Status de Request",
									"let estado = pm.response.code;",
									"console.log(estado);",
									"pm.test(\"LOGIN | Request Status 200 | Valor obtenido: \"+estado, function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"alexander.cabrera@kibernum.com\",\n    \"password\": \"Ignacio2020*\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/users/login",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"users",
								"login"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Consultar Webhook 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0f3763a3-2b29-47f3-a0cf-8484d38d5046",
								"exec": [
									"let jsonData = pm.response.json(); \r",
									"console.log (jsonData);\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"pm.test(\"Consultar antes de crear webhook | Request Status 200 | Valor obtenido: \"+estado, function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{Token_AlexUser}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/webhooks/6385",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"webhooks",
								"6385"
							]
						}
					},
					"response": []
				},
				{
					"name": "Crear Webhook",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d1f5b9fa-15bb-4d0d-a91c-1a35d70a592d",
								"exec": [
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"pm.test(\"Crear webhook | Request Status 200 | Valor obtenido: \"+estado, function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Token_AlexUser}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"url\": \"https://mipagina.cl/myWebhook\",\r\n    \"method\": \"POST\",\r\n    \"webhook\": \"remittances\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/webhooks",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"webhooks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Consultar Webhook 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "720dada9-18e5-489e-8c9e-c1039f544d94",
								"exec": [
									"let jsonData = pm.response.json(); \r",
									"console.log (jsonData);\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"pm.test(\"Consultar despúes de crear webhook | Request Status 200 | Valor obtenido: \"+estado, function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Valida URL Webhook creada\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"https://mipagina.cl/myWebhook\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{Token_AlexUser}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/webhooks/6385",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"webhooks",
								"6385"
							]
						}
					},
					"response": []
				},
				{
					"name": "Actualizar Webhook",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1054ffac-bbb1-43ee-86eb-29f829639fd1",
								"exec": [
									"let jsonData = pm.response.json(); \r",
									"console.log (jsonData);\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"pm.test(\"Se actualiza Webhook | Request Status 200 | Valor obtenido: \"+estado, function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{Token_AlexUser}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"url\": \"https://alex.mipagina.cl/myWebhook\",\r\n  \"method\": \"POST\",\r\n  \"webhook\": \"remittances\",\r\n  \"idUser\": \"6385\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/webhooks/6385/remittances",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"webhooks",
								"6385",
								"remittances"
							]
						}
					},
					"response": []
				},
				{
					"name": "Borrar Webhook",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ec955c9e-4ee4-444d-923f-0041a77189b9",
								"exec": [
									"let jsonData = pm.response.json(); \r",
									"console.log (jsonData);\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"pm.test(\"Se borra Webhook | Request Status 200 | Valor obtenido: \"+estado, function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{Token_AlexUser}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"url\": \"https://alex.mipagina.cl/myWebhook\",\r\n  \"method\": \"POST\",\r\n  \"webhook\": \"remittances\",\r\n  \"idUser\": \"6385\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/webhooks/6385/remittances",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"webhooks",
								"6385",
								"remittances"
							]
						}
					},
					"response": []
				},
				{
					"name": "No se envía token POST",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8d1dc162-5bd2-4163-9e97-e0a351ec75f2",
								"exec": [
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"pm.test(\"No se envía token POST | Request Status 401 | Valor obtenido: \"+estado, function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"url\": \"https://mipagina.cl/myWebhook\",\r\n    \"method\": \"POST\",\r\n    \"webhook\": \"remittances\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/webhooks",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"webhooks"
							]
						}
					},
					"response": []
				},
				{
					"name": "No se envía Token GET",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6e59d6ed-a53a-4934-9667-0b6a39536ee6",
								"exec": [
									"let jsonData = pm.response.json(); \r",
									"console.log (jsonData);\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"pm.test(\"No se envía Token GET | Request Status 401 | Valor obtenido: \"+estado, function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{Token_AlexUser}}",
								"disabled": true
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/webhooks/6385",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"webhooks",
								"6385"
							]
						}
					},
					"response": []
				},
				{
					"name": "No se envía Token  PUT",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "096a4b84-a09a-44ff-aa86-152fd9abe5c3",
								"exec": [
									"let jsonData = pm.response.json(); \r",
									"console.log (jsonData);\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"pm.test(\"No se envía Token PUT | Request Status 401 | Valor obtenido: \"+estado, function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"url\": \"https://alex.mipagina.cl/myWebhook\",\r\n  \"method\": \"POST\",\r\n  \"webhook\": \"remittances\",\r\n  \"idUser\": \"6385\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/webhooks/6385/remittances",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"webhooks",
								"6385",
								"remittances"
							]
						}
					},
					"response": []
				},
				{
					"name": "No se envía Token  DELETE",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "54a8a673-f0af-430a-9916-1260abb95afe",
								"exec": [
									"let jsonData = pm.response.json(); \r",
									"console.log (jsonData);\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"pm.test(\"No se envía Token  DELETE | Request Status 401 | Valor obtenido: \"+estado, function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"url\": \"https://alex.mipagina.cl/myWebhook\",\r\n  \"method\": \"POST\",\r\n  \"webhook\": \"remittances\",\r\n  \"idUser\": \"6385\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/webhooks/6385/remittances",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"webhooks",
								"6385",
								"remittances"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "One-click-users",
			"item": [
				{
					"name": "LOGIN",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "49545ff0-ba35-4b68-8251-1d7c226505fc",
								"exec": [
									"//Pasar token a variable global",
									"let jsonData = pm.response.json(); ",
									"console.log (jsonData);",
									"pm.globals.set (\"Token_AlexUser\", jsonData.data.access_token_jwt);",
									"",
									"//Primer caso de pruebas validar codigo de respuesta correspondiente a Status de Request",
									"let estado = pm.response.code;",
									"console.log(estado);",
									"pm.test(\"LOGIN | Request Status 200 | Valor obtenido: \"+estado, function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"alexander.cabrera@kibernum.com\",\n    \"password\": \"Ignacio2020*\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/users/login",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"users",
								"login"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Inscripción OK 200 one-click-users",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "976804a5-b408-4998-9907-c949cff81d31",
								"exec": [
									"//Pasar token a variable global\r",
									"let jsonData = pm.response.json(); \r",
									"console.log (jsonData);\r",
									"pm.globals.set (\"TokenOneClick\", jsonData.data.token);\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"pm.test(\"Inscripción OK one-click-users | Request Status 200 | Valor obtenido: \"+estado, function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Token_AlexUser}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"alexcabrera\",\r\n    \"email\": \"pagofacil.qa@kibernum.com\",\r\n    \"urlReturn\": \"https://postman-echo.com/post\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/one-click-users/initInscription",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"one-click-users",
								"initInscription"
							]
						},
						"description": "Se usa el user name del usaurio usado para el LOGIN"
					},
					"response": []
				},
				{
					"name": "Inscripción one-click-users error 403",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "07b6cafb-36f6-435c-9a08-1a67ad375c62",
								"exec": [
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"pm.test(\"Inscripción one-click-users error 403 | Request Status 403 | Valor obtenido: \"+estado, function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{Token_AlexUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"kiber.qa\",\r\n    \"email\": \"pagofacil.qa@kibernum.com\",\r\n    \"urlReturn\": \"https://postman-echo.com/post\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/one-click-users/initInscription",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"one-click-users",
								"initInscription"
							]
						},
						"description": "Se usa el user name del usaurio usado para el LOGIN"
					},
					"response": []
				},
				{
					"name": "Inscripción one-click-users error 422",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ccadac1b-67b2-4fb1-b32b-9e60649558ea",
								"exec": [
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"pm.test(\"Inscripción one-click-users error 422 | Request Status 422 | Valor obtenido: \"+estado, function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{Token_AlexUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"alexcabrera\",\r\n    \"email\": \"pagofacil.qa@kibernum.com\",\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/one-click-users/initInscription",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"one-click-users",
								"initInscription"
							]
						},
						"description": "Se usa el user name del usaurio usado para el LOGIN"
					},
					"response": []
				},
				{
					"name": "Finalizar Inscripción OK 200 one-click-users Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9ecf7d84-284f-494f-a361-6dfc57570043",
								"exec": [
									"\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"pm.test(\"Inscripción OK one-click-users | Request Status 200 | Valor obtenido: \"+estado, function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{Token_AlexUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"alexcabrera\",\r\n    \"token\": \"e4a613ab4c4070fbe3fcdc2a1d786cf9126e758990bf88fad540a6d51735a7e6\",\r\n    \"idUsuario\": 6385\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/one-click-users/finishInscription",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"one-click-users",
								"finishInscription"
							]
						},
						"description": "Se usa el user name del usaurio usado para el LOGIN"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Remittances - Conciliación de abonos",
			"item": [
				{
					"name": "LOGIN",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2459acd2-e65c-47be-8244-a783123e1aed",
								"exec": [
									"//Pasar token a variable global",
									"let jsonData = pm.response.json(); ",
									"console.log (jsonData);",
									"pm.globals.set (\"Token_AlexUser\", jsonData.data.access_token_jwt);",
									"",
									"//Primer caso de pruebas validar codigo de respuesta correspondiente a Status de Request",
									"let estado = pm.response.code;",
									"console.log(estado);",
									"pm.test(\"LOGIN | Request Status 200 | Valor obtenido: \"+estado, function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"alexander.cabrera@kibernum.com\",\n    \"password\": \"Ignacio2020*\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/users/login",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"users",
								"login"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener conciliación de abonos",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Token_AlexUser}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT_Registro}}/remittances/conciliation/?email=yomismo@cristiantala.cl&date=2020-03-30",
							"host": [
								"{{URL_CRAFT_Registro}}"
							],
							"path": [
								"remittances",
								"conciliation",
								""
							],
							"query": [
								{
									"key": "email",
									"value": "yomismo@cristiantala.cl"
								},
								{
									"key": "date",
									"value": "2020-03-30"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener conciliación de abonos Copy",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Token_AlexUser}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://v2.api.pagofacil.online/remittances/conciliation/?email=yomismo@cristiantala.cl&date=2020-03-30",
							"protocol": "https",
							"host": [
								"v2",
								"api",
								"pagofacil",
								"online"
							],
							"path": [
								"remittances",
								"conciliation",
								""
							],
							"query": [
								{
									"key": "email",
									"value": "yomismo@cristiantala.cl"
								},
								{
									"key": "date",
									"value": "2020-03-30"
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Cobro de TXN en exceso de planes",
			"item": [
				{
					"name": "Cobro de TXN en exceso de planes",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://4o72ioprxc.execute-api.us-west-2.amazonaws.com/craft/invoke/cron",
							"protocol": "https",
							"host": [
								"4o72ioprxc",
								"execute-api",
								"us-west-2",
								"amazonaws",
								"com"
							],
							"path": [
								"craft",
								"invoke",
								"cron"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Proceso Facturación ordenes de comisión Actual (SOLO PARA HACER QA)",
			"item": [
				{
					"name": "1. createBillReport",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"init\": 1590969600, \r\n\"end\": 1593561600\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://5kordy49a4.execute-api.us-west-2.amazonaws.com/craft/createBillReport",
							"protocol": "https",
							"host": [
								"5kordy49a4",
								"execute-api",
								"us-west-2",
								"amazonaws",
								"com"
							],
							"path": [
								"craft",
								"createBillReport"
							]
						},
						"description": "Generará un csv con todos los usuarios, incluyendo montos que se van a facturar"
					},
					"response": []
				},
				{
					"name": "2. sendTocreate",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"init\": 1590969600, \r\n\"end\": 1593561600\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://5kordy49a4.execute-api.us-west-2.amazonaws.com/craft/sendTocreate",
							"protocol": "https",
							"host": [
								"5kordy49a4",
								"execute-api",
								"us-west-2",
								"amazonaws",
								"com"
							],
							"path": [
								"craft",
								"sendTocreate"
							]
						},
						"description": "nviara a crear ordenes y facturar (se debe esperar unos minutos hasta que este ok)"
					},
					"response": []
				},
				{
					"name": "3. getAllOrders",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"createdDayTimestamp\": 1597104000\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://5kordy49a4.execute-api.us-west-2.amazonaws.com/craft/getAllOrders",
							"protocol": "https",
							"host": [
								"5kordy49a4",
								"execute-api",
								"us-west-2",
								"amazonaws",
								"com"
							],
							"path": [
								"craft",
								"getAllOrders"
							]
						},
						"description": "genera un csv con todas las ordenes y campos creados"
					},
					"response": []
				},
				{
					"name": "4. getAllDT",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"createdDayTimestamp\": 1597104000, \r\n\"endDayTimestamp\": 1597190399\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://5kordy49a4.execute-api.us-west-2.amazonaws.com/craft/getAllDTE",
							"protocol": "https",
							"host": [
								"5kordy49a4",
								"execute-api",
								"us-west-2",
								"amazonaws",
								"com"
							],
							"path": [
								"craft",
								"getAllDTE"
							]
						},
						"description": "genera un csv con todos los datos de la factura generados."
					},
					"response": []
				},
				{
					"name": "5. getPDF",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"day\": 1597104000\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://wtzgp9pny6.execute-api.us-west-2.amazonaws.com/craft/sendSqsDownload",
							"protocol": "https",
							"host": [
								"wtzgp9pny6",
								"execute-api",
								"us-west-2",
								"amazonaws",
								"com"
							],
							"path": [
								"craft",
								"sendSqsDownload"
							]
						},
						"description": "genera un csv con todos los datos de la factura generados."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "DICOM",
			"item": [
				{
					"name": "GenerarTokenJuridico",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "eb174964-f81f-43b6-9c06-1c36c3347f6c",
								"exec": [
									"//Pasar token a variable Global",
									"let jsondata = pm.response.json();",
									"pm.globals.set(\"TokenAlexUser\", jsondata.data.access_token_jwt);",
									"let estado = pm.response.code;",
									"console.log(estado);",
									"",
									"//Validar que codigo sea el requerido",
									"pm.test(\"CP_001_Generar Token | Se requiere: Status 200 | valor obtenido: \" + estado, function () {",
									"    pm.expect(estado).to.eql(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"alexander.cabrera@kibernum.com\",\n    \"password\": \"Ignacio2020*\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_CRAFT}}/users/login?",
							"host": [
								"{{URL_CRAFT}}"
							],
							"path": [
								"users",
								"login"
							],
							"query": [
								{
									"key": "",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Consulta Persona RUT  válido 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "725750fe-2e08-4043-b246-9de3080a1dd1",
								"exec": [
									"let jsondata = pm.response.json();\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"\r",
									"pm.test(\"Consulta Persona RUT válido | Se requiere: Status 200 | valor obtenido: \" + estado, function () {\r",
									"    pm.expect(estado).to.eql(200);\r",
									"});\r",
									"\r",
									"let MensajeError = jsondata;\r",
									"console.log(MensajeError);\r",
									"\r",
									"pm.test(\"Valido retorno de campo message\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"message\");\r",
									"});\r",
									"\r",
									"pm.test(\"Valido retorno de campo success\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"success\");\r",
									"});\r",
									"\r",
									"pm.test(\"Valido retorno de campo score\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"score\");\r",
									"});\r",
									"\r",
									"pm.test(\"Valido retorno de campo razonSocial\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"razonSocial\");\r",
									"});\r",
									"\r",
									"pm.test(\"Valido retorno de campo direccion\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"direccion\");\r",
									"});\r",
									"\r",
									"pm.test(\"Valido retorno de campo comuna\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"comuna\");\r",
									"});\r",
									"\r",
									"pm.test(\"Valido retorno de campo region\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"region\");\r",
									"});\r",
									"\r",
									"pm.test(\"Valido retorno de campo email\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"email\");\r",
									"});\r",
									"\r",
									"pm.test(\"Valido retorno de campo estadoCivil\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"estadoCivil\");\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{TokenAlexUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"rut\": \"24871670-3\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://qt5m7is4bk.execute-api.us-west-2.amazonaws.com/qa/dicomPerson",
							"protocol": "https",
							"host": [
								"qt5m7is4bk",
								"execute-api",
								"us-west-2",
								"amazonaws",
								"com"
							],
							"path": [
								"qa",
								"dicomPerson"
							]
						}
					},
					"response": []
				},
				{
					"name": "Consulta Persona RUT sin puntaje en Dicom 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dd60f6d9-d969-4e38-852a-a13be2afa981",
								"exec": [
									"let jsondata = pm.response.json();\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"\r",
									"pm.test(\"Consulta Persona RUT sin puntaje en Dicom 404 | Se requiere: Status 404 | valor obtenido: \" + estado, function () {\r",
									"    pm.expect(estado).to.eql(404);\r",
									"});\r",
									"\r",
									"let MensajeError = jsondata;\r",
									"console.log(MensajeError);\r",
									"\r",
									"pm.test(\"Valido respuesta de campo message\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"No se pudo obtener el Puntaje del rut\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{TokenAlexUser}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"rut\": \"27187851-6\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://x.pagofacil.online/dicom/dicomPerson",
							"protocol": "https",
							"host": [
								"x",
								"pagofacil",
								"online"
							],
							"path": [
								"dicom",
								"dicomPerson"
							]
						}
					},
					"response": []
				},
				{
					"name": "Consulta Persona RUT inválido 422",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cbe12d4f-0056-4510-92d7-8dfc5b81c48b",
								"exec": [
									"let jsondata = pm.response.json();\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"\r",
									"pm.test(\"Consulta Persona RUT inválido 422 | Se requiere: Status 422 | valor obtenido: \" + estado, function () {\r",
									"    pm.expect(estado).to.eql(422);\r",
									"});\r",
									"\r",
									"let MensajeError = jsondata;\r",
									"console.log(MensajeError);\r",
									"\r",
									"pm.test(\"Valido respuesta de campo message (Rut invalido)\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Rut invalido\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{TokenAlexUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"rut\": \"2\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://x.pagofacil.online/dicom/dicomPerson",
							"protocol": "https",
							"host": [
								"x",
								"pagofacil",
								"online"
							],
							"path": [
								"dicom",
								"dicomPerson"
							]
						}
					},
					"response": []
				},
				{
					"name": "Consulta Persona RUT inválido 500",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4c640392-a5d6-4e59-80bb-94d7f6bf907e",
								"exec": [
									"let jsondata = pm.response.json();\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"\r",
									"pm.test(\"Consulta Persona RUT inválido 500 | Se requiere: Status 500 | valor obtenido: \" + estado, function () {\r",
									"    pm.expect(estado).to.eql(500);\r",
									"});\r",
									"\r",
									"let MensajeError = jsondata;\r",
									"console.log(MensajeError);\r",
									"\r",
									"pm.test(\"Valido respuesta de campo message (Internal Server Error)\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Internal Server Error\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{TokenAlexUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"rut\": \"96616770-K\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://x.pagofacil.online/dicom/dicomPerson",
							"protocol": "https",
							"host": [
								"x",
								"pagofacil",
								"online"
							],
							"path": [
								"dicom",
								"dicomPerson"
							]
						}
					},
					"response": []
				},
				{
					"name": "Consulta Empresa RUT  válido 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f71751ec-6932-4d9a-813a-4c9b7e8d7d39",
								"exec": [
									"let jsondata = pm.response.json();\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"\r",
									"pm.test(\"Consulta Empresa RUT  válido 200 | Se requiere: Status 200 | valor obtenido: \" + estado, function () {\r",
									"    pm.expect(estado).to.eql(200);\r",
									"});\r",
									"\r",
									"let MensajeError = jsondata;\r",
									"console.log(MensajeError);\r",
									"\r",
									"\r",
									"pm.test(\"Valido retorno de campo success\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"success\");\r",
									"});\r",
									"\r",
									"pm.test(\"Valido retorno de campo score\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"score\");\r",
									"});\r",
									"\r",
									"pm.test(\"Valido retorno de campo actividad\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"actividad\");\r",
									"});\r",
									"\r",
									"pm.test(\"Valido retorno de campo telefono\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"telefono\");\r",
									"});\r",
									"\r",
									"pm.test(\"Valido retorno de campo socios\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"socios\");\r",
									"});\r",
									"\r",
									"pm.test(\"Valido retorno de campo direccion\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"direccion\");\r",
									"});\r",
									"\r",
									"pm.test(\"Valido retorno de campo cantidadQuiebras\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"cantidadQuiebras\");\r",
									"});\r",
									"\r",
									"pm.test(\"Valido retorno de campo cantidadPrendas\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"cantidadPrendas\");\r",
									"});\r",
									"\r",
									"pm.test(\"Valido retorno de campo razonSocial\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"razonSocial\");\r",
									"});\r",
									"\r",
									"pm.test(\"Valido retorno de campo nombreFantasia\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"nombreFantasia\");\r",
									"});\r",
									"\r",
									"pm.test(\"Valido retorno de campo cantidadConsultasRut\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"cantidadConsultasRut\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{TokenAlexUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"rut\": \"76.804.564-K\"\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://x.pagofacil.online/dicom/dicomCompany",
							"protocol": "https",
							"host": [
								"x",
								"pagofacil",
								"online"
							],
							"path": [
								"dicom",
								"dicomCompany"
							]
						}
					},
					"response": []
				},
				{
					"name": "Consulta Empresa RUT sin puntaje en Dicom 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ee416cb6-6082-442f-a7f5-311978e7f3fc",
								"exec": [
									"let jsondata = pm.response.json();\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"\r",
									"pm.test(\"Consulta Persona RUT sin puntaje en Dicom 404 | Se requiere: Status 404 | valor obtenido: \" + estado, function () {\r",
									"    pm.expect(estado).to.eql(404);\r",
									"});\r",
									"\r",
									"let MensajeError = jsondata;\r",
									"console.log(MensajeError);\r",
									"\r",
									"pm.test(\"Valido respuesta de campo message\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"No se pudo obtener el Puntaje del rut\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{TokenAlexUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"rut\" : \"76049840-8\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://x.pagofacil.online/dicom/dicomCompany",
							"protocol": "https",
							"host": [
								"x",
								"pagofacil",
								"online"
							],
							"path": [
								"dicom",
								"dicomCompany"
							]
						}
					},
					"response": []
				},
				{
					"name": "Consulta Empresa RUT sin puntaje en Dicom 404 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8bcd1ff4-b77c-4f40-98ca-5731e80732d6",
								"exec": [
									"let jsondata = pm.response.json();\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"\r",
									"pm.test(\"Consulta Persona RUT sin puntaje en Dicom 404 | Se requiere: Status 404 | valor obtenido: \" + estado, function () {\r",
									"    pm.expect(estado).to.eql(404);\r",
									"});\r",
									"\r",
									"let MensajeError = jsondata;\r",
									"console.log(MensajeError);\r",
									"\r",
									"pm.test(\"Valido respuesta de campo message\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"No se pudo obtener el Puntaje del rut\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{TokenAlexUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"rut\" : \"76049840-8\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://x.pagofacil.online/dicom/dicomCompany",
							"protocol": "https",
							"host": [
								"x",
								"pagofacil",
								"online"
							],
							"path": [
								"dicom",
								"dicomCompany"
							]
						}
					},
					"response": []
				},
				{
					"name": "Consulta Empresa datos inválidos 422",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5bfc9e8a-eb88-424a-8352-b59b88528031",
								"exec": [
									"let jsondata = pm.response.json();\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"\r",
									"pm.test(\"Consulta Persona RUT inválido 422 | Se requiere: Status 422 | valor obtenido: \" + estado, function () {\r",
									"    pm.expect(estado).to.eql(422);\r",
									"});\r",
									"\r",
									"let MensajeError = jsondata;\r",
									"console.log(MensajeError);\r",
									"\r",
									"pm.test(\"Valido respuesta de campo message (Rut invalido)\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Rut invalido\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{TokenAlexUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"rut\" : \"2\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://x.pagofacil.online/dicom/dicomCompany",
							"protocol": "https",
							"host": [
								"x",
								"pagofacil",
								"online"
							],
							"path": [
								"dicom",
								"dicomCompany"
							]
						}
					},
					"response": []
				},
				{
					"name": "Consulta Empresa RUT  inválido 500",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cda2f9e8-37a2-4ab0-83c8-cb76e6d81706",
								"exec": [
									"let jsondata = pm.response.json();\r",
									"\r",
									"let estado = pm.response.code;\r",
									"console.log(estado);\r",
									"\r",
									"pm.test(\"Consulta Persona RUT inválido 500 | Se requiere: Status 500 | valor obtenido: \" + estado, function () {\r",
									"    pm.expect(estado).to.eql(500);\r",
									"});\r",
									"\r",
									"let MensajeError = jsondata;\r",
									"console.log(MensajeError);\r",
									"\r",
									"pm.test(\"Valido respuesta de campo message (Internal Server Error)\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Internal Server Error\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{TokenAlexUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"rut\" : \"24871670-3\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://x.pagofacil.online/dicom/dicomCompany",
							"protocol": "https",
							"host": [
								"x",
								"pagofacil",
								"online"
							],
							"path": [
								"dicom",
								"dicomCompany"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Endpoint para modificar fecha de servicios",
			"item": [
				{
					"name": "Usuario sin One Click",
					"item": [
						{
							"name": "Cambio de fecha en servicio Día 25-0",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "",
										"type": "text",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ServiciosTbk\": {\r\n        \"validDate\": \"2020-11-11\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://crud.craft.pagofacil.cl/servicios_tbk/13588",
									"protocol": "https",
									"host": [
										"crud",
										"craft",
										"pagofacil",
										"cl"
									],
									"path": [
										"servicios_tbk",
										"13588"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cambio de fecha en servicio Día 26-1",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "",
										"type": "text",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ServiciosTbk\": {\r\n        \"validDate\": \"2020-11-12\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://crud.craft.pagofacil.cl/servicios_tbk/13589",
									"protocol": "https",
									"host": [
										"crud",
										"craft",
										"pagofacil",
										"cl"
									],
									"path": [
										"servicios_tbk",
										"13589"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cambio de fecha en servicio Día 27-2",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "",
										"type": "text",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ServiciosTbk\": {\r\n        \"validDate\": \"2020-11-13\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://crud.craft.pagofacil.cl/servicios_tbk/13587",
									"protocol": "https",
									"host": [
										"crud",
										"craft",
										"pagofacil",
										"cl"
									],
									"path": [
										"servicios_tbk",
										"13587"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cambio de fecha en servicio Día 28-3",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "",
										"type": "text",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ServiciosTbk\": {\r\n        \"validDate\": \"2020-11-14\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://crud.craft.pagofacil.cl/servicios_tbk/13590",
									"protocol": "https",
									"host": [
										"crud",
										"craft",
										"pagofacil",
										"cl"
									],
									"path": [
										"servicios_tbk",
										"13590"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cambio de fecha en servicio Día 29-4",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "",
										"type": "text",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ServiciosTbk\": {\r\n        \"validDate\": \"2020-11-15\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://crud.craft.pagofacil.cl/servicios_tbk/13592",
									"protocol": "https",
									"host": [
										"crud",
										"craft",
										"pagofacil",
										"cl"
									],
									"path": [
										"servicios_tbk",
										"13592"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cambio de fecha en servicio Día 30-5",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ServiciosTbk\": {\r\n        \"validDate\": \"2020-11-16\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://crud.craft.pagofacil.cl/servicios_tbk/13593",
									"protocol": "https",
									"host": [
										"crud",
										"craft",
										"pagofacil",
										"cl"
									],
									"path": [
										"servicios_tbk",
										"13593"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cambio de fecha en servicio Día 31- 6",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "",
										"type": "text",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ServiciosTbk\": {\r\n        \"validDate\": \"2020-11-17\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://crud.craft.pagofacil.cl/servicios_tbk/13671",
									"protocol": "https",
									"host": [
										"crud",
										"craft",
										"pagofacil",
										"cl"
									],
									"path": [
										"servicios_tbk",
										"13671"
									]
								}
							},
							"response": []
						},
						{
							"name": "Prueba día 1",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "",
										"type": "text",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ServiciosTbk\": {\r\n        \"validDate\": \"2020-10-10\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://crud.craft.pagofacil.cl/servicios_tbk/13654",
									"protocol": "https",
									"host": [
										"crud",
										"craft",
										"pagofacil",
										"cl"
									],
									"path": [
										"servicios_tbk",
										"13654"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cambio de fecha en servicio Día 24",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "",
										"type": "text",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ServiciosTbk\": {\r\n        \"validDate\": \"2020-11-02\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://crud.craft.pagofacil.cl/servicios_tbk/13671",
									"protocol": "https",
									"host": [
										"crud",
										"craft",
										"pagofacil",
										"cl"
									],
									"path": [
										"servicios_tbk",
										"13671"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cambio de fecha en servicio con plan pay per use",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "",
										"type": "text",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ServiciosTbk\": {\r\n        \"validDate\": \"2020-11-11\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://crud.craft.pagofacil.cl/servicios_tbk/13672",
									"protocol": "https",
									"host": [
										"crud",
										"craft",
										"pagofacil",
										"cl"
									],
									"path": [
										"servicios_tbk",
										"13672"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cambio de fecha en servicio con plan Idependiente",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "",
										"type": "text",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ServiciosTbk\": {\r\n        \"validDate\": \"2020-11-12\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://crud.craft.pagofacil.cl/servicios_tbk/13673",
									"protocol": "https",
									"host": [
										"crud",
										"craft",
										"pagofacil",
										"cl"
									],
									"path": [
										"servicios_tbk",
										"13673"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cambio de fecha en servicio TRX en exceso",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "",
										"type": "text",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ServiciosTbk\": {\r\n        \"validDate\": \"2020-11-11\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://crud.craft.pagofacil.cl/servicios_tbk/13613",
									"protocol": "https",
									"host": [
										"crud",
										"craft",
										"pagofacil",
										"cl"
									],
									"path": [
										"servicios_tbk",
										"13613"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Usuario con One Click TC Cobro exitoso",
					"item": [
						{
							"name": "Cambio de fecha en servicio Día 0",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "",
										"type": "text",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ServiciosTbk\": {\r\n        \"validDate\": \"2020-11-03\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://crud.craft.pagofacil.cl/servicios_tbk/13591",
									"protocol": "https",
									"host": [
										"crud",
										"craft",
										"pagofacil",
										"cl"
									],
									"path": [
										"servicios_tbk",
										"13591"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cambio de fecha en servicio Día 1",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "",
										"type": "text",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ServiciosTbk\": {\r\n        \"validDate\": \"2020-11-04\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://crud.craft.pagofacil.cl/servicios_tbk/13349",
									"protocol": "https",
									"host": [
										"crud",
										"craft",
										"pagofacil",
										"cl"
									],
									"path": [
										"servicios_tbk",
										"13349"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cambio de fecha en servicio Día 2",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "",
										"type": "text",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ServiciosTbk\": {\r\n        \"validDate\": \"2020-11-05\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://crud.craft.pagofacil.cl/servicios_tbk/13352",
									"protocol": "https",
									"host": [
										"crud",
										"craft",
										"pagofacil",
										"cl"
									],
									"path": [
										"servicios_tbk",
										"13352"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cambio de fecha en servicio Día 3",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "",
										"type": "text",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ServiciosTbk\": {\r\n        \"validDate\": \"2020-11-06\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://crud.craft.pagofacil.cl/servicios_tbk/13286",
									"protocol": "https",
									"host": [
										"crud",
										"craft",
										"pagofacil",
										"cl"
									],
									"path": [
										"servicios_tbk",
										"13286"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cambio de fecha en servicio Día 4",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "",
										"type": "text",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ServiciosTbk\": {\r\n        \"validDate\": \"2020-11-07\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://crud.craft.pagofacil.cl/servicios_tbk/13278",
									"protocol": "https",
									"host": [
										"crud",
										"craft",
										"pagofacil",
										"cl"
									],
									"path": [
										"servicios_tbk",
										"13278"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cambio de fecha en servicio Día 5",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "",
										"type": "text",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ServiciosTbk\": {\r\n        \"validDate\": \"2020-11-08\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://crud.craft.pagofacil.cl/servicios_tbk/13279",
									"protocol": "https",
									"host": [
										"crud",
										"craft",
										"pagofacil",
										"cl"
									],
									"path": [
										"servicios_tbk",
										"13279"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cambio de fecha en servicio Día 6",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "",
										"type": "text",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ServiciosTbk\": {\r\n        \"validDate\": \"2020-11-09\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://crud.craft.pagofacil.cl/servicios_tbk/13669",
									"protocol": "https",
									"host": [
										"crud",
										"craft",
										"pagofacil",
										"cl"
									],
									"path": [
										"servicios_tbk",
										"13669"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cambio de fecha en servicio prueba rechazo cobro",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "",
										"type": "text",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ServiciosTbk\": {\r\n        \"validDate\": \"2020-11-04\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://crud.craft.pagofacil.cl/servicios_tbk/13616",
									"protocol": "https",
									"host": [
										"crud",
										"craft",
										"pagofacil",
										"cl"
									],
									"path": [
										"servicios_tbk",
										"13616"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cambio de fecha en servicio prueba rechazo cobro 2",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "",
										"type": "text",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ServiciosTbk\": {\r\n        \"validDate\": \"2020-11-03\",\r\n        \"habilitado\": 1\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://crud.craft.pagofacil.cl/servicios_tbk/13617",
									"protocol": "https",
									"host": [
										"crud",
										"craft",
										"pagofacil",
										"cl"
									],
									"path": [
										"servicios_tbk",
										"13617"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cambio de fecha en servicio Sin plan mensual",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "",
										"type": "text",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ServiciosTbk\": {\r\n        \"validDate\": \"2020-10-30\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://crud.craft.pagofacil.cl/servicios_tbk/13594",
									"protocol": "https",
									"host": [
										"crud",
										"craft",
										"pagofacil",
										"cl"
									],
									"path": [
										"servicios_tbk",
										"13594"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cambio de fecha en servicio con TRX en exceso",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "",
										"type": "text",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ServiciosTbk\": {\r\n        \"validDate\": \"2020-11-04\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://crud.craft.pagofacil.cl/servicios_tbk/13612",
									"protocol": "https",
									"host": [
										"crud",
										"craft",
										"pagofacil",
										"cl"
									],
									"path": [
										"servicios_tbk",
										"13612"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Usuario con One Click TC rechazo",
					"item": [
						{
							"name": "Cambio de fecha en servicio Día 0",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "",
										"type": "text",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ServiciosTbk\": {\r\n        \"validDate\": \"2020-10-29\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://crud.craft.pagofacil.cl/servicios_tbk/13606",
									"protocol": "https",
									"host": [
										"crud",
										"craft",
										"pagofacil",
										"cl"
									],
									"path": [
										"servicios_tbk",
										"13606"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cambio de fecha en servicio Día 1",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "",
										"type": "text",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ServiciosTbk\": {\r\n        \"validDate\": \"2020-10-30\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://crud.craft.pagofacil.cl/servicios_tbk/13607",
									"protocol": "https",
									"host": [
										"crud",
										"craft",
										"pagofacil",
										"cl"
									],
									"path": [
										"servicios_tbk",
										"13607"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cambio de fecha en servicio Día 2",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "",
										"type": "text",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ServiciosTbk\": {\r\n        \"validDate\": \"2020-10-31\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://crud.craft.pagofacil.cl/servicios_tbk/13608",
									"protocol": "https",
									"host": [
										"crud",
										"craft",
										"pagofacil",
										"cl"
									],
									"path": [
										"servicios_tbk",
										"13608"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cambio de fecha en servicio Día 3",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "",
										"type": "text",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ServiciosTbk\": {\r\n        \"validDate\": \"2020-11-01\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://crud.craft.pagofacil.cl/servicios_tbk/13609",
									"protocol": "https",
									"host": [
										"crud",
										"craft",
										"pagofacil",
										"cl"
									],
									"path": [
										"servicios_tbk",
										"13609"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cambio de fecha en servicio Día 4",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "",
										"type": "text",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ServiciosTbk\": {\r\n        \"validDate\": \"2020-11-02\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://crud.craft.pagofacil.cl/servicios_tbk/13610",
									"protocol": "https",
									"host": [
										"crud",
										"craft",
										"pagofacil",
										"cl"
									],
									"path": [
										"servicios_tbk",
										"13610"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cambio de fecha en servicio Día 5",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "",
										"type": "text",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ServiciosTbk\": {\r\n        \"validDate\": \"2020-11-03\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://crud.craft.pagofacil.cl/servicios_tbk/13611",
									"protocol": "https",
									"host": [
										"crud",
										"craft",
										"pagofacil",
										"cl"
									],
									"path": [
										"servicios_tbk",
										"13611"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cambio de fecha en servicio Sin plan mensual",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "",
										"type": "text",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ServiciosTbk\": {\r\n        \"validDate\": \"2020-10-29\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://crud.craft.pagofacil.cl/servicios_tbk/13611",
									"protocol": "https",
									"host": [
										"crud",
										"craft",
										"pagofacil",
										"cl"
									],
									"path": [
										"servicios_tbk",
										"13611"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "05c7f6a3-add7-4c74-ac2b-8214da09e522",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "9b605e2a-c950-419b-9875-a9dde8849d96",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "b64558a8-16f1-4759-b32c-8eafe48c1d12",
			"key": "Protocol",
			"value": "https"
		},
		{
			"id": "5e7e209d-4ade-4c9f-a677-429548a35b87",
			"key": "Address_Craft",
			"value": "x.pagofacil.online"
		},
		{
			"id": "4e0d97f7-9109-4322-8949-19cfc507453f",
			"key": "URL_CRAFT",
			"value": "{{Protocol}}://{{Address_Craft}}"
		},
		{
			"id": "dc1a5a8a-499b-49d6-a2ea-9e1b1db52957",
			"key": "Address_Api_Token",
			"value": "apis.pagofacil.xyz"
		},
		{
			"id": "a139c28d-cb16-4965-81c0-94883ae8addf",
			"key": "URL_ApiToken",
			"value": "{{Protocol}}://{{Address_Api_Token}}"
		},
		{
			"id": "691396cc-8816-492e-9d6f-dde2cebf21c8",
			"key": "Address_CompletarOrden",
			"value": "uzotywpg3a.execute-api.us-west-2.amazonaws.com"
		},
		{
			"id": "d973f203-1e5e-4c3e-9eeb-3a70e48fbf4c",
			"key": "URL_CompletarOrden",
			"value": "{{Protocol}}://{{Address_CompletarOrden}}"
		},
		{
			"id": "f06d4476-13d3-43e8-a349-483546ad1ca1",
			"key": "Address_RegistroUser",
			"value": "v2.api.pagofacil.online"
		},
		{
			"id": "dc68f148-9515-4569-b061-322a7370f678",
			"key": "URL_CRAFT_Registro",
			"value": "{{Protocol}}://{{Address_RegistroUser}}"
		},
		{
			"id": "449286df-6050-4515-9c63-76e10174b51c",
			"key": "idServicio",
			"value": "3071"
		},
		{
			"id": "71451d0e-a151-45a4-8476-f56cc88aa2e0",
			"key": "monto",
			"value": "50000"
		}
	],
	"protocolProfileBehavior": {}
}