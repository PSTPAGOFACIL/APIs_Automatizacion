{
	"info": {
		"_postman_id": "aabb9cc1-4afa-4bc3-8146-a2c92f397c8e",
		"name": "API_Reportes",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "GenerarToken_UserSinPermiso",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f219f4c9-8631-42d9-9c1c-0bf27746adae",
						"exec": [
							"//Pasar token a variable Global",
							"let jsondata = pm.response.json();",
							"pm.globals.set(\"UserSinPermiso\",jsondata.data.access_token_jwt);",
							"",
							"let estado = pm.response.code;",
							"console.log(estado);",
							"",
							"//Validar que codigo sea el requerido",
							"pm.test(\"CP_001_Generar Token | Se requiere: Status 200 | valor obtenido: \"+estado, function () {",
							"    pm.expect(estado).to.eql(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"qa_kibernum2020@yopmail.com\",\n    \"password\": \"Hola1234*\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL_QA}}/users/login?",
					"host": [
						"{{URL_QA}}"
					],
					"path": [
						"users",
						"login"
					],
					"query": [
						{
							"key": "",
							"value": null
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GenerarTokenJuridico",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "dcbb3fed-5fd0-41e9-86f8-4b99aa0b5398",
						"exec": [
							"//Pasar token a variable Global",
							"let jsondata = pm.response.json();",
							"pm.globals.set(\"TokenAlexUser\", jsondata.data.access_token_jwt);",
							"let estado = pm.response.code;",
							"console.log(estado);",
							"",
							"//Validar que codigo sea el requerido",
							"pm.test(\"CP_001_Generar Token | Se requiere: Status 200 | valor obtenido: \" + estado, function () {",
							"    pm.expect(estado).to.eql(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"alexander.cabrera@kibernum.com\",\n    \"password\": \"Hola1234*\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL_QA}}/users/login?",
					"host": [
						"{{URL_QA}}"
					],
					"path": [
						"users",
						"login"
					],
					"query": [
						{
							"key": "",
							"value": null
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener abonos disponibles en un día",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a9dab445-ac36-4299-9c8d-2207ad4633af",
						"exec": [
							"let jsonData = pm.response.json();\r",
							"\r",
							"let estado = pm.response.code;\r",
							"console.log(estado);\r",
							"pm.test(\"Obtener abonos disponibles en un día | Request Status 200 | Valor obtenido: \"+estado, function () {\r",
							"    pm.expect(estado).to.eql(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
						"key": "Authorization",
						"value": "Bearer {{TokenAlexUser}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"idUser\": 13191,\n    \"initialDate\": 1591801119,\n    \"finalDate\": 1591801119\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL_QA}}/reports/remittances?pageNumber=1&pageSize=10",
					"host": [
						"{{URL_QA}}"
					],
					"path": [
						"reports",
						"remittances"
					],
					"query": [
						{
							"key": "pageNumber",
							"value": "1"
						},
						{
							"key": "pageSize",
							"value": "10"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Abonos en un rango de fecha válido",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fac1540b-970f-4b52-ac5c-29ef15b36f58",
						"exec": [
							"let jsonData = pm.response.json();\r",
							"\r",
							"let estado = pm.response.code;\r",
							"console.log(estado);\r",
							"pm.test(\"Abonos en un rango de fecha válido | Request Status 200 | Valor obtenido: \"+estado, function () {\r",
							"    pm.expect(estado).to.eql(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"type": "text",
						"value": "Bearer {{TokenAlexUser}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"idUser\": 15802,\n    \"initialDate\": 1577836800,\n    \"finalDate\": 1594992952\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL_QA}}/reports/remittances?pageNumber=1&pageSize=10",
					"host": [
						"{{URL_QA}}"
					],
					"path": [
						"reports",
						"remittances"
					],
					"query": [
						{
							"key": "pageNumber",
							"value": "1"
						},
						{
							"key": "pageSize",
							"value": "10"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Abonos inexistentes en las fechas",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "448f2325-e2e2-4b44-abb6-fe3a22cfc865",
						"exec": [
							"let jsonData = pm.response.json();\r",
							"\r",
							"let estado = pm.response.code;\r",
							"console.log(estado);\r",
							"pm.test(\"Abonos inexistentes en las fechas | Request Status 200 | Valor obtenido: \"+estado, function () {\r",
							"    pm.expect(estado).to.eql(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Se valida que arreglo esta vacio\", function () {\r",
							"       pm.expect([]).to.be.empty;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"type": "text",
						"value": "Bearer {{TokenAlexUser}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"idUser\": 1,\n    \"initialDate\": 1588291200,\n    \"finalDate\": 1589846399\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL_QA}}/reports/remittances?pageNumber=1&pageSize=10",
					"host": [
						"{{URL_QA}}"
					],
					"path": [
						"reports",
						"remittances"
					],
					"query": [
						{
							"key": "pageNumber",
							"value": "1"
						},
						{
							"key": "pageSize",
							"value": "10"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Falta un parámetro o inválido",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "346a7770-72fd-4eca-b156-d3b4aa426af2",
						"exec": [
							"let jsonData = pm.response.json();\r",
							"\r",
							"let estado = pm.response.code;\r",
							"console.log(estado);\r",
							"pm.test(\"Falta un parámetro o inválido | Request Status 422 | Valor obtenido: \"+estado, function () {\r",
							"    pm.expect(estado).to.eql(422);\r",
							"});\r",
							"\r",
							"let message = jsonData.message;\r",
							"console.log(message);\r",
							"\r",
							"pm.test(\"Se valida mensaje de respuesta | Se requiere mensaje: Invalid request body | valor obtenido: \" + message, function () {\r",
							"    pm.expect(message).to.eql(\"Invalid request body\");\r",
							"}); "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"type": "text",
						"value": "Bearer {{TokenAlexUser}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"idUser\": \"1\",\n    \"initialDate\": 1588291200,\n    \"finalDate\": \"\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL_QA}}/reports/remittances?pageNumber=1&pageSize=10",
					"host": [
						"{{URL_QA}}"
					],
					"path": [
						"reports",
						"remittances"
					],
					"query": [
						{
							"key": "pageNumber",
							"value": "1"
						},
						{
							"key": "pageSize",
							"value": "10"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Usuario sin permisos",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d747604c-2b88-4940-a179-1cd2eada057f",
						"exec": [
							"let jsonData = pm.response.json();\r",
							"\r",
							"let estado = pm.response.code;\r",
							"console.log(estado);\r",
							"pm.test(\"Usuario sin permisos | Request Status 403 | Valor obtenido: \"+estado, function () {\r",
							"    pm.expect(estado).to.eql(403);\r",
							"});\r",
							"\r",
							"let message = jsonData.message;\r",
							"console.log(message);\r",
							"\r",
							"pm.test(\"Se valida mensaje de respuesta | Se requiere mensaje: User doesn't exist or doesn't have permissions | valor obtenido: \" + message, function () {\r",
							"    pm.expect(message).to.eql(\"User doesn't exist or doesn't have permissions\");\r",
							"}); "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{UserSinPermiso}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"idUser\": 1,\n    \"initialDate\": 1588291200,\n    \"finalDate\": 1588291200\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL_QA}}/reports/remittances?pageNumber=1&pageSize=10",
					"host": [
						"{{URL_QA}}"
					],
					"path": [
						"reports",
						"remittances"
					],
					"query": [
						{
							"key": "pageNumber",
							"value": "1"
						},
						{
							"key": "pageSize",
							"value": "10"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "No se envía Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "021da8c0-31e6-49fc-9944-a0b068133cb2",
						"exec": [
							"let jsonData = pm.response.json();\r",
							"\r",
							"let estado = pm.response.code;\r",
							"console.log(estado);\r",
							"pm.test(\"No se envía Token | Request Status 401 | Valor obtenido: \"+estado, function () {\r",
							"    pm.expect(estado).to.eql(401);\r",
							"});\r",
							"\r",
							"let message = jsonData.message\r",
							"console.log(message)\r",
							"\r",
							"pm.test(\"Se valida mensaje de respuesta | Se requiere mensaje: Unauthorized | valor obtenido: \" + message, function () {\r",
							"    pm.expect(message).to.eql(\"Unauthorized\");\r",
							"}); "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"idUser\": 1,\n    \"initialDate\": 1588291200,\n    \"finalDate\": 1588291200\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL_QA}}/reports/remittances?pageNumber=1&pageSize=10",
					"host": [
						"{{URL_QA}}"
					],
					"path": [
						"reports",
						"remittances"
					],
					"query": [
						{
							"key": "pageNumber",
							"value": "1"
						},
						{
							"key": "pageSize",
							"value": "10"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Internal Server error 500",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4c080dd7-4d0b-449d-8aff-a55701a09dd1",
						"exec": [
							"let jsonData = pm.response.json();\r",
							"\r",
							"let estado = pm.response.code;\r",
							"console.log(estado);\r",
							"pm.test(\"Servidor caído | Request Status 500 | Valor obtenido: \"+estado, function () {\r",
							"    pm.expect(estado).to.eql(500);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{TokenAlexUser}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"idUser\": 1,\n    \"initialDate\": 1588291200,\n    \"finalDate\": 1588291200\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL_QA}}/reports/remittances?pageNumber=0&pageSize=10",
					"host": [
						"{{URL_QA}}"
					],
					"path": [
						"reports",
						"remittances"
					],
					"query": [
						{
							"key": "pageNumber",
							"value": "0"
						},
						{
							"key": "pageSize",
							"value": "10"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Descarga de archivo con datos incompletos",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e92b7726-100e-43f8-acd6-4dd317561c9a",
						"exec": [
							"let jsonData = pm.response.json();\r",
							"\r",
							"let estado = pm.response.code;\r",
							"console.log(estado);\r",
							"pm.test(\"Descarga de archivo con datos incompletos | Request Status 200 | Valor obtenido: \"+estado, function () {\r",
							"    pm.expect(estado).to.eql(422);\r",
							"});\r",
							"\r",
							"let message = jsonData.message;\r",
							"console.log(message);\r",
							"\r",
							"pm.test(\"Se valida mensaje de respuesta | Se requiere mensaje: Invalid request body | valor obtenido: \" + message, function () {\r",
							"    pm.expect(message).to.eql(\"Invalid request body\");\r",
							"}); "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"type": "text",
						"value": "Bearer {{TokenAlexUser}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"idUser\": 1\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL_QA}}/reports/remittance/file",
					"host": [
						"{{URL_QA}}"
					],
					"path": [
						"reports",
						"remittance",
						"file"
					]
				}
			},
			"response": []
		},
		{
			"name": "Descarga de archivo  - Validacion tipo de datos",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ebaa9add-d594-43f0-b1a9-6f9a4c9aa583",
						"exec": [
							"let jsonData = pm.response.json();\r",
							"\r",
							"let estado = pm.response.code;\r",
							"console.log(estado);\r",
							"pm.test(\"Descarga de archivo / Validacion tipo de datos | Request Status 422 | Valor obtenido: \"+estado, function () {\r",
							"    pm.expect(estado).to.eql(422);\r",
							"});\r",
							"\r",
							"let message = jsonData.message;\r",
							"console.log(message);\r",
							"\r",
							"pm.test(\"Se valida mensaje de respuesta | Se requiere mensaje: Invalid request body | valor obtenido: \" + message, function () {\r",
							"    pm.expect(message).to.eql(\"Invalid request body\");\r",
							"}); "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{TokenAlexUser}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"idUser\": 1,\n    \"dateRemittance\": \"1588118400\",\n    \"amount\": 96296\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL_QA}}/reports/remittance/file",
					"host": [
						"{{URL_QA}}"
					],
					"path": [
						"reports",
						"remittance",
						"file"
					]
				}
			},
			"response": []
		},
		{
			"name": "Descarga de archivo - Internal Server error 500",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f4d429cb-fa0e-4c90-808d-27f9e45b0f7b",
						"exec": [
							"let jsonData = pm.response.json();\r",
							"\r",
							"let estado = pm.response.code;\r",
							"console.log(estado);\r",
							"pm.test(\"Descarga de archivo - Error Interno del Servidor | Request Status 500 | Valor obtenido: \"+estado, function () {\r",
							"    pm.expect(estado).to.eql(500);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"type": "text",
						"value": "Bearer {{TokenAlexUser}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"idUser\": 1,\r\n\t\"dateRemittance\": 15881184009978765646465465,\r\n\t\"amount\": 2983284238943\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL_QA}}/reports/remittance/file",
					"host": [
						"{{URL_QA}}"
					],
					"path": [
						"reports",
						"remittance",
						"file"
					]
				}
			},
			"response": []
		},
		{
			"name": "Descarga archivo - Usuario sin permisos",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "41113ddd-4bad-46b2-a927-2d5ef9b8d745",
						"exec": [
							"let jsonData = pm.response.json();\r",
							"\r",
							"let estado = pm.response.code;\r",
							"console.log(estado);\r",
							"pm.test(\"Usuario sin permisos | Request Status 403 | Valor obtenido: \"+estado, function () {\r",
							"    pm.expect(estado).to.eql(403);\r",
							"});\r",
							"\r",
							"let message = jsonData.message;\r",
							"console.log(message);\r",
							"\r",
							"pm.test(\"Se valida mensaje de respuesta | Se requiere mensaje: User doesn't exist or doesn't have permissions | valor obtenido: \" + message, function () {\r",
							"    pm.expect(message).to.eql(\"User doesn't exist or doesn't have permissions\");\r",
							"}); "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{UserSinPermiso}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"idUser\": 1,\n    \"dateRemittance\": 1588118400,\n    \"amount\": 96296\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL_QA}}/reports/remittance/file",
					"host": [
						"{{URL_QA}}"
					],
					"path": [
						"reports",
						"remittance",
						"file"
					]
				}
			},
			"response": []
		},
		{
			"name": "Descarga archivo -No se envía Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3b8aa125-4557-4f74-a60f-58a9c7b1d750",
						"exec": [
							"let jsonData = pm.response.json();\r",
							"\r",
							"let estado = pm.response.code;\r",
							"console.log(estado);\r",
							"pm.test(\"No se envía Token | Request Status 401 | Valor obtenido: \"+estado, function () {\r",
							"    pm.expect(estado).to.eql(401);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"idUser\": 1,\n    \"initialDate\": 1588291200,\n    \"finalDate\": 1588291200\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL_QA}}/reports/remittance/file",
					"host": [
						"{{URL_QA}}"
					],
					"path": [
						"reports",
						"remittance",
						"file"
					]
				}
			},
			"response": []
		},
		{
			"name": "Descarga archivo - Validación campo Monto",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d0f6f2a0-fce9-4b10-b864-fb996ee8b6b1",
						"exec": [
							"let jsonData = pm.response.json();\r",
							"\r",
							"let estado = pm.response.code;\r",
							"console.log(estado);\r",
							"pm.test(\"Descarga archivo - Validación campo Monto | Request Status 422 | Valor obtenido: \"+estado, function () {\r",
							"    pm.expect(estado).to.eql(422);\r",
							"});\r",
							"\r",
							"let message = jsonData.message\r",
							"console.log(message)\r",
							"pm.test(\"Valido Mensaje = Missing or invalid fields\"), function () {\r",
							"    pm.expect(message).to.eql(\"Missing or invalid fields\");\r",
							"};"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{TokenAlexUser}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"idUser\": 1,\n    \"dateRemittance\": 1588118400,\n    \"amount\": 78769876875576576\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL_QA}}/reports/remittance/file",
					"host": [
						"{{URL_QA}}"
					],
					"path": [
						"reports",
						"remittance",
						"file"
					]
				}
			},
			"response": []
		},
		{
			"name": "Descarga archivo reporte de abonos",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "dc05e089-f754-47d0-869a-ef4a467971b5",
						"exec": [
							"let jsonData = pm.response.json();\r",
							"\r",
							"let estado = pm.response.code;\r",
							"console.log(estado);\r",
							"pm.test(\"Descarga archivo reporte de abonos | Request Status 200 | Valor obtenido: \"+estado, function () {\r",
							"    pm.expect(estado).to.eql(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{TokenAlexUser}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"idUser\": 15802,\n\t\"dateRemittance\": 1592233119,\n\t\"amount\": 20000\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL_QA}}/reports/remittance/file",
					"host": [
						"{{URL_QA}}"
					],
					"path": [
						"reports",
						"remittance",
						"file"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "dcaa1d30-b747-4da2-8ddd-40beddbd90ff",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "6475feb5-7716-4ea5-9280-2e847a477252",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "019ee6c5-d78d-4dda-a9ce-af76b8a7de17",
			"key": "Protocol",
			"value": "https"
		},
		{
			"id": "44c9b22b-d8a8-45ed-a469-15ec631a2cb1",
			"key": "Address_QA",
			"value": "api.qa.pagofacil.cl"
		},
		{
			"id": "952296f2-d295-4e74-b7cb-dad11b2e7577",
			"key": "URL_QA",
			"value": "{{Protocol}}://{{Address_QA}}"
		},
		{
			"id": "2bddc8aa-5f5f-45b7-bf88-93445e7e8870",
			"key": "Address_Api_Token",
			"value": "apis.pagofacil.xyz"
		},
		{
			"id": "2ffd24e1-9493-43c1-9fbe-664eccf75caf",
			"key": "URL_ApiToken",
			"value": "{{Protocol}}://{{Address_Api_Token}}"
		},
		{
			"id": "f5c31000-a525-447e-8245-2c2694ddc089",
			"key": "Address_CompletarOrden",
			"value": "uzotywpg3a.execute-api.us-west-2.amazonaws.com"
		},
		{
			"id": "0ba6b26e-ead1-4784-9940-fe4188c89ce5",
			"key": "URL_CompletarOrden",
			"value": "{{Protocol}}://{{Address_CompletarOrden}}"
		},
		{
			"id": "fd0f6419-2215-4848-8e57-8a3c9053e554",
			"key": "Address_RegistroUser",
			"value": "v2.api.pagofacil.online"
		},
		{
			"id": "2c200672-787d-4869-a605-d8c10baee309",
			"key": "URL_CRAFT_Registro",
			"value": "{{Protocol}}://{{Address_RegistroUser}}"
		},
		{
			"id": "b65cc17f-d687-405c-add9-239581451325",
			"key": "idServicio",
			"value": "3071"
		},
		{
			"id": "2a1029e5-feb2-4012-8fb2-962258fd5193",
			"key": "monto",
			"value": "50000"
		}
	],
	"protocolProfileBehavior": {}
}